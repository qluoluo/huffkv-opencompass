//
// Generated by LLVM NVPTX Back-End
//

.version 8.7
.target sm_90a
.address_size 64

	// .globl	attn_forward_stage1_pruned // -- Begin function attn_forward_stage1_pruned
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @attn_forward_stage1_pruned
.visible .entry attn_forward_stage1_pruned(
	.param .u64 .ptr .global .align 1 attn_forward_stage1_pruned_param_0,
	.param .u64 .ptr .global .align 1 attn_forward_stage1_pruned_param_1,
	.param .u64 .ptr .global .align 1 attn_forward_stage1_pruned_param_2,
	.param .u64 .ptr .global .align 1 attn_forward_stage1_pruned_param_3,
	.param .u64 .ptr .global .align 1 attn_forward_stage1_pruned_param_4,
	.param .u64 .ptr .global .align 1 attn_forward_stage1_pruned_param_5,
	.param .u64 .ptr .global .align 1 attn_forward_stage1_pruned_param_6,
	.param .u64 .ptr .global .align 1 attn_forward_stage1_pruned_param_7,
	.param .f32 attn_forward_stage1_pruned_param_8,
	.param .u32 attn_forward_stage1_pruned_param_9,
	.param .u32 attn_forward_stage1_pruned_param_10,
	.param .u32 attn_forward_stage1_pruned_param_11,
	.param .u64 .ptr .global .align 1 attn_forward_stage1_pruned_param_12
)
.reqntid 128
{
	.reg .pred 	%p<113>;
	.reg .b16 	%rs<130>;
	.reg .b32 	%r<3457>;
	.reg .b64 	%rd<230>;
	.loc	1 94 0                          // ffa_triton_v1016-2.py:94:0
$L__func_begin0:
	.loc	1 94 0                          // ffa_triton_v1016-2.py:94:0

// %bb.0:
	ld.param.b32 	%r183, [attn_forward_stage1_pruned_param_9];
	ld.param.b64 	%rd27, [attn_forward_stage1_pruned_param_0];
$L__tmp0:
	.loc	1 103 28                        // ffa_triton_v1016-2.py:103:28
	mov.u32 	%r1, %ctaid.x;
	ld.param.b64 	%rd28, [attn_forward_stage1_pruned_param_1];
	.loc	1 104 28                        // ffa_triton_v1016-2.py:104:28
	mov.u32 	%r2, %ctaid.y;
	.loc	1 105 24                        // ffa_triton_v1016-2.py:105:24
	mul.lo.s32 	%r1445, %r1, 3;
	.loc	1 108 18                        // ffa_triton_v1016-2.py:108:18
	shl.b32 	%r3, %r2, 8;
	.loc	1 111 28                        // ffa_triton_v1016-2.py:111:28
	mov.u32 	%r4, %tid.x;
	bfe.s32 	%r1446, %r4, 2, 1;
	and.b32 	%r5, %r4, 4;
	ld.param.b64 	%rd29, [attn_forward_stage1_pruned_param_6];
	and.b32 	%r6, %r4, 8;
	ld.param.b32 	%r1447, [attn_forward_stage1_pruned_param_8];
	and.b32 	%r7, %r4, 16;
	bfe.u32 	%r8, %r4, 2, 3;
	or.b32 	%r1448, %r8, 8;
	and.b32 	%r9, %r4, 32;
	and.b32 	%r10, %r4, 64;
	bfe.u32 	%r1450, %r4, 4, 3;
	or.b32 	%r1451, %r1450, 8;
	bfe.u32 	%r11, %r4, 5, 2;
	and.b32 	%r12, %r4, 15;
	.loc	1 112 22                        // ffa_triton_v1016-2.py:112:22
	setp.lt.u32 	%p23, %r8, 3;
	setp.lt.u32 	%p1, %r1450, 3;
	setp.lt.u32 	%p25, %r12, 3;
	.loc	1 115 30                        // ffa_triton_v1016-2.py:115:30
	add.s32 	%r1452, %r1450, %r1445;
	add.s32 	%r1453, %r1451, %r1445;
	add.s32 	%r1454, %r8, %r1445;
	add.s32 	%r1455, %r1448, %r1445;
	.loc	1 115 47                        // ffa_triton_v1016-2.py:115:47
	shl.b32 	%r1456, %r1452, 7;
	shl.b32 	%r1457, %r1453, 7;
	.loc	1 115 19                        // ffa_triton_v1016-2.py:115:19
	mul.wide.s32 	%rd30, %r1456, 2;
	add.s64 	%rd31, %rd27, %rd30;
	mul.wide.s32 	%rd32, %r1457, 2;
	add.s64 	%rd33, %rd27, %rd32;
	.loc	1 115 58                        // ffa_triton_v1016-2.py:115:58
	shl.b32 	%r1458, %r4, 3;
	and.b32 	%r1459, %r1458, 120;
	shl.b32 	%r18, %r4, 2;
	and.b32 	%r1460, %r18, 12;
	shl.b32 	%r1461, %r5, 2;
	or.b32 	%r1462, %r1460, %r1461;
	shl.b32 	%r1463, %r6, 2;
	or.b32 	%r19, %r1462, %r1463;
	.loc	1 115 51                        // ffa_triton_v1016-2.py:115:51
	mul.wide.u32 	%rd34, %r1459, 2;
	add.s64 	%rd7, %rd31, %rd34;
	add.s64 	%rd8, %rd33, %rd34;
	mov.b32 	%r747, 0;
	.loc	1 116 23                        // ffa_triton_v1016-2.py:116:23
	// begin inline asm
	mov.u32 %r185, %r747;
	mov.u32 %r186, %r747;
	mov.u32 %r187, %r747;
	mov.u32 %r188, %r747;
	@%p1 ld.global.v4.b32 { %r185, %r186, %r187, %r188 }, [ %rd7 + 0 ];
	// end inline asm
	mov.pred 	%p2, 0;
	// begin inline asm
	mov.u32 %r193, %r747;
	mov.u32 %r194, %r747;
	mov.u32 %r195, %r747;
	mov.u32 %r196, %r747;
	@%p2 ld.global.v4.b32 { %r193, %r194, %r195, %r196 }, [ %rd8 + 0 ];
	// end inline asm
	and.b32 	%r1465, %r4, 48;
	xor.b32 	%r1466, %r1459, %r1465;
	shl.b32 	%r1467, %r1466, 1;
	mov.b32 	%r1468, global_smem;
	add.s32 	%r1469, %r1468, 32768;
	add.s32 	%r1470, %r1469, %r1467;
	shl.b32 	%r1471, %r1450, 8;
	add.s32 	%r1472, %r1470, %r1471;
	st.shared.v4.b32 	[%r1472], {%r185, %r186, %r187, %r188};
	st.shared.v4.b32 	[%r1472+2048], {%r193, %r194, %r195, %r196};
	.loc	1 129 49                        // ffa_triton_v1016-2.py:129:49
	shr.u32 	%r22, %r4, 3;
	bfe.u32 	%r1473, %r4, 3, 4;
	shl.b32 	%r1474, %r4, 1;
	and.b32 	%r23, %r1474, 6;
	shr.u32 	%r24, %r9, 2;
	or.b32 	%r1475, %r23, %r24;
	shr.u32 	%r25, %r10, 2;
	or.b32 	%r1476, %r1475, %r25;
	.loc	1 129 36                        // ffa_triton_v1016-2.py:129:36
	or.b32 	%r1477, %r1473, %r3;
	or.b32 	%r1478, %r1477, 16;
	or.b32 	%r1479, %r1477, 32;
	or.b32 	%r1480, %r1477, 48;
	or.b32 	%r1481, %r1477, 64;
	or.b32 	%r1482, %r1477, 80;
	or.b32 	%r1483, %r1477, 96;
	or.b32 	%r1484, %r3, %r22;
	or.b32 	%r1485, %r1484, 112;
	or.b32 	%r1486, %r1477, 128;
	or.b32 	%r1487, %r1477, 144;
	or.b32 	%r1488, %r1477, 160;
	or.b32 	%r1489, %r1477, 176;
	or.b32 	%r1490, %r1477, 192;
	or.b32 	%r1491, %r1477, 208;
	or.b32 	%r1492, %r1477, 224;
	or.b32 	%r1493, %r1484, 240;
	or.b32 	%r26, %r1476, %r3;
	or.b32 	%r27, %r26, 1;
	or.b32 	%r28, %r26, 32;
	or.b32 	%r29, %r26, 33;
	or.b32 	%r30, %r26, 64;
	or.b32 	%r31, %r26, 65;
	or.b32 	%r32, %r26, 96;
	or.b32 	%r33, %r26, 97;
	or.b32 	%r34, %r26, 128;
	or.b32 	%r35, %r26, 129;
	or.b32 	%r36, %r26, 160;
	or.b32 	%r37, %r26, 161;
	or.b32 	%r38, %r26, 192;
	or.b32 	%r39, %r26, 193;
	or.b32 	%r40, %r26, 224;
	or.b32 	%r41, %r26, 225;
	.loc	1 130 32                        // ffa_triton_v1016-2.py:130:32
	setp.lt.s32 	%p3, %r1477, %r183;
	setp.lt.s32 	%p4, %r1478, %r183;
	setp.lt.s32 	%p5, %r1479, %r183;
	setp.lt.s32 	%p6, %r1480, %r183;
	setp.lt.s32 	%p7, %r1481, %r183;
	setp.lt.s32 	%p8, %r1482, %r183;
	setp.lt.s32 	%p9, %r1483, %r183;
	setp.lt.s32 	%p10, %r1485, %r183;
	setp.lt.s32 	%p11, %r1486, %r183;
	setp.lt.s32 	%p12, %r1487, %r183;
	setp.lt.s32 	%p13, %r1488, %r183;
	setp.lt.s32 	%p14, %r1489, %r183;
	setp.lt.s32 	%p15, %r1490, %r183;
	setp.lt.s32 	%p16, %r1491, %r183;
	setp.lt.s32 	%p17, %r1492, %r183;
	setp.lt.s32 	%p18, %r1493, %r183;
	setp.lt.s32 	%p26, %r26, %r183;
	setp.lt.s32 	%p27, %r27, %r183;
	setp.lt.s32 	%p28, %r28, %r183;
	setp.lt.s32 	%p29, %r29, %r183;
	setp.lt.s32 	%p30, %r30, %r183;
	setp.lt.s32 	%p31, %r31, %r183;
	setp.lt.s32 	%p32, %r32, %r183;
	setp.lt.s32 	%p33, %r33, %r183;
	setp.lt.s32 	%p34, %r34, %r183;
	setp.lt.s32 	%p35, %r35, %r183;
	setp.lt.s32 	%p36, %r36, %r183;
	setp.lt.s32 	%p37, %r37, %r183;
	setp.lt.s32 	%p38, %r38, %r183;
	setp.lt.s32 	%p39, %r39, %r183;
	setp.lt.s32 	%p40, %r40, %r183;
	setp.lt.s32 	%p41, %r41, %r183;
	.loc	1 133 36                        // ffa_triton_v1016-2.py:133:36
	shl.b32 	%r74, %r1, 7;
	.loc	1 133 40                        // ffa_triton_v1016-2.py:133:40
	mul.lo.s32 	%r1495, %r74, %r183;
	.loc	1 133 26                        // ffa_triton_v1016-2.py:133:26
	cvt.s64.s32 	%rd35, %r1495;
	add.s64 	%rd36, %rd28, %rd35;
	.loc	1 133 66                        // ffa_triton_v1016-2.py:133:66
	shl.b32 	%r1496, %r1477, 7;
	shl.b32 	%r1497, %r1478, 7;
	shl.b32 	%r1498, %r1479, 7;
	shl.b32 	%r1499, %r1480, 7;
	shl.b32 	%r1500, %r1481, 7;
	shl.b32 	%r1501, %r1482, 7;
	shl.b32 	%r1502, %r1483, 7;
	shl.b32 	%r1503, %r1485, 7;
	shl.b32 	%r1504, %r1486, 7;
	shl.b32 	%r1505, %r1487, 7;
	shl.b32 	%r1506, %r1488, 7;
	shl.b32 	%r1507, %r1489, 7;
	shl.b32 	%r1508, %r1490, 7;
	shl.b32 	%r1509, %r1491, 7;
	shl.b32 	%r1510, %r1492, 7;
	shl.b32 	%r1511, %r1493, 7;
	.loc	1 133 45                        // ffa_triton_v1016-2.py:133:45
	cvt.u64.u32 	%rd37, %r1496;
	add.s64 	%rd38, %rd36, %rd37;
	cvt.u64.u32 	%rd39, %r1497;
	add.s64 	%rd40, %rd36, %rd39;
	cvt.u64.u32 	%rd41, %r1498;
	add.s64 	%rd42, %rd36, %rd41;
	cvt.u64.u32 	%rd43, %r1499;
	add.s64 	%rd44, %rd36, %rd43;
	cvt.u64.u32 	%rd45, %r1500;
	add.s64 	%rd46, %rd36, %rd45;
	cvt.u64.u32 	%rd47, %r1501;
	add.s64 	%rd48, %rd36, %rd47;
	cvt.u64.u32 	%rd49, %r1502;
	add.s64 	%rd50, %rd36, %rd49;
	cvt.u64.u32 	%rd51, %r1503;
	add.s64 	%rd52, %rd36, %rd51;
	cvt.u64.u32 	%rd53, %r1504;
	add.s64 	%rd54, %rd36, %rd53;
	cvt.u64.u32 	%rd55, %r1505;
	add.s64 	%rd56, %rd36, %rd55;
	cvt.u64.u32 	%rd57, %r1506;
	add.s64 	%rd58, %rd36, %rd57;
	cvt.u64.u32 	%rd59, %r1507;
	add.s64 	%rd60, %rd36, %rd59;
	cvt.u64.u32 	%rd61, %r1508;
	add.s64 	%rd62, %rd36, %rd61;
	cvt.u64.u32 	%rd63, %r1509;
	add.s64 	%rd64, %rd36, %rd63;
	cvt.u64.u32 	%rd65, %r1510;
	add.s64 	%rd66, %rd36, %rd65;
	cvt.u64.u32 	%rd67, %r1511;
	add.s64 	%rd68, %rd36, %rd67;
	.loc	1 133 78                        // ffa_triton_v1016-2.py:133:78
	shl.b32 	%r1512, %r4, 4;
	and.b32 	%r1513, %r1512, 112;
	.loc	1 133 71                        // ffa_triton_v1016-2.py:133:71
	cvt.u64.u32 	%rd69, %r1513;
	add.s64 	%rd9, %rd38, %rd69;
	add.s64 	%rd10, %rd40, %rd69;
	add.s64 	%rd11, %rd42, %rd69;
	add.s64 	%rd12, %rd44, %rd69;
	add.s64 	%rd13, %rd46, %rd69;
	add.s64 	%rd14, %rd48, %rd69;
	add.s64 	%rd15, %rd50, %rd69;
	add.s64 	%rd16, %rd52, %rd69;
	add.s64 	%rd17, %rd54, %rd69;
	add.s64 	%rd18, %rd56, %rd69;
	add.s64 	%rd19, %rd58, %rd69;
	add.s64 	%rd20, %rd60, %rd69;
	add.s64 	%rd21, %rd62, %rd69;
	add.s64 	%rd22, %rd64, %rd69;
	add.s64 	%rd23, %rd66, %rd69;
	add.s64 	%rd24, %rd68, %rd69;
	.loc	1 135 12                        // ffa_triton_v1016-2.py:135:12
	// begin inline asm
	mov.u32 %r201, %r747;
	mov.u32 %r202, %r747;
	mov.u32 %r203, %r747;
	mov.u32 %r204, %r747;
	@%p3 ld.global.v4.b32 { %r201, %r202, %r203, %r204 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r209, %r747;
	mov.u32 %r210, %r747;
	mov.u32 %r211, %r747;
	mov.u32 %r212, %r747;
	@%p4 ld.global.v4.b32 { %r209, %r210, %r211, %r212 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r217, %r747;
	mov.u32 %r218, %r747;
	mov.u32 %r219, %r747;
	mov.u32 %r220, %r747;
	@%p5 ld.global.v4.b32 { %r217, %r218, %r219, %r220 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r225, %r747;
	mov.u32 %r226, %r747;
	mov.u32 %r227, %r747;
	mov.u32 %r228, %r747;
	@%p6 ld.global.v4.b32 { %r225, %r226, %r227, %r228 }, [ %rd12 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r233, %r747;
	mov.u32 %r234, %r747;
	mov.u32 %r235, %r747;
	mov.u32 %r236, %r747;
	@%p7 ld.global.v4.b32 { %r233, %r234, %r235, %r236 }, [ %rd13 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r241, %r747;
	mov.u32 %r242, %r747;
	mov.u32 %r243, %r747;
	mov.u32 %r244, %r747;
	@%p8 ld.global.v4.b32 { %r241, %r242, %r243, %r244 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r249, %r747;
	mov.u32 %r250, %r747;
	mov.u32 %r251, %r747;
	mov.u32 %r252, %r747;
	@%p9 ld.global.v4.b32 { %r249, %r250, %r251, %r252 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r257, %r747;
	mov.u32 %r258, %r747;
	mov.u32 %r259, %r747;
	mov.u32 %r260, %r747;
	@%p10 ld.global.v4.b32 { %r257, %r258, %r259, %r260 }, [ %rd16 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r265, %r747;
	mov.u32 %r266, %r747;
	mov.u32 %r267, %r747;
	mov.u32 %r268, %r747;
	@%p11 ld.global.v4.b32 { %r265, %r266, %r267, %r268 }, [ %rd17 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r273, %r747;
	mov.u32 %r274, %r747;
	mov.u32 %r275, %r747;
	mov.u32 %r276, %r747;
	@%p12 ld.global.v4.b32 { %r273, %r274, %r275, %r276 }, [ %rd18 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r281, %r747;
	mov.u32 %r282, %r747;
	mov.u32 %r283, %r747;
	mov.u32 %r284, %r747;
	@%p13 ld.global.v4.b32 { %r281, %r282, %r283, %r284 }, [ %rd19 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r289, %r747;
	mov.u32 %r290, %r747;
	mov.u32 %r291, %r747;
	mov.u32 %r292, %r747;
	@%p14 ld.global.v4.b32 { %r289, %r290, %r291, %r292 }, [ %rd20 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r297, %r747;
	mov.u32 %r298, %r747;
	mov.u32 %r299, %r747;
	mov.u32 %r300, %r747;
	@%p15 ld.global.v4.b32 { %r297, %r298, %r299, %r300 }, [ %rd21 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r305, %r747;
	mov.u32 %r306, %r747;
	mov.u32 %r307, %r747;
	mov.u32 %r308, %r747;
	@%p16 ld.global.v4.b32 { %r305, %r306, %r307, %r308 }, [ %rd22 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r313, %r747;
	mov.u32 %r314, %r747;
	mov.u32 %r315, %r747;
	mov.u32 %r316, %r747;
	@%p17 ld.global.v4.b32 { %r313, %r314, %r315, %r316 }, [ %rd23 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r321, %r747;
	mov.u32 %r322, %r747;
	mov.u32 %r323, %r747;
	mov.u32 %r324, %r747;
	@%p18 ld.global.v4.b32 { %r321, %r322, %r323, %r324 }, [ %rd24 + 0 ];
	// end inline asm
	.loc	1 138 13                        // ffa_triton_v1016-2.py:138:13
	shl.b32 	%r1514, %r6, 1;
	shl.b32 	%r75, %r7, 1;
	and.b32 	%r1515, %r1474, 80;
	xor.b32 	%r1516, %r1515, %r1513;
	xor.b32 	%r1517, %r1516, %r75;
	shl.b32 	%r1518, %r1473, 7;
	add.s32 	%r1519, %r1468, %r1517;
	add.s32 	%r1520, %r1519, %r1518;
	st.shared.v4.b32 	[%r1520], {%r201, %r202, %r203, %r204};
	st.shared.v4.b32 	[%r1520+2048], {%r209, %r210, %r211, %r212};
	st.shared.v4.b32 	[%r1520+4096], {%r217, %r218, %r219, %r220};
	st.shared.v4.b32 	[%r1520+6144], {%r225, %r226, %r227, %r228};
	st.shared.v4.b32 	[%r1520+8192], {%r233, %r234, %r235, %r236};
	st.shared.v4.b32 	[%r1520+10240], {%r241, %r242, %r243, %r244};
	st.shared.v4.b32 	[%r1520+12288], {%r249, %r250, %r251, %r252};
	st.shared.v4.b32 	[%r1520+14336], {%r257, %r258, %r259, %r260};
	st.shared.v4.b32 	[%r1520+16384], {%r265, %r266, %r267, %r268};
	st.shared.v4.b32 	[%r1520+18432], {%r273, %r274, %r275, %r276};
	st.shared.v4.b32 	[%r1520+20480], {%r281, %r282, %r283, %r284};
	st.shared.v4.b32 	[%r1520+22528], {%r289, %r290, %r291, %r292};
	st.shared.v4.b32 	[%r1520+24576], {%r297, %r298, %r299, %r300};
	st.shared.v4.b32 	[%r1520+26624], {%r305, %r306, %r307, %r308};
	st.shared.v4.b32 	[%r1520+28672], {%r313, %r314, %r315, %r316};
	st.shared.v4.b32 	[%r1520+30720], {%r321, %r322, %r323, %r324};
	bar.sync 	0;
	and.b32 	%r76, %r4, 3;
	mul.lo.s32 	%r1521, %r76, 144;
	and.b32 	%r1522, %r1446, 576;
	xor.b32 	%r1523, %r1514, %r1521;
	xor.b32 	%r1524, %r1523, %r1522;
	xor.b32 	%r1525, %r1524, %r75;
	or.b32 	%r1526, %r9, %r10;
	shl.b32 	%r1527, %r1526, 5;
	or.b32 	%r1528, %r1527, %r1525;
	add.s32 	%r333, %r1468, %r1528;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r329, %r330, %r331, %r332}, [%r333];
	// end inline asm
	xor.b32 	%r1529, %r1528, 64;
	add.s32 	%r338, %r1468, %r1529;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r334, %r335, %r336, %r337}, [%r338];
	// end inline asm
	add.s32 	%r343, %r333, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r339, %r340, %r341, %r342}, [%r343];
	// end inline asm
	xor.b32 	%r1530, %r1528, 4160;
	add.s32 	%r348, %r1468, %r1530;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r344, %r345, %r346, %r347}, [%r348];
	// end inline asm
	add.s32 	%r353, %r333, 8192;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r349, %r350, %r351, %r352}, [%r353];
	// end inline asm
	xor.b32 	%r1531, %r1528, 8256;
	add.s32 	%r358, %r1468, %r1531;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r354, %r355, %r356, %r357}, [%r358];
	// end inline asm
	add.s32 	%r363, %r333, 12288;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r359, %r360, %r361, %r362}, [%r363];
	// end inline asm
	xor.b32 	%r1532, %r1528, 12352;
	add.s32 	%r368, %r1468, %r1532;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r364, %r365, %r366, %r367}, [%r368];
	// end inline asm
	add.s32 	%r373, %r333, 16384;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r369, %r370, %r371, %r372}, [%r373];
	// end inline asm
	xor.b32 	%r1533, %r1528, 16448;
	add.s32 	%r378, %r1468, %r1533;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r374, %r375, %r376, %r377}, [%r378];
	// end inline asm
	add.s32 	%r383, %r333, 20480;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r379, %r380, %r381, %r382}, [%r383];
	// end inline asm
	xor.b32 	%r1534, %r1528, 20544;
	add.s32 	%r388, %r1468, %r1534;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r384, %r385, %r386, %r387}, [%r388];
	// end inline asm
	add.s32 	%r393, %r333, 24576;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r389, %r390, %r391, %r392}, [%r393];
	// end inline asm
	xor.b32 	%r1535, %r1528, 24640;
	add.s32 	%r398, %r1468, %r1535;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r394, %r395, %r396, %r397}, [%r398];
	// end inline asm
	add.s32 	%r403, %r333, 28672;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r399, %r400, %r401, %r402}, [%r403];
	// end inline asm
	xor.b32 	%r1536, %r1528, 28736;
	add.s32 	%r408, %r1468, %r1536;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r404, %r405, %r406, %r407}, [%r408];
	// end inline asm
	cvt.u16.u32 	%rs1, %r329;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r409, %rs1; 
	
	// end inline asm
	mov.b32 	{_, %rs2}, %r329;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r410, %rs2; 
	
	// end inline asm
	cvt.u16.u32 	%rs3, %r330;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r411, %rs3; 
	
	// end inline asm
	mov.b32 	{_, %rs4}, %r330;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r412, %rs4; 
	
	// end inline asm
	cvt.u16.u32 	%rs5, %r331;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r413, %rs5; 
	
	// end inline asm
	mov.b32 	{_, %rs6}, %r331;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r414, %rs6; 
	
	// end inline asm
	cvt.u16.u32 	%rs7, %r332;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r415, %rs7; 
	
	// end inline asm
	mov.b32 	{_, %rs8}, %r332;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r416, %rs8; 
	
	// end inline asm
	cvt.u16.u32 	%rs9, %r334;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r417, %rs9; 
	
	// end inline asm
	mov.b32 	{_, %rs10}, %r334;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r418, %rs10; 
	
	// end inline asm
	cvt.u16.u32 	%rs11, %r335;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r419, %rs11; 
	
	// end inline asm
	mov.b32 	{_, %rs12}, %r335;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r420, %rs12; 
	
	// end inline asm
	cvt.u16.u32 	%rs13, %r336;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r421, %rs13; 
	
	// end inline asm
	mov.b32 	{_, %rs14}, %r336;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r422, %rs14; 
	
	// end inline asm
	cvt.u16.u32 	%rs15, %r337;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r423, %rs15; 
	
	// end inline asm
	mov.b32 	{_, %rs16}, %r337;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r424, %rs16; 
	
	// end inline asm
	cvt.u16.u32 	%rs17, %r339;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r425, %rs17; 
	
	// end inline asm
	mov.b32 	{_, %rs18}, %r339;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r426, %rs18; 
	
	// end inline asm
	cvt.u16.u32 	%rs19, %r340;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r427, %rs19; 
	
	// end inline asm
	mov.b32 	{_, %rs20}, %r340;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r428, %rs20; 
	
	// end inline asm
	cvt.u16.u32 	%rs21, %r341;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r429, %rs21; 
	
	// end inline asm
	mov.b32 	{_, %rs22}, %r341;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r430, %rs22; 
	
	// end inline asm
	cvt.u16.u32 	%rs23, %r342;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r431, %rs23; 
	
	// end inline asm
	mov.b32 	{_, %rs24}, %r342;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r432, %rs24; 
	
	// end inline asm
	cvt.u16.u32 	%rs25, %r344;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r433, %rs25; 
	
	// end inline asm
	mov.b32 	{_, %rs26}, %r344;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r434, %rs26; 
	
	// end inline asm
	cvt.u16.u32 	%rs27, %r345;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r435, %rs27; 
	
	// end inline asm
	mov.b32 	{_, %rs28}, %r345;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r436, %rs28; 
	
	// end inline asm
	cvt.u16.u32 	%rs29, %r346;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r437, %rs29; 
	
	// end inline asm
	mov.b32 	{_, %rs30}, %r346;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r438, %rs30; 
	
	// end inline asm
	cvt.u16.u32 	%rs31, %r347;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r439, %rs31; 
	
	// end inline asm
	mov.b32 	{_, %rs32}, %r347;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r440, %rs32; 
	
	// end inline asm
	cvt.u16.u32 	%rs33, %r349;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r441, %rs33; 
	
	// end inline asm
	mov.b32 	{_, %rs34}, %r349;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r442, %rs34; 
	
	// end inline asm
	cvt.u16.u32 	%rs35, %r350;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r443, %rs35; 
	
	// end inline asm
	mov.b32 	{_, %rs36}, %r350;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r444, %rs36; 
	
	// end inline asm
	cvt.u16.u32 	%rs37, %r351;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r445, %rs37; 
	
	// end inline asm
	mov.b32 	{_, %rs38}, %r351;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r446, %rs38; 
	
	// end inline asm
	cvt.u16.u32 	%rs39, %r352;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r447, %rs39; 
	
	// end inline asm
	mov.b32 	{_, %rs40}, %r352;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r448, %rs40; 
	
	// end inline asm
	cvt.u16.u32 	%rs41, %r354;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r449, %rs41; 
	
	// end inline asm
	mov.b32 	{_, %rs42}, %r354;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r450, %rs42; 
	
	// end inline asm
	cvt.u16.u32 	%rs43, %r355;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r451, %rs43; 
	
	// end inline asm
	mov.b32 	{_, %rs44}, %r355;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r452, %rs44; 
	
	// end inline asm
	cvt.u16.u32 	%rs45, %r356;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r453, %rs45; 
	
	// end inline asm
	mov.b32 	{_, %rs46}, %r356;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r454, %rs46; 
	
	// end inline asm
	cvt.u16.u32 	%rs47, %r357;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r455, %rs47; 
	
	// end inline asm
	mov.b32 	{_, %rs48}, %r357;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r456, %rs48; 
	
	// end inline asm
	cvt.u16.u32 	%rs49, %r359;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r457, %rs49; 
	
	// end inline asm
	mov.b32 	{_, %rs50}, %r359;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r458, %rs50; 
	
	// end inline asm
	cvt.u16.u32 	%rs51, %r360;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r459, %rs51; 
	
	// end inline asm
	mov.b32 	{_, %rs52}, %r360;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r460, %rs52; 
	
	// end inline asm
	cvt.u16.u32 	%rs53, %r361;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r461, %rs53; 
	
	// end inline asm
	mov.b32 	{_, %rs54}, %r361;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r462, %rs54; 
	
	// end inline asm
	cvt.u16.u32 	%rs55, %r362;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r463, %rs55; 
	
	// end inline asm
	mov.b32 	{_, %rs56}, %r362;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r464, %rs56; 
	
	// end inline asm
	cvt.u16.u32 	%rs57, %r364;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r465, %rs57; 
	
	// end inline asm
	mov.b32 	{_, %rs58}, %r364;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r466, %rs58; 
	
	// end inline asm
	cvt.u16.u32 	%rs59, %r365;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r467, %rs59; 
	
	// end inline asm
	mov.b32 	{_, %rs60}, %r365;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r468, %rs60; 
	
	// end inline asm
	cvt.u16.u32 	%rs61, %r366;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r469, %rs61; 
	
	// end inline asm
	mov.b32 	{_, %rs62}, %r366;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r470, %rs62; 
	
	// end inline asm
	cvt.u16.u32 	%rs63, %r367;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r471, %rs63; 
	
	// end inline asm
	mov.b32 	{_, %rs64}, %r367;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r472, %rs64; 
	
	// end inline asm
	cvt.u16.u32 	%rs65, %r369;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r473, %rs65; 
	
	// end inline asm
	mov.b32 	{_, %rs66}, %r369;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r474, %rs66; 
	
	// end inline asm
	cvt.u16.u32 	%rs67, %r370;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r475, %rs67; 
	
	// end inline asm
	mov.b32 	{_, %rs68}, %r370;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r476, %rs68; 
	
	// end inline asm
	cvt.u16.u32 	%rs69, %r371;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r477, %rs69; 
	
	// end inline asm
	mov.b32 	{_, %rs70}, %r371;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r478, %rs70; 
	
	// end inline asm
	cvt.u16.u32 	%rs71, %r372;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r479, %rs71; 
	
	// end inline asm
	mov.b32 	{_, %rs72}, %r372;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r480, %rs72; 
	
	// end inline asm
	cvt.u16.u32 	%rs73, %r374;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r481, %rs73; 
	
	// end inline asm
	mov.b32 	{_, %rs74}, %r374;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r482, %rs74; 
	
	// end inline asm
	cvt.u16.u32 	%rs75, %r375;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r483, %rs75; 
	
	// end inline asm
	mov.b32 	{_, %rs76}, %r375;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r484, %rs76; 
	
	// end inline asm
	cvt.u16.u32 	%rs77, %r376;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r485, %rs77; 
	
	// end inline asm
	mov.b32 	{_, %rs78}, %r376;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r486, %rs78; 
	
	// end inline asm
	cvt.u16.u32 	%rs79, %r377;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r487, %rs79; 
	
	// end inline asm
	mov.b32 	{_, %rs80}, %r377;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r488, %rs80; 
	
	// end inline asm
	cvt.u16.u32 	%rs81, %r379;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r489, %rs81; 
	
	// end inline asm
	mov.b32 	{_, %rs82}, %r379;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r490, %rs82; 
	
	// end inline asm
	cvt.u16.u32 	%rs83, %r380;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r491, %rs83; 
	
	// end inline asm
	mov.b32 	{_, %rs84}, %r380;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r492, %rs84; 
	
	// end inline asm
	cvt.u16.u32 	%rs85, %r381;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r493, %rs85; 
	
	// end inline asm
	mov.b32 	{_, %rs86}, %r381;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r494, %rs86; 
	
	// end inline asm
	cvt.u16.u32 	%rs87, %r382;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r495, %rs87; 
	
	// end inline asm
	mov.b32 	{_, %rs88}, %r382;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r496, %rs88; 
	
	// end inline asm
	cvt.u16.u32 	%rs89, %r384;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r497, %rs89; 
	
	// end inline asm
	mov.b32 	{_, %rs90}, %r384;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r498, %rs90; 
	
	// end inline asm
	cvt.u16.u32 	%rs91, %r385;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r499, %rs91; 
	
	// end inline asm
	mov.b32 	{_, %rs92}, %r385;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r500, %rs92; 
	
	// end inline asm
	cvt.u16.u32 	%rs93, %r386;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r501, %rs93; 
	
	// end inline asm
	mov.b32 	{_, %rs94}, %r386;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r502, %rs94; 
	
	// end inline asm
	cvt.u16.u32 	%rs95, %r387;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r503, %rs95; 
	
	// end inline asm
	mov.b32 	{_, %rs96}, %r387;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r504, %rs96; 
	
	// end inline asm
	cvt.u16.u32 	%rs97, %r389;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r505, %rs97; 
	
	// end inline asm
	mov.b32 	{_, %rs98}, %r389;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r506, %rs98; 
	
	// end inline asm
	cvt.u16.u32 	%rs99, %r390;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r507, %rs99; 
	
	// end inline asm
	mov.b32 	{_, %rs100}, %r390;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r508, %rs100; 
	
	// end inline asm
	cvt.u16.u32 	%rs101, %r391;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r509, %rs101; 
	
	// end inline asm
	mov.b32 	{_, %rs102}, %r391;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r510, %rs102; 
	
	// end inline asm
	cvt.u16.u32 	%rs103, %r392;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r511, %rs103; 
	
	// end inline asm
	mov.b32 	{_, %rs104}, %r392;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r512, %rs104; 
	
	// end inline asm
	cvt.u16.u32 	%rs105, %r394;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r513, %rs105; 
	
	// end inline asm
	mov.b32 	{_, %rs106}, %r394;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r514, %rs106; 
	
	// end inline asm
	cvt.u16.u32 	%rs107, %r395;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r515, %rs107; 
	
	// end inline asm
	mov.b32 	{_, %rs108}, %r395;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r516, %rs108; 
	
	// end inline asm
	cvt.u16.u32 	%rs109, %r396;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r517, %rs109; 
	
	// end inline asm
	mov.b32 	{_, %rs110}, %r396;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r518, %rs110; 
	
	// end inline asm
	cvt.u16.u32 	%rs111, %r397;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r519, %rs111; 
	
	// end inline asm
	mov.b32 	{_, %rs112}, %r397;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r520, %rs112; 
	
	// end inline asm
	cvt.u16.u32 	%rs113, %r399;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r521, %rs113; 
	
	// end inline asm
	mov.b32 	{_, %rs114}, %r399;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r522, %rs114; 
	
	// end inline asm
	cvt.u16.u32 	%rs115, %r400;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r523, %rs115; 
	
	// end inline asm
	mov.b32 	{_, %rs116}, %r400;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r524, %rs116; 
	
	// end inline asm
	cvt.u16.u32 	%rs117, %r401;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r525, %rs117; 
	
	// end inline asm
	mov.b32 	{_, %rs118}, %r401;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r526, %rs118; 
	
	// end inline asm
	cvt.u16.u32 	%rs119, %r402;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r527, %rs119; 
	
	// end inline asm
	mov.b32 	{_, %rs120}, %r402;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r528, %rs120; 
	
	// end inline asm
	cvt.u16.u32 	%rs121, %r404;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r529, %rs121; 
	
	// end inline asm
	mov.b32 	{_, %rs122}, %r404;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r530, %rs122; 
	
	// end inline asm
	cvt.u16.u32 	%rs123, %r405;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r531, %rs123; 
	
	// end inline asm
	mov.b32 	{_, %rs124}, %r405;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r532, %rs124; 
	
	// end inline asm
	cvt.u16.u32 	%rs125, %r406;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r533, %rs125; 
	
	// end inline asm
	mov.b32 	{_, %rs126}, %r406;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r534, %rs126; 
	
	// end inline asm
	cvt.u16.u32 	%rs127, %r407;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r535, %rs127; 
	
	// end inline asm
	mov.b32 	{_, %rs128}, %r407;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r536, %rs128; 
	
	// end inline asm
	.loc	1 116 23                        // ffa_triton_v1016-2.py:116:23
	shl.b32 	%r1537, %r19, 1;
	add.s32 	%r1538, %r1469, %r1537;
	shl.b32 	%r1539, %r8, 8;
	add.s32 	%r1540, %r1538, %r1539;
	ld.shared.v2.b32 	{%r545, %r657}, [%r1540];
	ld.shared.v2.b32 	{%r546, %r658}, [%r1540+2048];
	or.b32 	%r1541, %r1460, 16;
	xor.b32 	%r1542, %r1541, %r1461;
	shl.b32 	%r1543, %r1542, 1;
	add.s32 	%r1544, %r1469, %r1543;
	shl.b32 	%r1545, %r6, 3;
	add.s32 	%r1546, %r1544, %r1545;
	add.s32 	%r1547, %r1546, %r1539;
	ld.shared.v2.b32 	{%r547, %r659}, [%r1547];
	ld.shared.v2.b32 	{%r548, %r660}, [%r1547+2048];
	or.b32 	%r1548, %r1462, 32;
	xor.b32 	%r1549, %r1548, %r1463;
	shl.b32 	%r1550, %r1549, 1;
	add.s32 	%r1551, %r1469, %r1550;
	add.s32 	%r1552, %r1551, %r1539;
	ld.shared.v2.b32 	{%r769, %r881}, [%r1552];
	ld.shared.v2.b32 	{%r770, %r882}, [%r1552+2048];
	or.b32 	%r1553, %r1460, 48;
	or.b32 	%r1554, %r1463, %r1461;
	xor.b32 	%r1555, %r1554, %r1553;
	shl.b32 	%r1556, %r1555, 1;
	add.s32 	%r1557, %r1469, %r1556;
	add.s32 	%r1558, %r1557, %r1539;
	ld.shared.v2.b32 	{%r771, %r883}, [%r1558];
	ld.shared.v2.b32 	{%r772, %r884}, [%r1558+2048];
	ld.shared.v2.b32 	{%r993, %r1105}, [%r1540+128];
	ld.shared.v2.b32 	{%r994, %r1106}, [%r1540+2176];
	or.b32 	%r1559, %r1460, 80;
	xor.b32 	%r1560, %r1559, %r1461;
	shl.b32 	%r1561, %r1560, 1;
	add.s32 	%r1562, %r1469, %r1561;
	add.s32 	%r1563, %r1562, %r1545;
	add.s32 	%r1564, %r1563, %r1539;
	ld.shared.v2.b32 	{%r995, %r1107}, [%r1564];
	ld.shared.v2.b32 	{%r996, %r1108}, [%r1564+2048];
	or.b32 	%r1565, %r1462, 96;
	xor.b32 	%r1566, %r1565, %r1463;
	shl.b32 	%r1567, %r1566, 1;
	add.s32 	%r1568, %r1469, %r1567;
	add.s32 	%r1569, %r1568, %r1539;
	ld.shared.v2.b32 	{%r1217, %r1329}, [%r1569];
	ld.shared.v2.b32 	{%r1218, %r1330}, [%r1569+2048];
	or.b32 	%r1570, %r1460, 112;
	xor.b32 	%r1571, %r1554, %r1570;
	shl.b32 	%r1572, %r1571, 1;
	add.s32 	%r1573, %r1469, %r1572;
	add.s32 	%r1574, %r1573, %r1539;
	ld.shared.v2.b32 	{%r1219, %r1331}, [%r1574];
	ld.shared.v2.b32 	{%r1220, %r1332}, [%r1574+2048];
	.loc	1 141 33                        // ffa_triton_v1016-2.py:141:33
	mov.b32 	%r649, %r747;
	mov.b32 	%r650, %r747;
	mov.b32 	%r651, %r747;
	mov.b32 	%r652, %r747;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r649, %r650, %r651, %r652 }, { %r545, %r546, %r547, %r548 }, { %r409, %r411 }, { %r649, %r650, %r651, %r652 };
	// end inline asm
	mov.b32 	%r663, %r747;
	mov.b32 	%r664, %r747;
	mov.b32 	%r665, %r747;
	mov.b32 	%r666, %r747;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r663, %r664, %r665, %r666 }, { %r545, %r546, %r547, %r548 }, { %r425, %r427 }, { %r663, %r664, %r665, %r666 };
	// end inline asm
	mov.b32 	%r677, %r747;
	mov.b32 	%r678, %r747;
	mov.b32 	%r679, %r747;
	mov.b32 	%r680, %r747;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r677, %r678, %r679, %r680 }, { %r545, %r546, %r547, %r548 }, { %r441, %r443 }, { %r677, %r678, %r679, %r680 };
	// end inline asm
	mov.b32 	%r691, %r747;
	mov.b32 	%r692, %r747;
	mov.b32 	%r693, %r747;
	mov.b32 	%r694, %r747;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r691, %r692, %r693, %r694 }, { %r545, %r546, %r547, %r548 }, { %r457, %r459 }, { %r691, %r692, %r693, %r694 };
	// end inline asm
	mov.b32 	%r705, %r747;
	mov.b32 	%r706, %r747;
	mov.b32 	%r707, %r747;
	mov.b32 	%r708, %r747;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r705, %r706, %r707, %r708 }, { %r545, %r546, %r547, %r548 }, { %r473, %r475 }, { %r705, %r706, %r707, %r708 };
	// end inline asm
	mov.b32 	%r719, %r747;
	mov.b32 	%r720, %r747;
	mov.b32 	%r721, %r747;
	mov.b32 	%r722, %r747;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r719, %r720, %r721, %r722 }, { %r545, %r546, %r547, %r548 }, { %r489, %r491 }, { %r719, %r720, %r721, %r722 };
	// end inline asm
	mov.b32 	%r733, %r747;
	mov.b32 	%r734, %r747;
	mov.b32 	%r735, %r747;
	mov.b32 	%r736, %r747;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r733, %r734, %r735, %r736 }, { %r545, %r546, %r547, %r548 }, { %r505, %r507 }, { %r733, %r734, %r735, %r736 };
	// end inline asm
	mov.b32 	%r748, %r747;
	mov.b32 	%r749, %r747;
	mov.b32 	%r750, %r747;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r747, %r748, %r749, %r750 }, { %r545, %r546, %r547, %r548 }, { %r521, %r523 }, { %r747, %r748, %r749, %r750 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r649, %r650, %r651, %r652 }, { %r657, %r658, %r659, %r660 }, { %r410, %r412 }, { %r649, %r650, %r651, %r652 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r663, %r664, %r665, %r666 }, { %r657, %r658, %r659, %r660 }, { %r426, %r428 }, { %r663, %r664, %r665, %r666 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r677, %r678, %r679, %r680 }, { %r657, %r658, %r659, %r660 }, { %r442, %r444 }, { %r677, %r678, %r679, %r680 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r691, %r692, %r693, %r694 }, { %r657, %r658, %r659, %r660 }, { %r458, %r460 }, { %r691, %r692, %r693, %r694 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r705, %r706, %r707, %r708 }, { %r657, %r658, %r659, %r660 }, { %r474, %r476 }, { %r705, %r706, %r707, %r708 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r719, %r720, %r721, %r722 }, { %r657, %r658, %r659, %r660 }, { %r490, %r492 }, { %r719, %r720, %r721, %r722 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r733, %r734, %r735, %r736 }, { %r657, %r658, %r659, %r660 }, { %r506, %r508 }, { %r733, %r734, %r735, %r736 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r747, %r748, %r749, %r750 }, { %r657, %r658, %r659, %r660 }, { %r522, %r524 }, { %r747, %r748, %r749, %r750 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r649, %r650, %r651, %r652 }, { %r769, %r770, %r771, %r772 }, { %r413, %r415 }, { %r649, %r650, %r651, %r652 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r663, %r664, %r665, %r666 }, { %r769, %r770, %r771, %r772 }, { %r429, %r431 }, { %r663, %r664, %r665, %r666 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r677, %r678, %r679, %r680 }, { %r769, %r770, %r771, %r772 }, { %r445, %r447 }, { %r677, %r678, %r679, %r680 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r691, %r692, %r693, %r694 }, { %r769, %r770, %r771, %r772 }, { %r461, %r463 }, { %r691, %r692, %r693, %r694 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r705, %r706, %r707, %r708 }, { %r769, %r770, %r771, %r772 }, { %r477, %r479 }, { %r705, %r706, %r707, %r708 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r719, %r720, %r721, %r722 }, { %r769, %r770, %r771, %r772 }, { %r493, %r495 }, { %r719, %r720, %r721, %r722 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r733, %r734, %r735, %r736 }, { %r769, %r770, %r771, %r772 }, { %r509, %r511 }, { %r733, %r734, %r735, %r736 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r747, %r748, %r749, %r750 }, { %r769, %r770, %r771, %r772 }, { %r525, %r527 }, { %r747, %r748, %r749, %r750 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r649, %r650, %r651, %r652 }, { %r881, %r882, %r883, %r884 }, { %r414, %r416 }, { %r649, %r650, %r651, %r652 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r663, %r664, %r665, %r666 }, { %r881, %r882, %r883, %r884 }, { %r430, %r432 }, { %r663, %r664, %r665, %r666 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r677, %r678, %r679, %r680 }, { %r881, %r882, %r883, %r884 }, { %r446, %r448 }, { %r677, %r678, %r679, %r680 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r691, %r692, %r693, %r694 }, { %r881, %r882, %r883, %r884 }, { %r462, %r464 }, { %r691, %r692, %r693, %r694 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r705, %r706, %r707, %r708 }, { %r881, %r882, %r883, %r884 }, { %r478, %r480 }, { %r705, %r706, %r707, %r708 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r719, %r720, %r721, %r722 }, { %r881, %r882, %r883, %r884 }, { %r494, %r496 }, { %r719, %r720, %r721, %r722 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r733, %r734, %r735, %r736 }, { %r881, %r882, %r883, %r884 }, { %r510, %r512 }, { %r733, %r734, %r735, %r736 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r747, %r748, %r749, %r750 }, { %r881, %r882, %r883, %r884 }, { %r526, %r528 }, { %r747, %r748, %r749, %r750 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r649, %r650, %r651, %r652 }, { %r993, %r994, %r995, %r996 }, { %r417, %r419 }, { %r649, %r650, %r651, %r652 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r663, %r664, %r665, %r666 }, { %r993, %r994, %r995, %r996 }, { %r433, %r435 }, { %r663, %r664, %r665, %r666 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r677, %r678, %r679, %r680 }, { %r993, %r994, %r995, %r996 }, { %r449, %r451 }, { %r677, %r678, %r679, %r680 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r691, %r692, %r693, %r694 }, { %r993, %r994, %r995, %r996 }, { %r465, %r467 }, { %r691, %r692, %r693, %r694 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r705, %r706, %r707, %r708 }, { %r993, %r994, %r995, %r996 }, { %r481, %r483 }, { %r705, %r706, %r707, %r708 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r719, %r720, %r721, %r722 }, { %r993, %r994, %r995, %r996 }, { %r497, %r499 }, { %r719, %r720, %r721, %r722 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r733, %r734, %r735, %r736 }, { %r993, %r994, %r995, %r996 }, { %r513, %r515 }, { %r733, %r734, %r735, %r736 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r747, %r748, %r749, %r750 }, { %r993, %r994, %r995, %r996 }, { %r529, %r531 }, { %r747, %r748, %r749, %r750 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r649, %r650, %r651, %r652 }, { %r1105, %r1106, %r1107, %r1108 }, { %r418, %r420 }, { %r649, %r650, %r651, %r652 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r663, %r664, %r665, %r666 }, { %r1105, %r1106, %r1107, %r1108 }, { %r434, %r436 }, { %r663, %r664, %r665, %r666 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r677, %r678, %r679, %r680 }, { %r1105, %r1106, %r1107, %r1108 }, { %r450, %r452 }, { %r677, %r678, %r679, %r680 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r691, %r692, %r693, %r694 }, { %r1105, %r1106, %r1107, %r1108 }, { %r466, %r468 }, { %r691, %r692, %r693, %r694 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r705, %r706, %r707, %r708 }, { %r1105, %r1106, %r1107, %r1108 }, { %r482, %r484 }, { %r705, %r706, %r707, %r708 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r719, %r720, %r721, %r722 }, { %r1105, %r1106, %r1107, %r1108 }, { %r498, %r500 }, { %r719, %r720, %r721, %r722 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r733, %r734, %r735, %r736 }, { %r1105, %r1106, %r1107, %r1108 }, { %r514, %r516 }, { %r733, %r734, %r735, %r736 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r747, %r748, %r749, %r750 }, { %r1105, %r1106, %r1107, %r1108 }, { %r530, %r532 }, { %r747, %r748, %r749, %r750 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r649, %r650, %r651, %r652 }, { %r1217, %r1218, %r1219, %r1220 }, { %r421, %r423 }, { %r649, %r650, %r651, %r652 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r663, %r664, %r665, %r666 }, { %r1217, %r1218, %r1219, %r1220 }, { %r437, %r439 }, { %r663, %r664, %r665, %r666 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r677, %r678, %r679, %r680 }, { %r1217, %r1218, %r1219, %r1220 }, { %r453, %r455 }, { %r677, %r678, %r679, %r680 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r691, %r692, %r693, %r694 }, { %r1217, %r1218, %r1219, %r1220 }, { %r469, %r471 }, { %r691, %r692, %r693, %r694 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r705, %r706, %r707, %r708 }, { %r1217, %r1218, %r1219, %r1220 }, { %r485, %r487 }, { %r705, %r706, %r707, %r708 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r719, %r720, %r721, %r722 }, { %r1217, %r1218, %r1219, %r1220 }, { %r501, %r503 }, { %r719, %r720, %r721, %r722 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r733, %r734, %r735, %r736 }, { %r1217, %r1218, %r1219, %r1220 }, { %r517, %r519 }, { %r733, %r734, %r735, %r736 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r747, %r748, %r749, %r750 }, { %r1217, %r1218, %r1219, %r1220 }, { %r533, %r535 }, { %r747, %r748, %r749, %r750 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r649, %r650, %r651, %r652 }, { %r1329, %r1330, %r1331, %r1332 }, { %r422, %r424 }, { %r649, %r650, %r651, %r652 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r663, %r664, %r665, %r666 }, { %r1329, %r1330, %r1331, %r1332 }, { %r438, %r440 }, { %r663, %r664, %r665, %r666 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r677, %r678, %r679, %r680 }, { %r1329, %r1330, %r1331, %r1332 }, { %r454, %r456 }, { %r677, %r678, %r679, %r680 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r691, %r692, %r693, %r694 }, { %r1329, %r1330, %r1331, %r1332 }, { %r470, %r472 }, { %r691, %r692, %r693, %r694 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r705, %r706, %r707, %r708 }, { %r1329, %r1330, %r1331, %r1332 }, { %r486, %r488 }, { %r705, %r706, %r707, %r708 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r719, %r720, %r721, %r722 }, { %r1329, %r1330, %r1331, %r1332 }, { %r502, %r504 }, { %r719, %r720, %r721, %r722 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r733, %r734, %r735, %r736 }, { %r1329, %r1330, %r1331, %r1332 }, { %r518, %r520 }, { %r733, %r734, %r735, %r736 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r747, %r748, %r749, %r750 }, { %r1329, %r1330, %r1331, %r1332 }, { %r534, %r536 }, { %r747, %r748, %r749, %r750 };
	// end inline asm
	.loc	1 141 65                        // ffa_triton_v1016-2.py:141:65
	mul.f32 	%r1575, %r1447, %r649;
	mul.f32 	%r1576, %r1447, %r650;
	mul.f32 	%r1577, %r1447, %r651;
	mul.f32 	%r1578, %r1447, %r652;
	mul.f32 	%r1579, %r1447, %r663;
	mul.f32 	%r1580, %r1447, %r664;
	mul.f32 	%r1581, %r1447, %r665;
	mul.f32 	%r1582, %r1447, %r666;
	mul.f32 	%r1583, %r1447, %r677;
	mul.f32 	%r1584, %r1447, %r678;
	mul.f32 	%r1585, %r1447, %r679;
	mul.f32 	%r1586, %r1447, %r680;
	mul.f32 	%r1587, %r1447, %r691;
	mul.f32 	%r1588, %r1447, %r692;
	mul.f32 	%r1589, %r1447, %r693;
	mul.f32 	%r1590, %r1447, %r694;
	mul.f32 	%r1591, %r1447, %r705;
	mul.f32 	%r1592, %r1447, %r706;
	mul.f32 	%r1593, %r1447, %r707;
	mul.f32 	%r1594, %r1447, %r708;
	mul.f32 	%r1595, %r1447, %r719;
	mul.f32 	%r1596, %r1447, %r720;
	mul.f32 	%r1597, %r1447, %r721;
	mul.f32 	%r1598, %r1447, %r722;
	mul.f32 	%r1599, %r1447, %r733;
	mul.f32 	%r1600, %r1447, %r734;
	mul.f32 	%r1601, %r1447, %r735;
	mul.f32 	%r1602, %r1447, %r736;
	mul.f32 	%r1603, %r1447, %r747;
	mul.f32 	%r1604, %r1447, %r748;
	mul.f32 	%r1605, %r1447, %r749;
	mul.f32 	%r1606, %r1447, %r750;
	.loc	1 141 73                        // ffa_triton_v1016-2.py:141:73
	mul.f32 	%r77, %r1575, 0f3FB8AA3B;
	mul.f32 	%r78, %r1576, 0f3FB8AA3B;
	mul.f32 	%r79, %r1577, 0f3FB8AA3B;
	mul.f32 	%r80, %r1578, 0f3FB8AA3B;
	mul.f32 	%r81, %r1579, 0f3FB8AA3B;
	mul.f32 	%r82, %r1580, 0f3FB8AA3B;
	mul.f32 	%r83, %r1581, 0f3FB8AA3B;
	mul.f32 	%r84, %r1582, 0f3FB8AA3B;
	mul.f32 	%r85, %r1583, 0f3FB8AA3B;
	mul.f32 	%r86, %r1584, 0f3FB8AA3B;
	mul.f32 	%r87, %r1585, 0f3FB8AA3B;
	mul.f32 	%r88, %r1586, 0f3FB8AA3B;
	mul.f32 	%r89, %r1587, 0f3FB8AA3B;
	mul.f32 	%r90, %r1588, 0f3FB8AA3B;
	mul.f32 	%r91, %r1589, 0f3FB8AA3B;
	mul.f32 	%r92, %r1590, 0f3FB8AA3B;
	mul.f32 	%r93, %r1591, 0f3FB8AA3B;
	mul.f32 	%r94, %r1592, 0f3FB8AA3B;
	mul.f32 	%r95, %r1593, 0f3FB8AA3B;
	mul.f32 	%r96, %r1594, 0f3FB8AA3B;
	mul.f32 	%r97, %r1595, 0f3FB8AA3B;
	mul.f32 	%r98, %r1596, 0f3FB8AA3B;
	mul.f32 	%r99, %r1597, 0f3FB8AA3B;
	mul.f32 	%r100, %r1598, 0f3FB8AA3B;
	mul.f32 	%r101, %r1599, 0f3FB8AA3B;
	mul.f32 	%r102, %r1600, 0f3FB8AA3B;
	mul.f32 	%r103, %r1601, 0f3FB8AA3B;
	mul.f32 	%r104, %r1602, 0f3FB8AA3B;
	mul.f32 	%r105, %r1603, 0f3FB8AA3B;
	mul.f32 	%r106, %r1604, 0f3FB8AA3B;
	mul.f32 	%r107, %r1605, 0f3FB8AA3B;
	mul.f32 	%r108, %r1606, 0f3FB8AA3B;
	.loc	1 142 52                        // ffa_triton_v1016-2.py:142:52
	selp.f32 	%r1607, %r77, 0fFF800000, %p26;
	selp.f32 	%r1608, %r78, 0fFF800000, %p27;
	selp.f32 	%r1609, %r79, 0fFF800000, %p26;
	selp.f32 	%r1610, %r80, 0fFF800000, %p27;
	selp.f32 	%r1611, %r81, 0fFF800000, %p28;
	selp.f32 	%r1612, %r82, 0fFF800000, %p29;
	selp.f32 	%r1613, %r83, 0fFF800000, %p28;
	selp.f32 	%r1614, %r84, 0fFF800000, %p29;
	selp.f32 	%r1615, %r85, 0fFF800000, %p30;
	selp.f32 	%r1616, %r86, 0fFF800000, %p31;
	selp.f32 	%r1617, %r87, 0fFF800000, %p30;
	selp.f32 	%r1618, %r88, 0fFF800000, %p31;
	selp.f32 	%r1619, %r89, 0fFF800000, %p32;
	selp.f32 	%r1620, %r90, 0fFF800000, %p33;
	selp.f32 	%r1621, %r91, 0fFF800000, %p32;
	selp.f32 	%r1622, %r92, 0fFF800000, %p33;
	selp.f32 	%r1623, %r93, 0fFF800000, %p34;
	selp.f32 	%r1624, %r94, 0fFF800000, %p35;
	selp.f32 	%r1625, %r95, 0fFF800000, %p34;
	selp.f32 	%r1626, %r96, 0fFF800000, %p35;
	selp.f32 	%r1627, %r97, 0fFF800000, %p36;
	selp.f32 	%r1628, %r98, 0fFF800000, %p37;
	selp.f32 	%r1629, %r99, 0fFF800000, %p36;
	selp.f32 	%r1630, %r100, 0fFF800000, %p37;
	selp.f32 	%r1631, %r101, 0fFF800000, %p38;
	selp.f32 	%r1632, %r102, 0fFF800000, %p39;
	selp.f32 	%r1633, %r103, 0fFF800000, %p38;
	selp.f32 	%r1634, %r104, 0fFF800000, %p39;
	selp.f32 	%r1635, %r105, 0fFF800000, %p40;
	selp.f32 	%r1636, %r106, 0fFF800000, %p41;
	selp.f32 	%r1637, %r107, 0fFF800000, %p40;
	selp.f32 	%r1638, %r108, 0fFF800000, %p41;
$L__tmp1:
	.loc	2 188 40                        // standard.py:188:40 @[ ffa_triton_v1016-2.py:145:28 ]
	bar.sync 	0;
	.loc	2 167 27                        // standard.py:167:27 @[ ffa_triton_v1016-2.py:145:28 ]
	max.f32 	%r1639, %r1607, %r1608;
	max.f32 	%r1640, %r1609, %r1610;
	max.f32 	%r1641, %r1639, %r1611;
	max.f32 	%r1642, %r1641, %r1612;
	max.f32 	%r1643, %r1640, %r1613;
	max.f32 	%r1644, %r1643, %r1614;
	max.f32 	%r1645, %r1642, %r1615;
	max.f32 	%r1646, %r1645, %r1616;
	max.f32 	%r1647, %r1644, %r1617;
	max.f32 	%r1648, %r1647, %r1618;
	max.f32 	%r1649, %r1646, %r1619;
	max.f32 	%r1650, %r1649, %r1620;
	max.f32 	%r1651, %r1648, %r1621;
	max.f32 	%r1652, %r1651, %r1622;
	max.f32 	%r1653, %r1650, %r1623;
	max.f32 	%r1654, %r1653, %r1624;
	max.f32 	%r1655, %r1652, %r1625;
	max.f32 	%r1656, %r1655, %r1626;
	max.f32 	%r1657, %r1654, %r1627;
	max.f32 	%r1658, %r1657, %r1628;
	max.f32 	%r1659, %r1656, %r1629;
	max.f32 	%r1660, %r1659, %r1630;
	max.f32 	%r1661, %r1658, %r1631;
	max.f32 	%r1662, %r1661, %r1632;
	max.f32 	%r1663, %r1660, %r1633;
	max.f32 	%r1664, %r1663, %r1634;
	max.f32 	%r1665, %r1662, %r1635;
	max.f32 	%r1666, %r1665, %r1636;
	max.f32 	%r1667, %r1664, %r1637;
	max.f32 	%r1668, %r1667, %r1638;
	.loc	2 188 40                        // standard.py:188:40 @[ ffa_triton_v1016-2.py:145:28 ]
	shfl.sync.bfly.b32 	%r1669, %r1666, 2, 31, -1;
	.loc	2 167 27                        // standard.py:167:27 @[ ffa_triton_v1016-2.py:145:28 ]
	max.f32 	%r1670, %r1666, %r1669;
	.loc	2 188 40                        // standard.py:188:40 @[ ffa_triton_v1016-2.py:145:28 ]
	shfl.sync.bfly.b32 	%r1671, %r1670, 1, 31, -1;
	.loc	2 167 27                        // standard.py:167:27 @[ ffa_triton_v1016-2.py:145:28 ]
	max.f32 	%r1434, %r1670, %r1671;
	.loc	2 188 40                        // standard.py:188:40 @[ ffa_triton_v1016-2.py:145:28 ]
	shfl.sync.bfly.b32 	%r1672, %r1668, 2, 31, -1;
	.loc	2 167 27                        // standard.py:167:27 @[ ffa_triton_v1016-2.py:145:28 ]
	max.f32 	%r1673, %r1668, %r1672;
	.loc	2 188 40                        // standard.py:188:40 @[ ffa_triton_v1016-2.py:145:28 ]
	shfl.sync.bfly.b32 	%r1674, %r1673, 1, 31, -1;
	.loc	2 167 27                        // standard.py:167:27 @[ ffa_triton_v1016-2.py:145:28 ]
	max.f32 	%r1436, %r1673, %r1674;
	.loc	2 188 40                        // standard.py:188:40 @[ ffa_triton_v1016-2.py:145:28 ]
	setp.eq.s32 	%p19, %r76, 0;
	shl.b32 	%r1675, %r8, 4;
	add.s32 	%r109, %r1468, %r1675;
	shl.b32 	%r1676, %r11, 2;
	add.s32 	%r1697, %r109, %r1676;
	// begin inline asm
	@%p19 st.shared.b32 [ %r1697 + 0 ], %r1434;
	// end inline asm
	shl.b32 	%r1677, %r1448, 4;
	add.s32 	%r111, %r1468, %r1677;
	add.s32 	%r1699, %r111, %r1676;
	// begin inline asm
	@%p19 st.shared.b32 [ %r1699 + 0 ], %r1436;
	// end inline asm
	bar.sync 	0;
	setp.lt.u32 	%p21, %r4, 64;
	add.s32 	%r1438, %r1468, %r18;
	// begin inline asm
	@%p21 ld.shared.b32 %r1437, [ %r1438 + 0 ];
	// end inline asm
	shfl.sync.bfly.b32 	%r1678, %r1437, 2, 31, -1;
	.loc	2 167 27                        // standard.py:167:27 @[ ffa_triton_v1016-2.py:145:28 ]
	max.f32 	%r1679, %r1437, %r1678;
	.loc	2 188 40                        // standard.py:188:40 @[ ffa_triton_v1016-2.py:145:28 ]
	shfl.sync.bfly.b32 	%r1680, %r1679, 1, 31, -1;
	.loc	2 167 27                        // standard.py:167:27 @[ ffa_triton_v1016-2.py:145:28 ]
	max.f32 	%r1440, %r1679, %r1680;
	.loc	2 188 40                        // standard.py:188:40 @[ ffa_triton_v1016-2.py:145:28 ]
	and.b32 	%r114, %r4, 963;
	setp.eq.s32 	%p22, %r114, 0;
	// begin inline asm
	@%p22 st.shared.b32 [ %r1438 + 0 ], %r1440;
	// end inline asm
	bar.sync 	0;
	ld.shared.b32 	%r115, [%r109];
	ld.shared.b32 	%r116, [%r111];
$L__tmp2:
	.loc	1 148 43                        // ffa_triton_v1016-2.py:148:43
	mul.wide.s32 	%rd70, %r1454, 4;
	add.s64 	%rd25, %rd29, %rd70;
	mul.wide.s32 	%rd71, %r1455, 4;
	add.s64 	%rd26, %rd29, %rd71;
	mov.b32 	%r1442, -8388608;
	.loc	1 148 26                        // ffa_triton_v1016-2.py:148:26
	// begin inline asm
	mov.u32 %r1441, %r1442;
	@%p23 ld.global.b32 { %r1441 }, [ %rd25 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r1443, %r1442;
	@%p2 ld.global.b32 { %r1443 }, [ %rd26 + 0 ];
	// end inline asm
	.loc	1 149 32                        // ffa_triton_v1016-2.py:149:32
	setp.lt.f32 	%p42, %r115, %r1441;
	.loc	1 149 43                        // ffa_triton_v1016-2.py:149:43
	and.pred 	%p43, %p23, %p42;
	.loc	1 150 34                        // ffa_triton_v1016-2.py:150:34
	selp.b32 	%r1681, 1, 0, %p43;
$L__tmp3:
	.loc	2 290 36                        // standard.py:290:36 @[ ffa_triton_v1016-2.py:150:25 ]
	shfl.sync.bfly.b32 	%r1682, %r1681, 16, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ ffa_triton_v1016-2.py:150:25 ]
	add.s32 	%r1683, %r1682, %r1681;
	.loc	2 290 36                        // standard.py:290:36 @[ ffa_triton_v1016-2.py:150:25 ]
	shfl.sync.bfly.b32 	%r1684, %r1683, 8, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ ffa_triton_v1016-2.py:150:25 ]
	add.s32 	%r1685, %r1683, %r1684;
	.loc	2 290 36                        // standard.py:290:36 @[ ffa_triton_v1016-2.py:150:25 ]
	shfl.sync.bfly.b32 	%r1686, %r1685, 4, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ ffa_triton_v1016-2.py:150:25 ]
	add.s32 	%r1687, %r1685, %r1686;
$L__tmp4:
	.loc	1 151 37                        // ffa_triton_v1016-2.py:151:37
	selp.b32 	%r1688, 1, 0, %p25;
$L__tmp5:
	.loc	2 290 36                        // standard.py:290:36 @[ ffa_triton_v1016-2.py:151:25 ]
	shfl.sync.bfly.b32 	%r1689, %r1688, 8, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ ffa_triton_v1016-2.py:151:25 ]
	add.s32 	%r1690, %r1689, %r1688;
	.loc	2 290 36                        // standard.py:290:36 @[ ffa_triton_v1016-2.py:151:25 ]
	shfl.sync.bfly.b32 	%r1691, %r1690, 4, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ ffa_triton_v1016-2.py:151:25 ]
	add.s32 	%r1692, %r1690, %r1691;
	.loc	2 290 36                        // standard.py:290:36 @[ ffa_triton_v1016-2.py:151:25 ]
	shfl.sync.bfly.b32 	%r1693, %r1692, 2, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ ffa_triton_v1016-2.py:151:25 ]
	add.s32 	%r1694, %r1692, %r1693;
	.loc	2 290 36                        // standard.py:290:36 @[ ffa_triton_v1016-2.py:151:25 ]
	shfl.sync.bfly.b32 	%r1695, %r1694, 1, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ ffa_triton_v1016-2.py:151:25 ]
	add.s32 	%r1696, %r1694, %r1695;
$L__tmp6:
	.loc	1 0 0                           // ffa_triton_v1016-2.py:0
	setp.eq.s32 	%p44, %r1687, %r1696;
	.loc	1 158 11                        // ffa_triton_v1016-2.py:158:11
	@%p44 bra 	$L__BB0_4;
// %bb.1:                               // %__nv_exp2f.exit
	.loc	1 0 11                          // ffa_triton_v1016-2.py:0:11
	ld.param.b32 	%r184, [attn_forward_stage1_pruned_param_11];
	ld.param.b64 	%rd6, [attn_forward_stage1_pruned_param_7];
	ld.param.b64 	%rd5, [attn_forward_stage1_pruned_param_5];
	ld.param.b64 	%rd4, [attn_forward_stage1_pruned_param_4];
	ld.param.b64 	%rd3, [attn_forward_stage1_pruned_param_3];
	add.s32 	%r13, %r11, %r1445;
	add.s32 	%r14, %r13, 4;
	add.s32 	%r15, %r13, 8;
	add.s32 	%r16, %r13, 12;
	add.s32 	%r17, %r1445, %r12;
	shl.b32 	%r1464, %r7, 2;
	or.b32 	%r20, %r19, %r1464;
	.loc	1 111 28                        // ffa_triton_v1016-2.py:111:28
	and.b32 	%r1712, %r4, 31;
	.loc	1 129 49                        // ffa_triton_v1016-2.py:129:49
	and.b32 	%r1713, %r4, 127;
	.loc	1 129 36                        // ffa_triton_v1016-2.py:129:36
	or.b32 	%r1714, %r1713, %r3;
	or.b32 	%r1715, %r1714, 128;
	.loc	1 130 32                        // ffa_triton_v1016-2.py:130:32
	setp.lt.s32 	%p68, %r1715, %r183;
	setp.lt.s32 	%p69, %r1714, %r183;
	.loc	1 161 64                        // ffa_triton_v1016-2.py:161:64
	sub.f32 	%r1716, %r77, %r115;
	sub.f32 	%r1717, %r78, %r115;
	sub.f32 	%r1718, %r79, %r116;
	sub.f32 	%r1719, %r80, %r116;
	sub.f32 	%r1720, %r81, %r115;
	sub.f32 	%r1721, %r82, %r115;
	sub.f32 	%r1722, %r83, %r116;
	sub.f32 	%r1723, %r84, %r116;
	sub.f32 	%r1724, %r85, %r115;
	sub.f32 	%r1725, %r86, %r115;
	sub.f32 	%r1726, %r87, %r116;
	sub.f32 	%r1727, %r88, %r116;
	sub.f32 	%r1728, %r89, %r115;
	sub.f32 	%r1729, %r90, %r115;
	sub.f32 	%r1730, %r91, %r116;
	sub.f32 	%r1731, %r92, %r116;
	sub.f32 	%r1732, %r93, %r115;
	sub.f32 	%r1733, %r94, %r115;
	sub.f32 	%r1734, %r95, %r116;
	sub.f32 	%r1735, %r96, %r116;
	sub.f32 	%r1736, %r97, %r115;
	sub.f32 	%r1737, %r98, %r115;
	sub.f32 	%r1738, %r99, %r116;
	sub.f32 	%r1739, %r100, %r116;
	sub.f32 	%r1740, %r101, %r115;
	sub.f32 	%r1741, %r102, %r115;
	sub.f32 	%r1742, %r103, %r116;
	sub.f32 	%r1743, %r104, %r116;
	sub.f32 	%r1744, %r105, %r115;
	sub.f32 	%r1745, %r106, %r115;
	sub.f32 	%r1746, %r107, %r116;
	sub.f32 	%r1747, %r108, %r116;
	.loc	1 161 58                        // ffa_triton_v1016-2.py:161:58
	ex2.approx.ftz.f32 	%r1748, %r1716;
	ex2.approx.ftz.f32 	%r1749, %r1717;
	ex2.approx.ftz.f32 	%r1750, %r1718;
	ex2.approx.ftz.f32 	%r1751, %r1719;
	ex2.approx.ftz.f32 	%r1752, %r1720;
	ex2.approx.ftz.f32 	%r1753, %r1721;
	ex2.approx.ftz.f32 	%r1754, %r1722;
	ex2.approx.ftz.f32 	%r1755, %r1723;
	ex2.approx.ftz.f32 	%r1756, %r1724;
	ex2.approx.ftz.f32 	%r1757, %r1725;
	ex2.approx.ftz.f32 	%r1758, %r1726;
	ex2.approx.ftz.f32 	%r1759, %r1727;
	ex2.approx.ftz.f32 	%r1760, %r1728;
	ex2.approx.ftz.f32 	%r1761, %r1729;
	ex2.approx.ftz.f32 	%r1762, %r1730;
	ex2.approx.ftz.f32 	%r1763, %r1731;
	ex2.approx.ftz.f32 	%r1764, %r1732;
	ex2.approx.ftz.f32 	%r1765, %r1733;
	ex2.approx.ftz.f32 	%r1766, %r1734;
	ex2.approx.ftz.f32 	%r1767, %r1735;
	ex2.approx.ftz.f32 	%r1768, %r1736;
	ex2.approx.ftz.f32 	%r1769, %r1737;
	ex2.approx.ftz.f32 	%r1770, %r1738;
	ex2.approx.ftz.f32 	%r1771, %r1739;
	ex2.approx.ftz.f32 	%r1772, %r1740;
	ex2.approx.ftz.f32 	%r1773, %r1741;
	ex2.approx.ftz.f32 	%r1774, %r1742;
	ex2.approx.ftz.f32 	%r1775, %r1743;
	ex2.approx.ftz.f32 	%r1776, %r1744;
	ex2.approx.ftz.f32 	%r1777, %r1745;
	ex2.approx.ftz.f32 	%r1778, %r1746;
	ex2.approx.ftz.f32 	%r1779, %r1747;
	.loc	1 161 82                        // ffa_triton_v1016-2.py:161:82
	selp.f32 	%r117, %r1748, 0f00000000, %p26;
	selp.f32 	%r118, %r1749, 0f00000000, %p27;
	selp.f32 	%r119, %r1750, 0f00000000, %p26;
	selp.f32 	%r120, %r1751, 0f00000000, %p27;
	selp.f32 	%r121, %r1752, 0f00000000, %p28;
	selp.f32 	%r122, %r1753, 0f00000000, %p29;
	selp.f32 	%r123, %r1754, 0f00000000, %p28;
	selp.f32 	%r124, %r1755, 0f00000000, %p29;
	selp.f32 	%r125, %r1756, 0f00000000, %p30;
	selp.f32 	%r126, %r1757, 0f00000000, %p31;
	selp.f32 	%r127, %r1758, 0f00000000, %p30;
	selp.f32 	%r128, %r1759, 0f00000000, %p31;
	selp.f32 	%r129, %r1760, 0f00000000, %p32;
	selp.f32 	%r130, %r1761, 0f00000000, %p33;
	selp.f32 	%r131, %r1762, 0f00000000, %p32;
	selp.f32 	%r132, %r1763, 0f00000000, %p33;
	selp.f32 	%r133, %r1764, 0f00000000, %p34;
	selp.f32 	%r134, %r1765, 0f00000000, %p35;
	selp.f32 	%r135, %r1766, 0f00000000, %p34;
	selp.f32 	%r136, %r1767, 0f00000000, %p35;
	selp.f32 	%r137, %r1768, 0f00000000, %p36;
	selp.f32 	%r138, %r1769, 0f00000000, %p37;
	selp.f32 	%r139, %r1770, 0f00000000, %p36;
	selp.f32 	%r140, %r1771, 0f00000000, %p37;
	selp.f32 	%r141, %r1772, 0f00000000, %p38;
	selp.f32 	%r142, %r1773, 0f00000000, %p39;
	selp.f32 	%r143, %r1774, 0f00000000, %p38;
	selp.f32 	%r144, %r1775, 0f00000000, %p39;
	selp.f32 	%r145, %r1776, 0f00000000, %p40;
	selp.f32 	%r146, %r1777, 0f00000000, %p41;
	selp.f32 	%r147, %r1778, 0f00000000, %p40;
	selp.f32 	%r148, %r1779, 0f00000000, %p41;
$L__tmp7:
	.loc	2 290 36                        // standard.py:290:36 @[ ffa_triton_v1016-2.py:162:28 ]
	bar.sync 	0;
	.loc	2 260 15                        // standard.py:260:15 @[ ffa_triton_v1016-2.py:162:28 ]
	add.f32 	%r1780, %r117, %r118;
	add.f32 	%r1781, %r119, %r120;
	add.f32 	%r1782, %r1780, %r121;
	add.f32 	%r1783, %r1782, %r122;
	add.f32 	%r1784, %r1781, %r123;
	add.f32 	%r1785, %r1784, %r124;
	add.f32 	%r1786, %r1783, %r125;
	add.f32 	%r1787, %r1786, %r126;
	add.f32 	%r1788, %r1785, %r127;
	add.f32 	%r1789, %r1788, %r128;
	add.f32 	%r1790, %r1787, %r129;
	add.f32 	%r1791, %r1790, %r130;
	add.f32 	%r1792, %r1789, %r131;
	add.f32 	%r1793, %r1792, %r132;
	add.f32 	%r1794, %r1791, %r133;
	add.f32 	%r1795, %r1794, %r134;
	add.f32 	%r1796, %r1793, %r135;
	add.f32 	%r1797, %r1796, %r136;
	add.f32 	%r1798, %r1795, %r137;
	add.f32 	%r1799, %r1798, %r138;
	add.f32 	%r1800, %r1797, %r139;
	add.f32 	%r1801, %r1800, %r140;
	add.f32 	%r1802, %r1799, %r141;
	add.f32 	%r1803, %r1802, %r142;
	add.f32 	%r1804, %r1801, %r143;
	add.f32 	%r1805, %r1804, %r144;
	add.f32 	%r1806, %r1803, %r145;
	add.f32 	%r1807, %r1806, %r146;
	add.f32 	%r1808, %r1805, %r147;
	add.f32 	%r1809, %r1808, %r148;
	.loc	2 290 36                        // standard.py:290:36 @[ ffa_triton_v1016-2.py:162:28 ]
	shfl.sync.bfly.b32 	%r1810, %r1807, 2, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ ffa_triton_v1016-2.py:162:28 ]
	add.f32 	%r1811, %r1807, %r1810;
	.loc	2 290 36                        // standard.py:290:36 @[ ffa_triton_v1016-2.py:162:28 ]
	shfl.sync.bfly.b32 	%r1812, %r1811, 1, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ ffa_triton_v1016-2.py:162:28 ]
	add.f32 	%r1698, %r1811, %r1812;
	.loc	2 290 36                        // standard.py:290:36 @[ ffa_triton_v1016-2.py:162:28 ]
	shfl.sync.bfly.b32 	%r1813, %r1809, 2, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ ffa_triton_v1016-2.py:162:28 ]
	add.f32 	%r1814, %r1809, %r1813;
	.loc	2 290 36                        // standard.py:290:36 @[ ffa_triton_v1016-2.py:162:28 ]
	shfl.sync.bfly.b32 	%r1815, %r1814, 1, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ ffa_triton_v1016-2.py:162:28 ]
	add.f32 	%r1700, %r1814, %r1815;
	.loc	2 290 36                        // standard.py:290:36 @[ ffa_triton_v1016-2.py:162:28 ]
	// begin inline asm
	@%p19 st.shared.b32 [ %r1697 + 0 ], %r1698;
	// end inline asm
	// begin inline asm
	@%p19 st.shared.b32 [ %r1699 + 0 ], %r1700;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p21 ld.shared.b32 %r1701, [ %r1438 + 0 ];
	// end inline asm
	shfl.sync.bfly.b32 	%r1816, %r1701, 2, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ ffa_triton_v1016-2.py:162:28 ]
	add.f32 	%r1817, %r1701, %r1816;
	.loc	2 290 36                        // standard.py:290:36 @[ ffa_triton_v1016-2.py:162:28 ]
	shfl.sync.bfly.b32 	%r1818, %r1817, 1, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ ffa_triton_v1016-2.py:162:28 ]
	add.f32 	%r1704, %r1817, %r1818;
	.loc	2 290 36                        // standard.py:290:36 @[ ffa_triton_v1016-2.py:162:28 ]
	// begin inline asm
	@%p22 st.shared.b32 [ %r1438 + 0 ], %r1704;
	// end inline asm
	bar.sync 	0;
	ld.shared.b32 	%r149, [%r109];
	ld.shared.b32 	%r150, [%r111];
$L__tmp8:
	.loc	1 165 41                        // ffa_triton_v1016-2.py:165:41
	selp.b32 	%r1819, 1, 0, %p69;
	selp.b32 	%r1820, 1, 0, %p68;
$L__tmp9:
	.loc	2 290 36                        // standard.py:290:36 @[ ffa_triton_v1016-2.py:165:28 ]
	bar.sync 	0;
	.loc	2 260 15                        // standard.py:260:15 @[ ffa_triton_v1016-2.py:165:28 ]
	add.s32 	%r1821, %r1819, %r1820;
	mov.b32 	%r1822, -1;
	.loc	2 290 36                        // standard.py:290:36 @[ ffa_triton_v1016-2.py:165:28 ]
	redux.sync.add.s32 	%r1706, %r1821, %r1822;
	setp.eq.s32 	%p49, %r1712, 0;
	add.s32 	%r1705, %r1468, %r1676;
	// begin inline asm
	@%p49 st.shared.b32 [ %r1705 + 0 ], %r1706;
	// end inline asm
	bar.sync 	0;
	setp.lt.u32 	%p50, %r4, 4;
	// begin inline asm
	@%p50 ld.shared.b32 %r1707, [ %r1438 + 0 ];
	// end inline asm
	shfl.sync.bfly.b32 	%r1825, %r1707, 2, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ ffa_triton_v1016-2.py:165:28 ]
	add.s32 	%r1826, %r1825, %r1707;
	.loc	2 290 36                        // standard.py:290:36 @[ ffa_triton_v1016-2.py:165:28 ]
	shfl.sync.bfly.b32 	%r1827, %r1826, 1, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ ffa_triton_v1016-2.py:165:28 ]
	add.s32 	%r1710, %r1826, %r1827;
	.loc	2 290 36                        // standard.py:290:36 @[ ffa_triton_v1016-2.py:165:28 ]
	setp.eq.s32 	%p51, %r4, 0;
	// begin inline asm
	@%p51 st.shared.b32 [ %r1438 + 0 ], %r1710;
	// end inline asm
	bar.sync 	0;
	ld.shared.b32 	%r1828, [global_smem];
$L__tmp10:
	.loc	1 165 62                        // ffa_triton_v1016-2.py:165:62
	setp.lt.s32 	%p70, %r1828, 1;
	mov.b32 	%r2401, 0f00000000;
	mov.b32 	%r2402, %r2401;
	mov.b32 	%r2403, %r2401;
	mov.b32 	%r2404, %r2401;
	mov.b32 	%r2415, %r2401;
	mov.b32 	%r2416, %r2401;
	mov.b32 	%r2417, %r2401;
	mov.b32 	%r2418, %r2401;
	mov.b32 	%r2429, %r2401;
	mov.b32 	%r2430, %r2401;
	mov.b32 	%r2431, %r2401;
	mov.b32 	%r2432, %r2401;
	mov.b32 	%r2443, %r2401;
	mov.b32 	%r2444, %r2401;
	mov.b32 	%r2445, %r2401;
	mov.b32 	%r2446, %r2401;
	.loc	1 167 15                        // ffa_triton_v1016-2.py:167:15
	@%p70 bra 	$L__BB0_3;
// %bb.2:
	.loc	1 0 15                          // ffa_triton_v1016-2.py:0:15
	ld.param.b64 	%rd2, [attn_forward_stage1_pruned_param_2];
	shr.u32 	%r1449, %r4, 4;
	cvt.u64.u32 	%rd1, %r1459;
	shl.b32 	%r21, %r1450, 7;
	or.b32 	%r42, %r1450, %r3;
	or.b32 	%r43, %r1451, %r3;
	or.b32 	%r44, %r42, 16;
	or.b32 	%r45, %r42, 24;
	or.b32 	%r46, %r42, 32;
	or.b32 	%r47, %r42, 40;
	or.b32 	%r48, %r42, 48;
	or.b32 	%r1494, %r3, %r1449;
	or.b32 	%r49, %r1494, 56;
	or.b32 	%r50, %r42, 64;
	or.b32 	%r51, %r42, 72;
	or.b32 	%r52, %r42, 80;
	or.b32 	%r53, %r42, 88;
	or.b32 	%r54, %r42, 96;
	or.b32 	%r55, %r42, 104;
	or.b32 	%r56, %r42, 112;
	or.b32 	%r57, %r1494, 120;
	or.b32 	%r58, %r42, 128;
	or.b32 	%r59, %r42, 136;
	or.b32 	%r60, %r42, 144;
	or.b32 	%r61, %r42, 152;
	or.b32 	%r62, %r42, 160;
	or.b32 	%r63, %r42, 168;
	or.b32 	%r64, %r42, 176;
	or.b32 	%r65, %r1494, 184;
	or.b32 	%r66, %r42, 192;
	or.b32 	%r67, %r42, 200;
	or.b32 	%r68, %r42, 208;
	or.b32 	%r69, %r42, 216;
	or.b32 	%r70, %r42, 224;
	or.b32 	%r71, %r42, 232;
	or.b32 	%r72, %r42, 240;
	or.b32 	%r73, %r1494, 248;
	.loc	1 130 32                        // ffa_triton_v1016-2.py:130:32
	setp.lt.s32 	%p102, %r73, %r183;
	setp.lt.s32 	%p101, %r72, %r183;
	setp.lt.s32 	%p100, %r71, %r183;
	setp.lt.s32 	%p99, %r70, %r183;
	setp.lt.s32 	%p98, %r69, %r183;
	setp.lt.s32 	%p97, %r68, %r183;
	setp.lt.s32 	%p96, %r67, %r183;
	setp.lt.s32 	%p95, %r66, %r183;
	setp.lt.s32 	%p94, %r65, %r183;
	setp.lt.s32 	%p93, %r64, %r183;
	setp.lt.s32 	%p92, %r63, %r183;
	setp.lt.s32 	%p91, %r62, %r183;
	setp.lt.s32 	%p90, %r61, %r183;
	setp.lt.s32 	%p89, %r60, %r183;
	setp.lt.s32 	%p88, %r59, %r183;
	setp.lt.s32 	%p87, %r58, %r183;
	setp.lt.s32 	%p86, %r57, %r183;
	setp.lt.s32 	%p85, %r56, %r183;
	setp.lt.s32 	%p84, %r55, %r183;
	setp.lt.s32 	%p83, %r54, %r183;
	setp.lt.s32 	%p82, %r53, %r183;
	setp.lt.s32 	%p81, %r52, %r183;
	setp.lt.s32 	%p80, %r51, %r183;
	setp.lt.s32 	%p79, %r50, %r183;
	setp.lt.s32 	%p78, %r49, %r183;
	setp.lt.s32 	%p77, %r48, %r183;
	setp.lt.s32 	%p76, %r47, %r183;
	setp.lt.s32 	%p75, %r46, %r183;
	setp.lt.s32 	%p74, %r45, %r183;
	setp.lt.s32 	%p73, %r44, %r183;
	setp.lt.s32 	%p72, %r43, %r183;
	setp.lt.s32 	%p71, %r42, %r183;
	cvt.u32.u64 	%r3241, %rd1;
	.loc	1 111 28                        // ffa_triton_v1016-2.py:111:28
	setp.eq.s32 	%p103, %r5, 0;
	.loc	1 168 52                        // ffa_triton_v1016-2.py:168:52
	shl.b32 	%r3242, %r42, 10;
	shl.b32 	%r3243, %r43, 10;
	shl.b32 	%r3244, %r44, 10;
	shl.b32 	%r3245, %r45, 10;
	shl.b32 	%r3246, %r46, 10;
	shl.b32 	%r3247, %r47, 10;
	shl.b32 	%r3248, %r48, 10;
	shl.b32 	%r3249, %r49, 10;
	shl.b32 	%r3250, %r50, 10;
	shl.b32 	%r3251, %r51, 10;
	shl.b32 	%r3252, %r52, 10;
	shl.b32 	%r3253, %r53, 10;
	shl.b32 	%r3254, %r54, 10;
	shl.b32 	%r3255, %r55, 10;
	shl.b32 	%r3256, %r56, 10;
	shl.b32 	%r3257, %r57, 10;
	shl.b32 	%r3258, %r58, 10;
	shl.b32 	%r3259, %r59, 10;
	shl.b32 	%r3260, %r60, 10;
	shl.b32 	%r3261, %r61, 10;
	shl.b32 	%r3262, %r62, 10;
	shl.b32 	%r3263, %r63, 10;
	shl.b32 	%r3264, %r64, 10;
	shl.b32 	%r3265, %r65, 10;
	shl.b32 	%r3266, %r66, 10;
	shl.b32 	%r3267, %r67, 10;
	shl.b32 	%r3268, %r68, 10;
	shl.b32 	%r3269, %r69, 10;
	shl.b32 	%r3270, %r70, 10;
	shl.b32 	%r3271, %r71, 10;
	shl.b32 	%r3272, %r72, 10;
	shl.b32 	%r3273, %r73, 10;
	.loc	1 168 30                        // ffa_triton_v1016-2.py:168:30
	mul.wide.s32 	%rd104, %r3242, 2;
	add.s64 	%rd105, %rd2, %rd104;
	mul.wide.s32 	%rd106, %r3243, 2;
	add.s64 	%rd107, %rd2, %rd106;
	mul.wide.s32 	%rd108, %r3244, 2;
	add.s64 	%rd109, %rd2, %rd108;
	mul.wide.s32 	%rd110, %r3245, 2;
	add.s64 	%rd111, %rd2, %rd110;
	mul.wide.s32 	%rd112, %r3246, 2;
	add.s64 	%rd113, %rd2, %rd112;
	mul.wide.s32 	%rd114, %r3247, 2;
	add.s64 	%rd115, %rd2, %rd114;
	mul.wide.s32 	%rd116, %r3248, 2;
	add.s64 	%rd117, %rd2, %rd116;
	mul.wide.s32 	%rd118, %r3249, 2;
	add.s64 	%rd119, %rd2, %rd118;
	mul.wide.s32 	%rd120, %r3250, 2;
	add.s64 	%rd121, %rd2, %rd120;
	mul.wide.s32 	%rd122, %r3251, 2;
	add.s64 	%rd123, %rd2, %rd122;
	mul.wide.s32 	%rd124, %r3252, 2;
	add.s64 	%rd125, %rd2, %rd124;
	mul.wide.s32 	%rd126, %r3253, 2;
	add.s64 	%rd127, %rd2, %rd126;
	mul.wide.s32 	%rd128, %r3254, 2;
	add.s64 	%rd129, %rd2, %rd128;
	mul.wide.s32 	%rd130, %r3255, 2;
	add.s64 	%rd131, %rd2, %rd130;
	mul.wide.s32 	%rd132, %r3256, 2;
	add.s64 	%rd133, %rd2, %rd132;
	mul.wide.s32 	%rd134, %r3257, 2;
	add.s64 	%rd135, %rd2, %rd134;
	mul.wide.s32 	%rd136, %r3258, 2;
	add.s64 	%rd137, %rd2, %rd136;
	mul.wide.s32 	%rd138, %r3259, 2;
	add.s64 	%rd139, %rd2, %rd138;
	mul.wide.s32 	%rd140, %r3260, 2;
	add.s64 	%rd141, %rd2, %rd140;
	mul.wide.s32 	%rd142, %r3261, 2;
	add.s64 	%rd143, %rd2, %rd142;
	mul.wide.s32 	%rd144, %r3262, 2;
	add.s64 	%rd145, %rd2, %rd144;
	mul.wide.s32 	%rd146, %r3263, 2;
	add.s64 	%rd147, %rd2, %rd146;
	mul.wide.s32 	%rd148, %r3264, 2;
	add.s64 	%rd149, %rd2, %rd148;
	mul.wide.s32 	%rd150, %r3265, 2;
	add.s64 	%rd151, %rd2, %rd150;
	mul.wide.s32 	%rd152, %r3266, 2;
	add.s64 	%rd153, %rd2, %rd152;
	mul.wide.s32 	%rd154, %r3267, 2;
	add.s64 	%rd155, %rd2, %rd154;
	mul.wide.s32 	%rd156, %r3268, 2;
	add.s64 	%rd157, %rd2, %rd156;
	mul.wide.s32 	%rd158, %r3269, 2;
	add.s64 	%rd159, %rd2, %rd158;
	mul.wide.s32 	%rd160, %r3270, 2;
	add.s64 	%rd161, %rd2, %rd160;
	mul.wide.s32 	%rd162, %r3271, 2;
	add.s64 	%rd163, %rd2, %rd162;
	mul.wide.s32 	%rd164, %r3272, 2;
	add.s64 	%rd165, %rd2, %rd164;
	mul.wide.s32 	%rd166, %r3273, 2;
	add.s64 	%rd167, %rd2, %rd166;
	.loc	1 168 65                        // ffa_triton_v1016-2.py:168:65
	mul.wide.s32 	%rd168, %r74, 2;
	add.s64 	%rd169, %rd105, %rd168;
	add.s64 	%rd170, %rd107, %rd168;
	add.s64 	%rd171, %rd109, %rd168;
	add.s64 	%rd172, %rd111, %rd168;
	add.s64 	%rd173, %rd113, %rd168;
	add.s64 	%rd174, %rd115, %rd168;
	add.s64 	%rd175, %rd117, %rd168;
	add.s64 	%rd176, %rd119, %rd168;
	add.s64 	%rd177, %rd121, %rd168;
	add.s64 	%rd178, %rd123, %rd168;
	add.s64 	%rd179, %rd125, %rd168;
	add.s64 	%rd180, %rd127, %rd168;
	add.s64 	%rd181, %rd129, %rd168;
	add.s64 	%rd182, %rd131, %rd168;
	add.s64 	%rd183, %rd133, %rd168;
	add.s64 	%rd184, %rd135, %rd168;
	add.s64 	%rd185, %rd137, %rd168;
	add.s64 	%rd186, %rd139, %rd168;
	add.s64 	%rd187, %rd141, %rd168;
	add.s64 	%rd188, %rd143, %rd168;
	add.s64 	%rd189, %rd145, %rd168;
	add.s64 	%rd190, %rd147, %rd168;
	add.s64 	%rd191, %rd149, %rd168;
	add.s64 	%rd192, %rd151, %rd168;
	add.s64 	%rd193, %rd153, %rd168;
	add.s64 	%rd194, %rd155, %rd168;
	add.s64 	%rd195, %rd157, %rd168;
	add.s64 	%rd196, %rd159, %rd168;
	add.s64 	%rd197, %rd161, %rd168;
	add.s64 	%rd198, %rd163, %rd168;
	add.s64 	%rd199, %rd165, %rd168;
	add.s64 	%rd200, %rd167, %rd168;
	.loc	1 168 80                        // ffa_triton_v1016-2.py:168:80
	shl.b64 	%rd201, %rd1, 1;
	add.s64 	%rd72, %rd169, %rd201;
	add.s64 	%rd73, %rd170, %rd201;
	add.s64 	%rd74, %rd171, %rd201;
	add.s64 	%rd75, %rd172, %rd201;
	add.s64 	%rd76, %rd173, %rd201;
	add.s64 	%rd77, %rd174, %rd201;
	add.s64 	%rd78, %rd175, %rd201;
	add.s64 	%rd79, %rd176, %rd201;
	add.s64 	%rd80, %rd177, %rd201;
	add.s64 	%rd81, %rd178, %rd201;
	add.s64 	%rd82, %rd179, %rd201;
	add.s64 	%rd83, %rd180, %rd201;
	add.s64 	%rd84, %rd181, %rd201;
	add.s64 	%rd85, %rd182, %rd201;
	add.s64 	%rd86, %rd183, %rd201;
	add.s64 	%rd87, %rd184, %rd201;
	add.s64 	%rd88, %rd185, %rd201;
	add.s64 	%rd89, %rd186, %rd201;
	add.s64 	%rd90, %rd187, %rd201;
	add.s64 	%rd91, %rd188, %rd201;
	add.s64 	%rd92, %rd189, %rd201;
	add.s64 	%rd93, %rd190, %rd201;
	add.s64 	%rd94, %rd191, %rd201;
	add.s64 	%rd95, %rd192, %rd201;
	add.s64 	%rd96, %rd193, %rd201;
	add.s64 	%rd97, %rd194, %rd201;
	add.s64 	%rd98, %rd195, %rd201;
	add.s64 	%rd99, %rd196, %rd201;
	add.s64 	%rd100, %rd197, %rd201;
	add.s64 	%rd101, %rd198, %rd201;
	add.s64 	%rd102, %rd199, %rd201;
	add.s64 	%rd103, %rd200, %rd201;
	mov.b32 	%r2443, 0;
	.loc	1 169 33                        // ffa_triton_v1016-2.py:169:33
	// begin inline asm
	mov.u32 %r1829, %r2443;
	mov.u32 %r1830, %r2443;
	mov.u32 %r1831, %r2443;
	mov.u32 %r1832, %r2443;
	@%p71 ld.global.v4.b32 { %r1829, %r1830, %r1831, %r1832 }, [ %rd72 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r1837, %r2443;
	mov.u32 %r1838, %r2443;
	mov.u32 %r1839, %r2443;
	mov.u32 %r1840, %r2443;
	@%p72 ld.global.v4.b32 { %r1837, %r1838, %r1839, %r1840 }, [ %rd73 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r1845, %r2443;
	mov.u32 %r1846, %r2443;
	mov.u32 %r1847, %r2443;
	mov.u32 %r1848, %r2443;
	@%p73 ld.global.v4.b32 { %r1845, %r1846, %r1847, %r1848 }, [ %rd74 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r1853, %r2443;
	mov.u32 %r1854, %r2443;
	mov.u32 %r1855, %r2443;
	mov.u32 %r1856, %r2443;
	@%p74 ld.global.v4.b32 { %r1853, %r1854, %r1855, %r1856 }, [ %rd75 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r1861, %r2443;
	mov.u32 %r1862, %r2443;
	mov.u32 %r1863, %r2443;
	mov.u32 %r1864, %r2443;
	@%p75 ld.global.v4.b32 { %r1861, %r1862, %r1863, %r1864 }, [ %rd76 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r1869, %r2443;
	mov.u32 %r1870, %r2443;
	mov.u32 %r1871, %r2443;
	mov.u32 %r1872, %r2443;
	@%p76 ld.global.v4.b32 { %r1869, %r1870, %r1871, %r1872 }, [ %rd77 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r1877, %r2443;
	mov.u32 %r1878, %r2443;
	mov.u32 %r1879, %r2443;
	mov.u32 %r1880, %r2443;
	@%p77 ld.global.v4.b32 { %r1877, %r1878, %r1879, %r1880 }, [ %rd78 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r1885, %r2443;
	mov.u32 %r1886, %r2443;
	mov.u32 %r1887, %r2443;
	mov.u32 %r1888, %r2443;
	@%p78 ld.global.v4.b32 { %r1885, %r1886, %r1887, %r1888 }, [ %rd79 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r1893, %r2443;
	mov.u32 %r1894, %r2443;
	mov.u32 %r1895, %r2443;
	mov.u32 %r1896, %r2443;
	@%p79 ld.global.v4.b32 { %r1893, %r1894, %r1895, %r1896 }, [ %rd80 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r1901, %r2443;
	mov.u32 %r1902, %r2443;
	mov.u32 %r1903, %r2443;
	mov.u32 %r1904, %r2443;
	@%p80 ld.global.v4.b32 { %r1901, %r1902, %r1903, %r1904 }, [ %rd81 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r1909, %r2443;
	mov.u32 %r1910, %r2443;
	mov.u32 %r1911, %r2443;
	mov.u32 %r1912, %r2443;
	@%p81 ld.global.v4.b32 { %r1909, %r1910, %r1911, %r1912 }, [ %rd82 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r1917, %r2443;
	mov.u32 %r1918, %r2443;
	mov.u32 %r1919, %r2443;
	mov.u32 %r1920, %r2443;
	@%p82 ld.global.v4.b32 { %r1917, %r1918, %r1919, %r1920 }, [ %rd83 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r1925, %r2443;
	mov.u32 %r1926, %r2443;
	mov.u32 %r1927, %r2443;
	mov.u32 %r1928, %r2443;
	@%p83 ld.global.v4.b32 { %r1925, %r1926, %r1927, %r1928 }, [ %rd84 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r1933, %r2443;
	mov.u32 %r1934, %r2443;
	mov.u32 %r1935, %r2443;
	mov.u32 %r1936, %r2443;
	@%p84 ld.global.v4.b32 { %r1933, %r1934, %r1935, %r1936 }, [ %rd85 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r1941, %r2443;
	mov.u32 %r1942, %r2443;
	mov.u32 %r1943, %r2443;
	mov.u32 %r1944, %r2443;
	@%p85 ld.global.v4.b32 { %r1941, %r1942, %r1943, %r1944 }, [ %rd86 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r1949, %r2443;
	mov.u32 %r1950, %r2443;
	mov.u32 %r1951, %r2443;
	mov.u32 %r1952, %r2443;
	@%p86 ld.global.v4.b32 { %r1949, %r1950, %r1951, %r1952 }, [ %rd87 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r1957, %r2443;
	mov.u32 %r1958, %r2443;
	mov.u32 %r1959, %r2443;
	mov.u32 %r1960, %r2443;
	@%p87 ld.global.v4.b32 { %r1957, %r1958, %r1959, %r1960 }, [ %rd88 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r1965, %r2443;
	mov.u32 %r1966, %r2443;
	mov.u32 %r1967, %r2443;
	mov.u32 %r1968, %r2443;
	@%p88 ld.global.v4.b32 { %r1965, %r1966, %r1967, %r1968 }, [ %rd89 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r1973, %r2443;
	mov.u32 %r1974, %r2443;
	mov.u32 %r1975, %r2443;
	mov.u32 %r1976, %r2443;
	@%p89 ld.global.v4.b32 { %r1973, %r1974, %r1975, %r1976 }, [ %rd90 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r1981, %r2443;
	mov.u32 %r1982, %r2443;
	mov.u32 %r1983, %r2443;
	mov.u32 %r1984, %r2443;
	@%p90 ld.global.v4.b32 { %r1981, %r1982, %r1983, %r1984 }, [ %rd91 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r1989, %r2443;
	mov.u32 %r1990, %r2443;
	mov.u32 %r1991, %r2443;
	mov.u32 %r1992, %r2443;
	@%p91 ld.global.v4.b32 { %r1989, %r1990, %r1991, %r1992 }, [ %rd92 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r1997, %r2443;
	mov.u32 %r1998, %r2443;
	mov.u32 %r1999, %r2443;
	mov.u32 %r2000, %r2443;
	@%p92 ld.global.v4.b32 { %r1997, %r1998, %r1999, %r2000 }, [ %rd93 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r2005, %r2443;
	mov.u32 %r2006, %r2443;
	mov.u32 %r2007, %r2443;
	mov.u32 %r2008, %r2443;
	@%p93 ld.global.v4.b32 { %r2005, %r2006, %r2007, %r2008 }, [ %rd94 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r2013, %r2443;
	mov.u32 %r2014, %r2443;
	mov.u32 %r2015, %r2443;
	mov.u32 %r2016, %r2443;
	@%p94 ld.global.v4.b32 { %r2013, %r2014, %r2015, %r2016 }, [ %rd95 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r2021, %r2443;
	mov.u32 %r2022, %r2443;
	mov.u32 %r2023, %r2443;
	mov.u32 %r2024, %r2443;
	@%p95 ld.global.v4.b32 { %r2021, %r2022, %r2023, %r2024 }, [ %rd96 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r2029, %r2443;
	mov.u32 %r2030, %r2443;
	mov.u32 %r2031, %r2443;
	mov.u32 %r2032, %r2443;
	@%p96 ld.global.v4.b32 { %r2029, %r2030, %r2031, %r2032 }, [ %rd97 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r2037, %r2443;
	mov.u32 %r2038, %r2443;
	mov.u32 %r2039, %r2443;
	mov.u32 %r2040, %r2443;
	@%p97 ld.global.v4.b32 { %r2037, %r2038, %r2039, %r2040 }, [ %rd98 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r2045, %r2443;
	mov.u32 %r2046, %r2443;
	mov.u32 %r2047, %r2443;
	mov.u32 %r2048, %r2443;
	@%p98 ld.global.v4.b32 { %r2045, %r2046, %r2047, %r2048 }, [ %rd99 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r2053, %r2443;
	mov.u32 %r2054, %r2443;
	mov.u32 %r2055, %r2443;
	mov.u32 %r2056, %r2443;
	@%p99 ld.global.v4.b32 { %r2053, %r2054, %r2055, %r2056 }, [ %rd100 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r2061, %r2443;
	mov.u32 %r2062, %r2443;
	mov.u32 %r2063, %r2443;
	mov.u32 %r2064, %r2443;
	@%p100 ld.global.v4.b32 { %r2061, %r2062, %r2063, %r2064 }, [ %rd101 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r2069, %r2443;
	mov.u32 %r2070, %r2443;
	mov.u32 %r2071, %r2443;
	mov.u32 %r2072, %r2443;
	@%p101 ld.global.v4.b32 { %r2069, %r2070, %r2071, %r2072 }, [ %rd102 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r2077, %r2443;
	mov.u32 %r2078, %r2443;
	mov.u32 %r2079, %r2443;
	mov.u32 %r2080, %r2443;
	@%p102 ld.global.v4.b32 { %r2077, %r2078, %r2079, %r2080 }, [ %rd103 + 0 ];
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r3274, %r7, 1;
	shr.u32 	%r3275, %r4, 1;
	and.b32 	%r3276, %r3275, 56;
	xor.b32 	%r3277, %r3276, %r3241;
	shl.b32 	%r3278, %r3277, 1;
	add.s32 	%r3280, %r1468, %r3278;
	shl.b32 	%r3281, %r21, 1;
	add.s32 	%r3282, %r3280, %r3281;
	st.shared.v4.b32 	[%r3282], {%r1829, %r1830, %r1831, %r1832};
	st.shared.v4.b32 	[%r3282+2048], {%r1837, %r1838, %r1839, %r1840};
	st.shared.v4.b32 	[%r3282+4096], {%r1845, %r1846, %r1847, %r1848};
	st.shared.v4.b32 	[%r3282+6144], {%r1853, %r1854, %r1855, %r1856};
	st.shared.v4.b32 	[%r3282+8192], {%r1861, %r1862, %r1863, %r1864};
	st.shared.v4.b32 	[%r3282+10240], {%r1869, %r1870, %r1871, %r1872};
	st.shared.v4.b32 	[%r3282+12288], {%r1877, %r1878, %r1879, %r1880};
	st.shared.v4.b32 	[%r3282+14336], {%r1885, %r1886, %r1887, %r1888};
	st.shared.v4.b32 	[%r3282+16384], {%r1893, %r1894, %r1895, %r1896};
	st.shared.v4.b32 	[%r3282+18432], {%r1901, %r1902, %r1903, %r1904};
	st.shared.v4.b32 	[%r3282+20480], {%r1909, %r1910, %r1911, %r1912};
	st.shared.v4.b32 	[%r3282+22528], {%r1917, %r1918, %r1919, %r1920};
	st.shared.v4.b32 	[%r3282+24576], {%r1925, %r1926, %r1927, %r1928};
	st.shared.v4.b32 	[%r3282+26624], {%r1933, %r1934, %r1935, %r1936};
	st.shared.v4.b32 	[%r3282+28672], {%r1941, %r1942, %r1943, %r1944};
	st.shared.v4.b32 	[%r3282+30720], {%r1949, %r1950, %r1951, %r1952};
	st.shared.v4.b32 	[%r3282+32768], {%r1957, %r1958, %r1959, %r1960};
	st.shared.v4.b32 	[%r3282+34816], {%r1965, %r1966, %r1967, %r1968};
	st.shared.v4.b32 	[%r3282+36864], {%r1973, %r1974, %r1975, %r1976};
	st.shared.v4.b32 	[%r3282+38912], {%r1981, %r1982, %r1983, %r1984};
	st.shared.v4.b32 	[%r3282+40960], {%r1989, %r1990, %r1991, %r1992};
	st.shared.v4.b32 	[%r3282+43008], {%r1997, %r1998, %r1999, %r2000};
	st.shared.v4.b32 	[%r3282+45056], {%r2005, %r2006, %r2007, %r2008};
	st.shared.v4.b32 	[%r3282+47104], {%r2013, %r2014, %r2015, %r2016};
	st.shared.v4.b32 	[%r3282+49152], {%r2021, %r2022, %r2023, %r2024};
	st.shared.v4.b32 	[%r3282+51200], {%r2029, %r2030, %r2031, %r2032};
	st.shared.v4.b32 	[%r3282+53248], {%r2037, %r2038, %r2039, %r2040};
	st.shared.v4.b32 	[%r3282+55296], {%r2045, %r2046, %r2047, %r2048};
	st.shared.v4.b32 	[%r3282+57344], {%r2053, %r2054, %r2055, %r2056};
	st.shared.v4.b32 	[%r3282+59392], {%r2061, %r2062, %r2063, %r2064};
	st.shared.v4.b32 	[%r3282+61440], {%r2069, %r2070, %r2071, %r2072};
	st.shared.v4.b32 	[%r3282+63488], {%r2077, %r2078, %r2079, %r2080};
	.loc	1 170 39                        // ffa_triton_v1016-2.py:170:39
	mul.lo.s32 	%r3283, %r76, 264;
	selp.b32 	%r3284, 0, 1056, %p103;
	xor.b32 	%r3285, %r3284, %r3283;
	shl.b32 	%r3286, %r6, 8;
	or.b32 	%r3287, %r3285, %r3286;
	or.b32 	%r3288, %r25, %r24;
	or.b32 	%r3289, %r3288, %r75;
	xor.b32 	%r3290, %r3289, %r3287;
	shl.b32 	%r3291, %r3290, 1;
	add.s32 	%r3292, %r1468, 65536;
	add.s32 	%r2085, %r3292, %r3291;
	cvt.rn.f16x2.f32 	%r2086, %r118, %r117;
	cvt.rn.f16x2.f32 	%r2087, %r120, %r119;
	cvt.rn.f16x2.f32 	%r2088, %r122, %r121;
	cvt.rn.f16x2.f32 	%r2089, %r124, %r123;
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r2085], {%r2086, %r2087, %r2088, %r2089};
	// end inline asm
	xor.b32 	%r3293, %r3290, 64;
	shl.b32 	%r3294, %r3293, 1;
	add.s32 	%r2090, %r3292, %r3294;
	cvt.rn.f16x2.f32 	%r2091, %r126, %r125;
	cvt.rn.f16x2.f32 	%r2092, %r128, %r127;
	cvt.rn.f16x2.f32 	%r2093, %r130, %r129;
	cvt.rn.f16x2.f32 	%r2094, %r132, %r131;
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r2090], {%r2091, %r2092, %r2093, %r2094};
	// end inline asm
	xor.b32 	%r3295, %r3290, 128;
	shl.b32 	%r3296, %r3295, 1;
	add.s32 	%r2095, %r3292, %r3296;
	cvt.rn.f16x2.f32 	%r2096, %r134, %r133;
	cvt.rn.f16x2.f32 	%r2097, %r136, %r135;
	cvt.rn.f16x2.f32 	%r2098, %r138, %r137;
	cvt.rn.f16x2.f32 	%r2099, %r140, %r139;
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r2095], {%r2096, %r2097, %r2098, %r2099};
	// end inline asm
	xor.b32 	%r3297, %r3290, 192;
	shl.b32 	%r3298, %r3297, 1;
	add.s32 	%r2100, %r3292, %r3298;
	cvt.rn.f16x2.f32 	%r2101, %r142, %r141;
	cvt.rn.f16x2.f32 	%r2102, %r144, %r143;
	cvt.rn.f16x2.f32 	%r2103, %r146, %r145;
	cvt.rn.f16x2.f32 	%r2104, %r148, %r147;
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r2100], {%r2101, %r2102, %r2103, %r2104};
	// end inline asm
	bar.sync 	0;
	xor.b32 	%r3299, %r3287, %r3274;
	shl.b32 	%r3300, %r3299, 1;
	add.s32 	%r2109, %r3292, %r3300;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r2353, %r2354, %r2355, %r2356}, [%r2109];
	// end inline asm
	xor.b32 	%r3301, %r3299, 16;
	shl.b32 	%r3302, %r3301, 1;
	add.s32 	%r2114, %r3292, %r3302;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r2409, %r2410, %r2411, %r2412}, [%r2114];
	// end inline asm
	xor.b32 	%r3303, %r3299, 32;
	shl.b32 	%r3304, %r3303, 1;
	add.s32 	%r2119, %r3292, %r3304;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r2465, %r2466, %r2467, %r2468}, [%r2119];
	// end inline asm
	xor.b32 	%r3305, %r3299, 48;
	shl.b32 	%r3306, %r3305, 1;
	add.s32 	%r2124, %r3292, %r3306;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r2521, %r2522, %r2523, %r2524}, [%r2124];
	// end inline asm
	xor.b32 	%r3307, %r3299, 64;
	shl.b32 	%r3308, %r3307, 1;
	add.s32 	%r2129, %r3292, %r3308;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r2577, %r2578, %r2579, %r2580}, [%r2129];
	// end inline asm
	xor.b32 	%r3309, %r3299, 80;
	shl.b32 	%r3310, %r3309, 1;
	add.s32 	%r2134, %r3292, %r3310;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r2633, %r2634, %r2635, %r2636}, [%r2134];
	// end inline asm
	xor.b32 	%r3311, %r3299, 96;
	shl.b32 	%r3312, %r3311, 1;
	add.s32 	%r2139, %r3292, %r3312;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r2689, %r2690, %r2691, %r2692}, [%r2139];
	// end inline asm
	xor.b32 	%r3313, %r3299, 112;
	shl.b32 	%r3314, %r3313, 1;
	add.s32 	%r2144, %r3292, %r3314;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r2745, %r2746, %r2747, %r2748}, [%r2144];
	// end inline asm
	xor.b32 	%r3315, %r3299, 128;
	shl.b32 	%r3316, %r3315, 1;
	add.s32 	%r2149, %r3292, %r3316;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r2801, %r2802, %r2803, %r2804}, [%r2149];
	// end inline asm
	xor.b32 	%r3317, %r3299, 144;
	shl.b32 	%r3318, %r3317, 1;
	add.s32 	%r2154, %r3292, %r3318;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r2857, %r2858, %r2859, %r2860}, [%r2154];
	// end inline asm
	xor.b32 	%r3319, %r3299, 160;
	shl.b32 	%r3320, %r3319, 1;
	add.s32 	%r2159, %r3292, %r3320;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r2913, %r2914, %r2915, %r2916}, [%r2159];
	// end inline asm
	xor.b32 	%r3321, %r3299, 176;
	shl.b32 	%r3322, %r3321, 1;
	add.s32 	%r2164, %r3292, %r3322;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r2969, %r2970, %r2971, %r2972}, [%r2164];
	// end inline asm
	xor.b32 	%r3323, %r3299, 192;
	shl.b32 	%r3324, %r3323, 1;
	add.s32 	%r2169, %r3292, %r3324;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r3025, %r3026, %r3027, %r3028}, [%r2169];
	// end inline asm
	xor.b32 	%r3325, %r3299, 208;
	shl.b32 	%r3326, %r3325, 1;
	add.s32 	%r2174, %r3292, %r3326;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r3081, %r3082, %r3083, %r3084}, [%r2174];
	// end inline asm
	xor.b32 	%r3327, %r3299, 224;
	shl.b32 	%r3328, %r3327, 1;
	add.s32 	%r2179, %r3292, %r3328;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r3137, %r3138, %r3139, %r3140}, [%r2179];
	// end inline asm
	xor.b32 	%r3329, %r3299, 240;
	shl.b32 	%r3330, %r3329, 1;
	add.s32 	%r2184, %r3292, %r3330;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r3193, %r3194, %r3195, %r3196}, [%r2184];
	// end inline asm
	.loc	1 169 33                        // ffa_triton_v1016-2.py:169:33
	mul.lo.s32 	%r3331, %r76, 136;
	selp.b32 	%r3332, 0, 544, %p103;
	xor.b32 	%r3333, %r3332, %r3331;
	shl.b32 	%r3334, %r4, 7;
	and.b32 	%r3335, %r3334, 3072;
	or.b32 	%r3336, %r3333, %r3335;
	xor.b32 	%r3337, %r3288, %r3336;
	shl.b32 	%r3338, %r3337, 1;
	add.s32 	%r2189, %r1468, %r3338;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r2357, %r2358, %r2413, %r2414}, [%r2189];
	// end inline asm
	add.s32 	%r2194, %r2189, 8192;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r2469, %r2470, %r2525, %r2526}, [%r2194];
	// end inline asm
	add.s32 	%r2199, %r2189, 16384;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r2581, %r2582, %r2637, %r2638}, [%r2199];
	// end inline asm
	add.s32 	%r2204, %r2189, 24576;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r2693, %r2694, %r2749, %r2750}, [%r2204];
	// end inline asm
	add.s32 	%r2209, %r2189, 32768;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r2805, %r2806, %r2861, %r2862}, [%r2209];
	// end inline asm
	add.s32 	%r2214, %r2189, 40960;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r2917, %r2918, %r2973, %r2974}, [%r2214];
	// end inline asm
	add.s32 	%r2219, %r2189, 49152;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r3029, %r3030, %r3085, %r3086}, [%r2219];
	// end inline asm
	add.s32 	%r2224, %r2189, 57344;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r3141, %r3142, %r3197, %r3198}, [%r2224];
	// end inline asm
	xor.b32 	%r3339, %r3337, 32;
	shl.b32 	%r3340, %r3339, 1;
	add.s32 	%r2229, %r1468, %r3340;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r2371, %r2372, %r2427, %r2428}, [%r2229];
	// end inline asm
	xor.b32 	%r3341, %r3337, 4128;
	shl.b32 	%r3342, %r3341, 1;
	add.s32 	%r2234, %r1468, %r3342;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r2483, %r2484, %r2539, %r2540}, [%r2234];
	// end inline asm
	xor.b32 	%r3343, %r3337, 8224;
	shl.b32 	%r3344, %r3343, 1;
	add.s32 	%r2239, %r1468, %r3344;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r2595, %r2596, %r2651, %r2652}, [%r2239];
	// end inline asm
	xor.b32 	%r3345, %r3337, 12320;
	shl.b32 	%r3346, %r3345, 1;
	add.s32 	%r2244, %r1468, %r3346;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r2707, %r2708, %r2763, %r2764}, [%r2244];
	// end inline asm
	xor.b32 	%r3347, %r3337, 16416;
	shl.b32 	%r3348, %r3347, 1;
	add.s32 	%r2249, %r1468, %r3348;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r2819, %r2820, %r2875, %r2876}, [%r2249];
	// end inline asm
	xor.b32 	%r3349, %r3337, 20512;
	shl.b32 	%r3350, %r3349, 1;
	add.s32 	%r2254, %r1468, %r3350;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r2931, %r2932, %r2987, %r2988}, [%r2254];
	// end inline asm
	xor.b32 	%r3351, %r3337, 24608;
	shl.b32 	%r3352, %r3351, 1;
	add.s32 	%r2259, %r1468, %r3352;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r3043, %r3044, %r3099, %r3100}, [%r2259];
	// end inline asm
	xor.b32 	%r3353, %r3337, 28704;
	shl.b32 	%r3354, %r3353, 1;
	add.s32 	%r2264, %r1468, %r3354;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r3155, %r3156, %r3211, %r3212}, [%r2264];
	// end inline asm
	xor.b32 	%r3355, %r3337, 64;
	shl.b32 	%r3356, %r3355, 1;
	add.s32 	%r2269, %r1468, %r3356;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r2385, %r2386, %r2441, %r2442}, [%r2269];
	// end inline asm
	xor.b32 	%r3357, %r3337, 4160;
	shl.b32 	%r3358, %r3357, 1;
	add.s32 	%r2274, %r1468, %r3358;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r2497, %r2498, %r2553, %r2554}, [%r2274];
	// end inline asm
	xor.b32 	%r3359, %r3337, 8256;
	shl.b32 	%r3360, %r3359, 1;
	add.s32 	%r2279, %r1468, %r3360;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r2609, %r2610, %r2665, %r2666}, [%r2279];
	// end inline asm
	xor.b32 	%r3361, %r3337, 12352;
	shl.b32 	%r3362, %r3361, 1;
	add.s32 	%r2284, %r1468, %r3362;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r2721, %r2722, %r2777, %r2778}, [%r2284];
	// end inline asm
	xor.b32 	%r3363, %r3337, 16448;
	shl.b32 	%r3364, %r3363, 1;
	add.s32 	%r2289, %r1468, %r3364;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r2833, %r2834, %r2889, %r2890}, [%r2289];
	// end inline asm
	xor.b32 	%r3365, %r3337, 20544;
	shl.b32 	%r3366, %r3365, 1;
	add.s32 	%r2294, %r1468, %r3366;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r2945, %r2946, %r3001, %r3002}, [%r2294];
	// end inline asm
	xor.b32 	%r3367, %r3337, 24640;
	shl.b32 	%r3368, %r3367, 1;
	add.s32 	%r2299, %r1468, %r3368;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r3057, %r3058, %r3113, %r3114}, [%r2299];
	// end inline asm
	xor.b32 	%r3369, %r3337, 28736;
	shl.b32 	%r3370, %r3369, 1;
	add.s32 	%r2304, %r1468, %r3370;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r3169, %r3170, %r3225, %r3226}, [%r2304];
	// end inline asm
	xor.b32 	%r3371, %r3337, 96;
	shl.b32 	%r3372, %r3371, 1;
	add.s32 	%r2309, %r1468, %r3372;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r2399, %r2400, %r2455, %r2456}, [%r2309];
	// end inline asm
	xor.b32 	%r3373, %r3337, 4192;
	shl.b32 	%r3374, %r3373, 1;
	add.s32 	%r2314, %r1468, %r3374;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r2511, %r2512, %r2567, %r2568}, [%r2314];
	// end inline asm
	xor.b32 	%r3375, %r3337, 8288;
	shl.b32 	%r3376, %r3375, 1;
	add.s32 	%r2319, %r1468, %r3376;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r2623, %r2624, %r2679, %r2680}, [%r2319];
	// end inline asm
	xor.b32 	%r3377, %r3337, 12384;
	shl.b32 	%r3378, %r3377, 1;
	add.s32 	%r2324, %r1468, %r3378;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r2735, %r2736, %r2791, %r2792}, [%r2324];
	// end inline asm
	xor.b32 	%r3379, %r3337, 16480;
	shl.b32 	%r3380, %r3379, 1;
	add.s32 	%r2329, %r1468, %r3380;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r2847, %r2848, %r2903, %r2904}, [%r2329];
	// end inline asm
	xor.b32 	%r3381, %r3337, 20576;
	shl.b32 	%r3382, %r3381, 1;
	add.s32 	%r2334, %r1468, %r3382;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r2959, %r2960, %r3015, %r3016}, [%r2334];
	// end inline asm
	xor.b32 	%r3383, %r3337, 24672;
	shl.b32 	%r3384, %r3383, 1;
	add.s32 	%r2339, %r1468, %r3384;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r3071, %r3072, %r3127, %r3128}, [%r2339];
	// end inline asm
	xor.b32 	%r3385, %r3337, 28768;
	shl.b32 	%r3386, %r3385, 1;
	add.s32 	%r2344, %r1468, %r3386;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r3183, %r3184, %r3239, %r3240}, [%r2344];
	// end inline asm
	.loc	1 170 52                        // ffa_triton_v1016-2.py:170:52
	mov.b32 	%r2401, %r2443;
	mov.b32 	%r2402, %r2443;
	mov.b32 	%r2403, %r2443;
	mov.b32 	%r2404, %r2443;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2401, %r2402, %r2403, %r2404 }, { %r2353, %r2354, %r2355, %r2356 }, { %r2357, %r2358 }, { %r2401, %r2402, %r2403, %r2404 };
	// end inline asm
	mov.b32 	%r2415, %r2443;
	mov.b32 	%r2416, %r2443;
	mov.b32 	%r2417, %r2443;
	mov.b32 	%r2418, %r2443;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2415, %r2416, %r2417, %r2418 }, { %r2353, %r2354, %r2355, %r2356 }, { %r2371, %r2372 }, { %r2415, %r2416, %r2417, %r2418 };
	// end inline asm
	mov.b32 	%r2429, %r2443;
	mov.b32 	%r2430, %r2443;
	mov.b32 	%r2431, %r2443;
	mov.b32 	%r2432, %r2443;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2429, %r2430, %r2431, %r2432 }, { %r2353, %r2354, %r2355, %r2356 }, { %r2385, %r2386 }, { %r2429, %r2430, %r2431, %r2432 };
	// end inline asm
	mov.b32 	%r2444, %r2443;
	mov.b32 	%r2445, %r2443;
	mov.b32 	%r2446, %r2443;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2443, %r2444, %r2445, %r2446 }, { %r2353, %r2354, %r2355, %r2356 }, { %r2399, %r2400 }, { %r2443, %r2444, %r2445, %r2446 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2401, %r2402, %r2403, %r2404 }, { %r2409, %r2410, %r2411, %r2412 }, { %r2413, %r2414 }, { %r2401, %r2402, %r2403, %r2404 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2415, %r2416, %r2417, %r2418 }, { %r2409, %r2410, %r2411, %r2412 }, { %r2427, %r2428 }, { %r2415, %r2416, %r2417, %r2418 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2429, %r2430, %r2431, %r2432 }, { %r2409, %r2410, %r2411, %r2412 }, { %r2441, %r2442 }, { %r2429, %r2430, %r2431, %r2432 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2443, %r2444, %r2445, %r2446 }, { %r2409, %r2410, %r2411, %r2412 }, { %r2455, %r2456 }, { %r2443, %r2444, %r2445, %r2446 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2401, %r2402, %r2403, %r2404 }, { %r2465, %r2466, %r2467, %r2468 }, { %r2469, %r2470 }, { %r2401, %r2402, %r2403, %r2404 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2415, %r2416, %r2417, %r2418 }, { %r2465, %r2466, %r2467, %r2468 }, { %r2483, %r2484 }, { %r2415, %r2416, %r2417, %r2418 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2429, %r2430, %r2431, %r2432 }, { %r2465, %r2466, %r2467, %r2468 }, { %r2497, %r2498 }, { %r2429, %r2430, %r2431, %r2432 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2443, %r2444, %r2445, %r2446 }, { %r2465, %r2466, %r2467, %r2468 }, { %r2511, %r2512 }, { %r2443, %r2444, %r2445, %r2446 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2401, %r2402, %r2403, %r2404 }, { %r2521, %r2522, %r2523, %r2524 }, { %r2525, %r2526 }, { %r2401, %r2402, %r2403, %r2404 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2415, %r2416, %r2417, %r2418 }, { %r2521, %r2522, %r2523, %r2524 }, { %r2539, %r2540 }, { %r2415, %r2416, %r2417, %r2418 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2429, %r2430, %r2431, %r2432 }, { %r2521, %r2522, %r2523, %r2524 }, { %r2553, %r2554 }, { %r2429, %r2430, %r2431, %r2432 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2443, %r2444, %r2445, %r2446 }, { %r2521, %r2522, %r2523, %r2524 }, { %r2567, %r2568 }, { %r2443, %r2444, %r2445, %r2446 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2401, %r2402, %r2403, %r2404 }, { %r2577, %r2578, %r2579, %r2580 }, { %r2581, %r2582 }, { %r2401, %r2402, %r2403, %r2404 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2415, %r2416, %r2417, %r2418 }, { %r2577, %r2578, %r2579, %r2580 }, { %r2595, %r2596 }, { %r2415, %r2416, %r2417, %r2418 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2429, %r2430, %r2431, %r2432 }, { %r2577, %r2578, %r2579, %r2580 }, { %r2609, %r2610 }, { %r2429, %r2430, %r2431, %r2432 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2443, %r2444, %r2445, %r2446 }, { %r2577, %r2578, %r2579, %r2580 }, { %r2623, %r2624 }, { %r2443, %r2444, %r2445, %r2446 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2401, %r2402, %r2403, %r2404 }, { %r2633, %r2634, %r2635, %r2636 }, { %r2637, %r2638 }, { %r2401, %r2402, %r2403, %r2404 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2415, %r2416, %r2417, %r2418 }, { %r2633, %r2634, %r2635, %r2636 }, { %r2651, %r2652 }, { %r2415, %r2416, %r2417, %r2418 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2429, %r2430, %r2431, %r2432 }, { %r2633, %r2634, %r2635, %r2636 }, { %r2665, %r2666 }, { %r2429, %r2430, %r2431, %r2432 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2443, %r2444, %r2445, %r2446 }, { %r2633, %r2634, %r2635, %r2636 }, { %r2679, %r2680 }, { %r2443, %r2444, %r2445, %r2446 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2401, %r2402, %r2403, %r2404 }, { %r2689, %r2690, %r2691, %r2692 }, { %r2693, %r2694 }, { %r2401, %r2402, %r2403, %r2404 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2415, %r2416, %r2417, %r2418 }, { %r2689, %r2690, %r2691, %r2692 }, { %r2707, %r2708 }, { %r2415, %r2416, %r2417, %r2418 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2429, %r2430, %r2431, %r2432 }, { %r2689, %r2690, %r2691, %r2692 }, { %r2721, %r2722 }, { %r2429, %r2430, %r2431, %r2432 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2443, %r2444, %r2445, %r2446 }, { %r2689, %r2690, %r2691, %r2692 }, { %r2735, %r2736 }, { %r2443, %r2444, %r2445, %r2446 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2401, %r2402, %r2403, %r2404 }, { %r2745, %r2746, %r2747, %r2748 }, { %r2749, %r2750 }, { %r2401, %r2402, %r2403, %r2404 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2415, %r2416, %r2417, %r2418 }, { %r2745, %r2746, %r2747, %r2748 }, { %r2763, %r2764 }, { %r2415, %r2416, %r2417, %r2418 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2429, %r2430, %r2431, %r2432 }, { %r2745, %r2746, %r2747, %r2748 }, { %r2777, %r2778 }, { %r2429, %r2430, %r2431, %r2432 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2443, %r2444, %r2445, %r2446 }, { %r2745, %r2746, %r2747, %r2748 }, { %r2791, %r2792 }, { %r2443, %r2444, %r2445, %r2446 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2401, %r2402, %r2403, %r2404 }, { %r2801, %r2802, %r2803, %r2804 }, { %r2805, %r2806 }, { %r2401, %r2402, %r2403, %r2404 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2415, %r2416, %r2417, %r2418 }, { %r2801, %r2802, %r2803, %r2804 }, { %r2819, %r2820 }, { %r2415, %r2416, %r2417, %r2418 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2429, %r2430, %r2431, %r2432 }, { %r2801, %r2802, %r2803, %r2804 }, { %r2833, %r2834 }, { %r2429, %r2430, %r2431, %r2432 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2443, %r2444, %r2445, %r2446 }, { %r2801, %r2802, %r2803, %r2804 }, { %r2847, %r2848 }, { %r2443, %r2444, %r2445, %r2446 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2401, %r2402, %r2403, %r2404 }, { %r2857, %r2858, %r2859, %r2860 }, { %r2861, %r2862 }, { %r2401, %r2402, %r2403, %r2404 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2415, %r2416, %r2417, %r2418 }, { %r2857, %r2858, %r2859, %r2860 }, { %r2875, %r2876 }, { %r2415, %r2416, %r2417, %r2418 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2429, %r2430, %r2431, %r2432 }, { %r2857, %r2858, %r2859, %r2860 }, { %r2889, %r2890 }, { %r2429, %r2430, %r2431, %r2432 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2443, %r2444, %r2445, %r2446 }, { %r2857, %r2858, %r2859, %r2860 }, { %r2903, %r2904 }, { %r2443, %r2444, %r2445, %r2446 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2401, %r2402, %r2403, %r2404 }, { %r2913, %r2914, %r2915, %r2916 }, { %r2917, %r2918 }, { %r2401, %r2402, %r2403, %r2404 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2415, %r2416, %r2417, %r2418 }, { %r2913, %r2914, %r2915, %r2916 }, { %r2931, %r2932 }, { %r2415, %r2416, %r2417, %r2418 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2429, %r2430, %r2431, %r2432 }, { %r2913, %r2914, %r2915, %r2916 }, { %r2945, %r2946 }, { %r2429, %r2430, %r2431, %r2432 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2443, %r2444, %r2445, %r2446 }, { %r2913, %r2914, %r2915, %r2916 }, { %r2959, %r2960 }, { %r2443, %r2444, %r2445, %r2446 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2401, %r2402, %r2403, %r2404 }, { %r2969, %r2970, %r2971, %r2972 }, { %r2973, %r2974 }, { %r2401, %r2402, %r2403, %r2404 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2415, %r2416, %r2417, %r2418 }, { %r2969, %r2970, %r2971, %r2972 }, { %r2987, %r2988 }, { %r2415, %r2416, %r2417, %r2418 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2429, %r2430, %r2431, %r2432 }, { %r2969, %r2970, %r2971, %r2972 }, { %r3001, %r3002 }, { %r2429, %r2430, %r2431, %r2432 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2443, %r2444, %r2445, %r2446 }, { %r2969, %r2970, %r2971, %r2972 }, { %r3015, %r3016 }, { %r2443, %r2444, %r2445, %r2446 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2401, %r2402, %r2403, %r2404 }, { %r3025, %r3026, %r3027, %r3028 }, { %r3029, %r3030 }, { %r2401, %r2402, %r2403, %r2404 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2415, %r2416, %r2417, %r2418 }, { %r3025, %r3026, %r3027, %r3028 }, { %r3043, %r3044 }, { %r2415, %r2416, %r2417, %r2418 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2429, %r2430, %r2431, %r2432 }, { %r3025, %r3026, %r3027, %r3028 }, { %r3057, %r3058 }, { %r2429, %r2430, %r2431, %r2432 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2443, %r2444, %r2445, %r2446 }, { %r3025, %r3026, %r3027, %r3028 }, { %r3071, %r3072 }, { %r2443, %r2444, %r2445, %r2446 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2401, %r2402, %r2403, %r2404 }, { %r3081, %r3082, %r3083, %r3084 }, { %r3085, %r3086 }, { %r2401, %r2402, %r2403, %r2404 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2415, %r2416, %r2417, %r2418 }, { %r3081, %r3082, %r3083, %r3084 }, { %r3099, %r3100 }, { %r2415, %r2416, %r2417, %r2418 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2429, %r2430, %r2431, %r2432 }, { %r3081, %r3082, %r3083, %r3084 }, { %r3113, %r3114 }, { %r2429, %r2430, %r2431, %r2432 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2443, %r2444, %r2445, %r2446 }, { %r3081, %r3082, %r3083, %r3084 }, { %r3127, %r3128 }, { %r2443, %r2444, %r2445, %r2446 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2401, %r2402, %r2403, %r2404 }, { %r3137, %r3138, %r3139, %r3140 }, { %r3141, %r3142 }, { %r2401, %r2402, %r2403, %r2404 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2415, %r2416, %r2417, %r2418 }, { %r3137, %r3138, %r3139, %r3140 }, { %r3155, %r3156 }, { %r2415, %r2416, %r2417, %r2418 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2429, %r2430, %r2431, %r2432 }, { %r3137, %r3138, %r3139, %r3140 }, { %r3169, %r3170 }, { %r2429, %r2430, %r2431, %r2432 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2443, %r2444, %r2445, %r2446 }, { %r3137, %r3138, %r3139, %r3140 }, { %r3183, %r3184 }, { %r2443, %r2444, %r2445, %r2446 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2401, %r2402, %r2403, %r2404 }, { %r3193, %r3194, %r3195, %r3196 }, { %r3197, %r3198 }, { %r2401, %r2402, %r2403, %r2404 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2415, %r2416, %r2417, %r2418 }, { %r3193, %r3194, %r3195, %r3196 }, { %r3211, %r3212 }, { %r2415, %r2416, %r2417, %r2418 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2429, %r2430, %r2431, %r2432 }, { %r3193, %r3194, %r3195, %r3196 }, { %r3225, %r3226 }, { %r2429, %r2430, %r2431, %r2432 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r2443, %r2444, %r2445, %r2446 }, { %r3193, %r3194, %r3195, %r3196 }, { %r3239, %r3240 }, { %r2443, %r2444, %r2445, %r2446 };
	// end inline asm
$L__BB0_3:
	.loc	1 112 22                        // ffa_triton_v1016-2.py:112:22
	setp.ne.s32 	%p106, %r11, 3;
	.loc	1 173 48                        // ffa_triton_v1016-2.py:173:48
	mul.lo.s32 	%r3405, %r184, %r17;
	.loc	1 173 29                        // ffa_triton_v1016-2.py:173:29
	mul.wide.s32 	%rd209, %r3405, 4;
	add.s64 	%rd210, %rd3, %rd209;
	.loc	1 173 55                        // ffa_triton_v1016-2.py:173:55
	cvt.u64.u32 	%rd211, %r2;
	mul.wide.u32 	%rd212, %r2, 4;
	add.s64 	%rd202, %rd210, %rd212;
	.loc	1 174 29                        // ffa_triton_v1016-2.py:174:29
	add.s64 	%rd213, %rd4, %rd209;
	.loc	1 174 55                        // ffa_triton_v1016-2.py:174:55
	add.s64 	%rd203, %rd213, %rd212;
	.loc	1 175 65                        // ffa_triton_v1016-2.py:175:65
	shl.b32 	%r3406, %r184, 7;
	.loc	1 175 58                        // ffa_triton_v1016-2.py:175:58
	mul.lo.s32 	%r3407, %r3406, %r13;
	mul.lo.s32 	%r3408, %r3406, %r14;
	mul.lo.s32 	%r3409, %r3406, %r15;
	mul.lo.s32 	%r3410, %r3406, %r16;
	.loc	1 175 29                        // ffa_triton_v1016-2.py:175:29
	mul.wide.s32 	%rd214, %r3407, 4;
	add.s64 	%rd215, %rd5, %rd214;
	mul.wide.s32 	%rd216, %r3408, 4;
	add.s64 	%rd217, %rd5, %rd216;
	mul.wide.s32 	%rd218, %r3409, 4;
	add.s64 	%rd219, %rd5, %rd218;
	mul.wide.s32 	%rd220, %r3410, 4;
	add.s64 	%rd221, %rd5, %rd220;
	.loc	1 175 78                        // ffa_triton_v1016-2.py:175:78
	shl.b32 	%r3411, %r2, 7;
	.loc	1 175 70                        // ffa_triton_v1016-2.py:175:70
	mul.wide.u32 	%rd222, %r3411, 4;
	add.s64 	%rd223, %rd215, %rd222;
	add.s64 	%rd224, %rd217, %rd222;
	add.s64 	%rd225, %rd219, %rd222;
	add.s64 	%rd226, %rd221, %rd222;
	.loc	1 175 82                        // ffa_triton_v1016-2.py:175:82
	mul.wide.u32 	%rd227, %r20, 4;
	add.s64 	%rd204, %rd223, %rd227;
	add.s64 	%rd205, %rd224, %rd227;
	add.s64 	%rd206, %rd225, %rd227;
	add.s64 	%rd207, %rd226, %rd227;
	.loc	1 177 29                        // ffa_triton_v1016-2.py:177:29
	bar.sync 	0;
	shl.b32 	%r3412, %r8, 2;
	add.s32 	%r3414, %r1468, %r3412;
	st.shared.b32 	[%r3414], %r115;
	st.shared.b32 	[%r3414+32], %r116;
	bar.sync 	0;
	shl.b32 	%r3415, %r12, 2;
	add.s32 	%r3416, %r1468, %r3415;
	ld.shared.b32 	%r3387, [%r3416];
	and.b32 	%r3417, %r4, 112;
	setp.eq.s32 	%p112, %r3417, 0;
	and.pred 	%p104, %p112, %p25;
	// begin inline asm
	@%p104 st.global.b32 [ %rd202 + 0 ], { %r3387 };
	// end inline asm
	.loc	1 178 29                        // ffa_triton_v1016-2.py:178:29
	bar.sync 	0;
	st.shared.b32 	[%r3414], %r149;
	st.shared.b32 	[%r3414+32], %r150;
	bar.sync 	0;
	ld.shared.b32 	%r3388, [%r3416];
	// begin inline asm
	@%p104 st.global.b32 [ %rd203 + 0 ], { %r3388 };
	// end inline asm
	.loc	1 179 29                        // ffa_triton_v1016-2.py:179:29
	bar.sync 	0;
	shl.b32 	%r3418, %r4, 5;
	and.b32 	%r3419, %r3418, 896;
	and.b32 	%r3420, %r18, 448;
	or.b32 	%r3421, %r19, %r3420;
	shr.u32 	%r3422, %r3419, 3;
	add.s32 	%r3423, %r1468, %r3422;
	shl.b32 	%r3424, %r3419, 2;
	add.s32 	%r3425, %r3423, %r3424;
	shl.b32 	%r3426, %r23, 2;
	add.s32 	%r3427, %r3425, %r3426;
	add.s32 	%r3428, %r3427, %r9;
	add.s32 	%r3429, %r3428, %r10;
	st.shared.v2.b32 	[%r3429], {%r2401, %r2402};
	st.shared.v2.b32 	[%r3429+128], {%r2415, %r2416};
	st.shared.v2.b32 	[%r3429+256], {%r2429, %r2430};
	st.shared.v2.b32 	[%r3429+384], {%r2443, %r2444};
	bar.sync 	0;
	and.b32 	%r3430, %r22, 12;
	shl.b32 	%r3431, %r3430, 2;
	add.s32 	%r3432, %r1468, %r3431;
	shl.b32 	%r3433, %r3421, 2;
	add.s32 	%r3434, %r3432, %r3433;
	ld.shared.v4.b32 	{%r3389, %r3390, %r3391, %r3392}, [%r3434];
	or.b32 	%r3435, %r3420, 512;
	shr.u32 	%r3436, %r3435, 3;
	and.b32 	%r3437, %r3436, 112;
	add.s32 	%r3438, %r1468, %r3437;
	add.s32 	%r3439, %r3438, %r3433;
	ld.shared.v4.b32 	{%r3393, %r3394, %r3395, %r3396}, [%r3439+2048];
	bar.sync 	0;
	st.shared.v2.b32 	[%r3429], {%r2403, %r2404};
	st.shared.v2.b32 	[%r3429+128], {%r2417, %r2418};
	st.shared.v2.b32 	[%r3429+256], {%r2431, %r2432};
	st.shared.v2.b32 	[%r3429+384], {%r2445, %r2446};
	bar.sync 	0;
	ld.shared.v4.b32 	{%r3397, %r3398, %r3399, %r3400}, [%r3434];
	ld.shared.v4.b32 	{%r3401, %r3402, %r3403, %r3404}, [%r3439+2048];
	// begin inline asm
	@%p106 st.global.v4.b32 [ %rd204 + 0 ], { %r3389, %r3390, %r3391, %r3392 };
	// end inline asm
	mov.pred 	%p107, 0;
	// begin inline asm
	@%p107 st.global.v4.b32 [ %rd205 + 0 ], { %r3393, %r3394, %r3395, %r3396 };
	// end inline asm
	// begin inline asm
	@%p107 st.global.v4.b32 [ %rd206 + 0 ], { %r3397, %r3398, %r3399, %r3400 };
	// end inline asm
	// begin inline asm
	@%p107 st.global.v4.b32 [ %rd207 + 0 ], { %r3401, %r3402, %r3403, %r3404 };
	// end inline asm
	.loc	1 182 42                        // ffa_triton_v1016-2.py:182:42
	mul.lo.s32 	%r3440, %r184, %r1;
	.loc	1 182 32                        // ffa_triton_v1016-2.py:182:32
	cvt.s64.s32 	%rd228, %r3440;
	add.s64 	%rd229, %rd6, %rd228;
	.loc	1 182 49                        // ffa_triton_v1016-2.py:182:49
	add.s64 	%rd208, %rd229, %rd211;
	mov.b16 	%rs129, 1;
	.loc	1 182 56                        // ffa_triton_v1016-2.py:182:56
	// begin inline asm
	@%p51 st.global.b8 [ %rd208 + 0 ], { %rs129 };
	// end inline asm
$L__BB0_4:
	.loc	1 127 4                         // ffa_triton_v1016-2.py:127:4
	ret;
$L__tmp11:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py"
	.file	2 "/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/miniconda/envs/ffa/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 357                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x15e DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 102                                 // DW_AT_name
.b8 102
.b8 97
.b8 95
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 118
.b8 49
.b8 48
.b8 49
.b8 54
.b8 45
.b8 50
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 105
.b8 110
.b8 115
.b8 112
.b8 105
.b8 114
.b8 101
.b8 47
.b8 104
.b8 100
.b8 100
.b8 47
.b8 112
.b8 114
.b8 111
.b8 106
.b8 101
.b8 99
.b8 116
.b8 47
.b8 101
.b8 109
.b8 98
.b8 111
.b8 100
.b8 105
.b8 101
.b8 100
.b8 45
.b8 109
.b8 117
.b8 108
.b8 116
.b8 105
.b8 109
.b8 111
.b8 100
.b8 97
.b8 108
.b8 105
.b8 116
.b8 121
.b8 47
.b8 108
.b8 105
.b8 117
.b8 122
.b8 104
.b8 105
.b8 103
.b8 101
.b8 110
.b8 103
.b8 45
.b8 50
.b8 53
.b8 51
.b8 49
.b8 48
.b8 56
.b8 49
.b8 50
.b8 48
.b8 49
.b8 48
.b8 53
.b8 47
.b8 112
.b8 114
.b8 111
.b8 106
.b8 101
.b8 99
.b8 116
.b8 115
.b8 47
.b8 102
.b8 102
.b8 97
.b8 47
.b8 104
.b8 117
.b8 102
.b8 102
.b8 107
.b8 118
.b8 45
.b8 111
.b8 112
.b8 101
.b8 110
.b8 99
.b8 111
.b8 109
.b8 112
.b8 97
.b8 115
.b8 115
.b8 47
.b8 111
.b8 112
.b8 101
.b8 110
.b8 99
.b8 111
.b8 109
.b8 112
.b8 97
.b8 115
.b8 115
.b8 47
.b8 109
.b8 111
.b8 100
.b8 101
.b8 108
.b8 115
.b8 47
.b8 109
.b8 121
.b8 77
.b8 111
.b8 100
.b8 101
.b8 108
.b8 47
.b8 102
.b8 102
.b8 97
.b8 47
.b8 102
.b8 102
.b8 97
.b8 95
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // Abbrev [2] 0xbd:0x1d DW_TAG_subprogram
.b8 97                                  // DW_AT_name
.b8 116
.b8 116
.b8 110
.b8 95
.b8 102
.b8 111
.b8 114
.b8 119
.b8 97
.b8 114
.b8 100
.b8 95
.b8 115
.b8 116
.b8 97
.b8 103
.b8 101
.b8 49
.b8 95
.b8 112
.b8 114
.b8 117
.b8 110
.b8 101
.b8 100
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xda:0x8e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 189                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xef:0x18 DW_TAG_inlined_subroutine
.b32 189                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 145                                 // DW_AT_call_line
.b8 28                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x107:0x18 DW_TAG_inlined_subroutine
.b32 189                                // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 150                                 // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x11f:0x18 DW_TAG_inlined_subroutine
.b32 189                                // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 151                                 // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x137:0x18 DW_TAG_inlined_subroutine
.b32 189                                // DW_AT_abstract_origin
.b64 $L__tmp7                           // DW_AT_low_pc
.b64 $L__tmp8                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 162                                 // DW_AT_call_line
.b8 28                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x14f:0x18 DW_TAG_inlined_subroutine
.b32 189                                // DW_AT_abstract_origin
.b64 $L__tmp9                           // DW_AT_low_pc
.b64 $L__tmp10                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 165                                 // DW_AT_call_line
.b8 28                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
