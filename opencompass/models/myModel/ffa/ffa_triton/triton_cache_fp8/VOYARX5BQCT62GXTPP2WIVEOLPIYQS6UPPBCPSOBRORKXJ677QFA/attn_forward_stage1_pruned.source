#loc = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":94:0)
#loc79 = loc(unknown)
#loc107 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/miniconda/envs/ffa/lib/python3.12/site-packages/triton/language/standard.py":174:0)
#loc111 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/miniconda/envs/ffa/lib/python3.12/site-packages/triton/language/standard.py":166:0)
#loc115 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/miniconda/envs/ffa/lib/python3.12/site-packages/triton/language/standard.py":284:0)
#loc119 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/miniconda/envs/ffa/lib/python3.12/site-packages/triton/language/standard.py":259:0)
module {
  tt.func public @attn_forward_stage1_pruned(%arg0: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":94:0), %arg1: !tt.ptr<f8E5M2> {tt.divisibility = 16 : i32} loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":94:0), %arg2: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":94:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":94:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":94:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":94:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":94:0), %arg7: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":94:0), %arg8: f32 loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":94:0), %arg9: i32 loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":94:0), %arg10: i32 loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":94:0), %arg11: i32 loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":94:0)) attributes {noinline = false} {
    %0 = tt.get_program_id x : i32 loc(#loc1)
    %1 = tt.get_program_id y : i32 loc(#loc2)
    %c3_i32 = arith.constant 3 : i32 loc(#loc3)
    %c3_i32_0 = arith.constant 3 : i32 loc(#loc3)
    %2 = arith.extsi %0 : i32 to i64 loc(#loc3)
    %3 = arith.extsi %c3_i32_0 : i32 to i64 loc(#loc3)
    %4 = arith.muli %2, %3 : i64 loc(#loc3)
    %c2147483647_i64 = arith.constant 2147483647 : i64 loc(#loc3)
    %c-2147483648_i64 = arith.constant -2147483648 : i64 loc(#loc3)
    %5 = arith.cmpi sle, %4, %c2147483647_i64 : i64 loc(#loc3)
    %6 = arith.cmpi sge, %4, %c-2147483648_i64 : i64 loc(#loc3)
    %7 = arith.andi %5, %6 : i1 loc(#loc3)
    %8 = arith.muli %0, %c3_i32_0 : i32 loc(#loc3)
    %c256_i32 = arith.constant 256 : i32 loc(#loc4)
    %c256_i32_1 = arith.constant 256 : i32 loc(#loc4)
    %9 = arith.extsi %1 : i32 to i64 loc(#loc4)
    %10 = arith.extsi %c256_i32_1 : i32 to i64 loc(#loc4)
    %11 = arith.muli %9, %10 : i64 loc(#loc4)
    %c2147483647_i64_2 = arith.constant 2147483647 : i64 loc(#loc4)
    %c-2147483648_i64_3 = arith.constant -2147483648 : i64 loc(#loc4)
    %12 = arith.cmpi sle, %11, %c2147483647_i64_2 : i64 loc(#loc4)
    %13 = arith.cmpi sge, %11, %c-2147483648_i64_3 : i64 loc(#loc4)
    %14 = arith.andi %12, %13 : i1 loc(#loc4)
    %15 = arith.muli %1, %c256_i32_1 : i32 loc(#loc4)
    %16 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc5)
    %c3_i32_4 = arith.constant 3 : i32 loc(#loc6)
    %cst = arith.constant dense<3> : tensor<16xi32> loc(#loc6)
    %17 = arith.cmpi slt, %16, %cst : tensor<16xi32> loc(#loc6)
    %18 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc7)
    %19 = tt.splat %8 : i32 -> tensor<16xi32> loc(#loc8)
    %20 = arith.extsi %19 : tensor<16xi32> to tensor<16xi64> loc(#loc8)
    %21 = arith.extsi %16 : tensor<16xi32> to tensor<16xi64> loc(#loc8)
    %22 = arith.addi %20, %21 : tensor<16xi64> loc(#loc8)
    %c2147483647_i64_5 = arith.constant 2147483647 : i64 loc(#loc8)
    %c-2147483648_i64_6 = arith.constant -2147483648 : i64 loc(#loc8)
    %cst_7 = arith.constant dense<2147483647> : tensor<16xi64> loc(#loc8)
    %23 = arith.cmpi sle, %22, %cst_7 : tensor<16xi64> loc(#loc8)
    %cst_8 = arith.constant dense<-2147483648> : tensor<16xi64> loc(#loc8)
    %24 = arith.cmpi sge, %22, %cst_8 : tensor<16xi64> loc(#loc8)
    %25 = arith.andi %23, %24 : tensor<16xi1> loc(#loc8)
    %26 = arith.addi %19, %16 : tensor<16xi32> loc(#loc8)
    %27 = tt.expand_dims %26 {axis = 1 : i32} : tensor<16xi32> -> tensor<16x1xi32> loc(#loc9)
    %c128_i32 = arith.constant 128 : i32 loc(#loc10)
    %c128_i32_9 = arith.constant 128 : i32 loc(#loc10)
    %cst_10 = arith.constant dense<128> : tensor<16x1xi32> loc(#loc10)
    %28 = arith.extsi %27 : tensor<16x1xi32> to tensor<16x1xi64> loc(#loc10)
    %29 = arith.extsi %cst_10 : tensor<16x1xi32> to tensor<16x1xi64> loc(#loc10)
    %30 = arith.muli %28, %29 : tensor<16x1xi64> loc(#loc10)
    %c2147483647_i64_11 = arith.constant 2147483647 : i64 loc(#loc10)
    %c-2147483648_i64_12 = arith.constant -2147483648 : i64 loc(#loc10)
    %cst_13 = arith.constant dense<2147483647> : tensor<16x1xi64> loc(#loc10)
    %31 = arith.cmpi sle, %30, %cst_13 : tensor<16x1xi64> loc(#loc10)
    %cst_14 = arith.constant dense<-2147483648> : tensor<16x1xi64> loc(#loc10)
    %32 = arith.cmpi sge, %30, %cst_14 : tensor<16x1xi64> loc(#loc10)
    %33 = arith.andi %31, %32 : tensor<16x1xi1> loc(#loc10)
    %34 = arith.muli %27, %cst_10 : tensor<16x1xi32> loc(#loc10)
    %35 = tt.splat %arg0 : !tt.ptr<f16> -> tensor<16x1x!tt.ptr<f16>> loc(#loc11)
    %36 = tt.addptr %35, %34 : tensor<16x1x!tt.ptr<f16>>, tensor<16x1xi32> loc(#loc11)
    %37 = tt.expand_dims %18 {axis = 0 : i32} : tensor<128xi32> -> tensor<1x128xi32> loc(#loc12)
    %38 = tt.broadcast %36 : tensor<16x1x!tt.ptr<f16>> -> tensor<16x128x!tt.ptr<f16>> loc(#loc13)
    %39 = tt.broadcast %37 : tensor<1x128xi32> -> tensor<16x128xi32> loc(#loc13)
    %40 = tt.addptr %38, %39 : tensor<16x128x!tt.ptr<f16>>, tensor<16x128xi32> loc(#loc13)
    %41 = tt.expand_dims %17 {axis = 1 : i32} : tensor<16xi1> -> tensor<16x1xi1> loc(#loc14)
    %cst_15 = arith.constant 0.000000e+00 : f32 loc(#loc15)
    %42 = tt.broadcast %41 : tensor<16x1xi1> -> tensor<16x128xi1> loc(#loc15)
    %cst_16 = arith.constant dense<0.000000e+00> : tensor<16x128xf32> loc(#loc15)
    %43 = arith.truncf %cst_16 : tensor<16x128xf32> to tensor<16x128xf16> loc(#loc15)
    %44 = tt.load %40, %42, %43 : tensor<16x128x!tt.ptr<f16>> loc(#loc15)
    %cst_17 = arith.constant 1.44269502 : f32 loc(#loc16)
    %cst_18 = arith.constant 0xFF800000 : f32 loc(#loc17)
    %true = arith.constant true loc(#loc18)
    %cst_19 = arith.constant dense<true> : tensor<128xi1> loc(#loc18)
    %c0_i32 = arith.constant 0 : i32 loc(#loc19)
    %c0_i32_20 = arith.constant 0 : i32 loc(#loc19)
    %45 = arith.extsi %15 : i32 to i64 loc(#loc19)
    %46 = arith.extsi %c0_i32_20 : i32 to i64 loc(#loc19)
    %47 = arith.addi %45, %46 : i64 loc(#loc19)
    %c2147483647_i64_21 = arith.constant 2147483647 : i64 loc(#loc19)
    %c-2147483648_i64_22 = arith.constant -2147483648 : i64 loc(#loc19)
    %48 = arith.cmpi sle, %47, %c2147483647_i64_21 : i64 loc(#loc19)
    %49 = arith.cmpi sge, %47, %c-2147483648_i64_22 : i64 loc(#loc19)
    %50 = arith.andi %48, %49 : i1 loc(#loc19)
    %51 = arith.addi %15, %c0_i32_20 : i32 loc(#loc19)
    %52 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc20)
    %53 = tt.splat %51 : i32 -> tensor<256xi32> loc(#loc21)
    %54 = arith.extsi %53 : tensor<256xi32> to tensor<256xi64> loc(#loc21)
    %55 = arith.extsi %52 : tensor<256xi32> to tensor<256xi64> loc(#loc21)
    %56 = arith.addi %54, %55 : tensor<256xi64> loc(#loc21)
    %c2147483647_i64_23 = arith.constant 2147483647 : i64 loc(#loc21)
    %c-2147483648_i64_24 = arith.constant -2147483648 : i64 loc(#loc21)
    %cst_25 = arith.constant dense<2147483647> : tensor<256xi64> loc(#loc21)
    %57 = arith.cmpi sle, %56, %cst_25 : tensor<256xi64> loc(#loc21)
    %cst_26 = arith.constant dense<-2147483648> : tensor<256xi64> loc(#loc21)
    %58 = arith.cmpi sge, %56, %cst_26 : tensor<256xi64> loc(#loc21)
    %59 = arith.andi %57, %58 : tensor<256xi1> loc(#loc21)
    %60 = arith.addi %53, %52 : tensor<256xi32> loc(#loc21)
    %61 = tt.splat %arg9 : i32 -> tensor<256xi32> loc(#loc22)
    %62 = arith.cmpi slt, %60, %61 : tensor<256xi32> loc(#loc22)
    %63 = arith.extsi %0 : i32 to i64 loc(#loc23)
    %64 = arith.extsi %arg9 : i32 to i64 loc(#loc23)
    %65 = arith.muli %63, %64 : i64 loc(#loc23)
    %c2147483647_i64_27 = arith.constant 2147483647 : i64 loc(#loc23)
    %c-2147483648_i64_28 = arith.constant -2147483648 : i64 loc(#loc23)
    %66 = arith.cmpi sle, %65, %c2147483647_i64_27 : i64 loc(#loc23)
    %67 = arith.cmpi sge, %65, %c-2147483648_i64_28 : i64 loc(#loc23)
    %68 = arith.andi %66, %67 : i1 loc(#loc23)
    %69 = arith.muli %0, %arg9 : i32 loc(#loc23)
    %c128_i32_29 = arith.constant 128 : i32 loc(#loc24)
    %c128_i32_30 = arith.constant 128 : i32 loc(#loc24)
    %70 = arith.extsi %69 : i32 to i64 loc(#loc24)
    %71 = arith.extsi %c128_i32_30 : i32 to i64 loc(#loc24)
    %72 = arith.muli %70, %71 : i64 loc(#loc24)
    %c2147483647_i64_31 = arith.constant 2147483647 : i64 loc(#loc24)
    %c-2147483648_i64_32 = arith.constant -2147483648 : i64 loc(#loc24)
    %73 = arith.cmpi sle, %72, %c2147483647_i64_31 : i64 loc(#loc24)
    %74 = arith.cmpi sge, %72, %c-2147483648_i64_32 : i64 loc(#loc24)
    %75 = arith.andi %73, %74 : i1 loc(#loc24)
    %76 = arith.muli %69, %c128_i32_30 : i32 loc(#loc24)
    %77 = tt.addptr %arg1, %76 : !tt.ptr<f8E5M2>, i32 loc(#loc25)
    %78 = tt.expand_dims %60 {axis = 0 : i32} : tensor<256xi32> -> tensor<1x256xi32> loc(#loc26)
    %c128_i32_33 = arith.constant 128 : i32 loc(#loc27)
    %c128_i32_34 = arith.constant 128 : i32 loc(#loc27)
    %cst_35 = arith.constant dense<128> : tensor<1x256xi32> loc(#loc27)
    %79 = arith.extsi %78 : tensor<1x256xi32> to tensor<1x256xi64> loc(#loc27)
    %80 = arith.extsi %cst_35 : tensor<1x256xi32> to tensor<1x256xi64> loc(#loc27)
    %81 = arith.muli %79, %80 : tensor<1x256xi64> loc(#loc27)
    %c2147483647_i64_36 = arith.constant 2147483647 : i64 loc(#loc27)
    %c-2147483648_i64_37 = arith.constant -2147483648 : i64 loc(#loc27)
    %cst_38 = arith.constant dense<2147483647> : tensor<1x256xi64> loc(#loc27)
    %82 = arith.cmpi sle, %81, %cst_38 : tensor<1x256xi64> loc(#loc27)
    %cst_39 = arith.constant dense<-2147483648> : tensor<1x256xi64> loc(#loc27)
    %83 = arith.cmpi sge, %81, %cst_39 : tensor<1x256xi64> loc(#loc27)
    %84 = arith.andi %82, %83 : tensor<1x256xi1> loc(#loc27)
    %85 = arith.muli %78, %cst_35 : tensor<1x256xi32> loc(#loc27)
    %86 = tt.splat %77 : !tt.ptr<f8E5M2> -> tensor<1x256x!tt.ptr<f8E5M2>> loc(#loc28)
    %87 = tt.addptr %86, %85 : tensor<1x256x!tt.ptr<f8E5M2>>, tensor<1x256xi32> loc(#loc28)
    %88 = tt.expand_dims %18 {axis = 1 : i32} : tensor<128xi32> -> tensor<128x1xi32> loc(#loc29)
    %89 = tt.broadcast %87 : tensor<1x256x!tt.ptr<f8E5M2>> -> tensor<128x256x!tt.ptr<f8E5M2>> loc(#loc30)
    %90 = tt.broadcast %88 : tensor<128x1xi32> -> tensor<128x256xi32> loc(#loc30)
    %91 = tt.addptr %89, %90 : tensor<128x256x!tt.ptr<f8E5M2>>, tensor<128x256xi32> loc(#loc30)
    %92 = tt.expand_dims %cst_19 {axis = 1 : i32} : tensor<128xi1> -> tensor<128x1xi1> loc(#loc31)
    %93 = tt.expand_dims %62 {axis = 0 : i32} : tensor<256xi1> -> tensor<1x256xi1> loc(#loc32)
    %94 = tt.broadcast %92 : tensor<128x1xi1> -> tensor<128x256xi1> loc(#loc33)
    %95 = tt.broadcast %93 : tensor<1x256xi1> -> tensor<128x256xi1> loc(#loc33)
    %96 = arith.andi %94, %95 : tensor<128x256xi1> loc(#loc33)
    %cst_40 = arith.constant 0.000000e+00 : f32 loc(#loc34)
    %cst_41 = arith.constant dense<0.000000e+00> : tensor<128x256xf32> loc(#loc34)
    %97 = tt.fp_to_fp %cst_41, rounding = rtne : tensor<128x256xf32> -> tensor<128x256xf8E5M2> loc(#loc34)
    %98 = tt.load %91, %96, %97 : tensor<128x256x!tt.ptr<f8E5M2>> loc(#loc34)
    %99 = tt.fp_to_fp %98 : tensor<128x256xf8E5M2> -> tensor<128x256xf16> loc(#loc35)
    %cst_42 = arith.constant 0.000000e+00 : f32 loc(#loc36)
    %cst_43 = arith.constant dense<0.000000e+00> : tensor<16x256xf32> loc(#loc36)
    %100 = tt.dot %44, %99, %cst_43, inputPrecision = tf32 : tensor<16x128xf16> * tensor<128x256xf16> -> tensor<16x256xf32> loc(#loc36)
    %101 = tt.splat %arg8 : f32 -> tensor<16x256xf32> loc(#loc37)
    %102 = arith.mulf %100, %101 : tensor<16x256xf32> loc(#loc37)
    %cst_44 = arith.constant dense<1.44269502> : tensor<16x256xf32> loc(#loc38)
    %103 = arith.mulf %102, %cst_44 : tensor<16x256xf32> loc(#loc38)
    %104 = tt.expand_dims %62 {axis = 0 : i32} : tensor<256xi1> -> tensor<1x256xi1> loc(#loc39)
    %cst_45 = arith.constant dense<0xFF800000> : tensor<16x256xf32> loc(#loc40)
    %105 = tt.broadcast %104 : tensor<1x256xi1> -> tensor<16x256xi1> loc(#loc40)
    %106 = arith.select %105, %103, %cst_45 : tensor<16x256xi1>, tensor<16x256xf32> loc(#loc40)
    %107 = tt.call @"triton.language.standard.max__fp32S16_256S__(1,)cconstexpr_1__(2,)cconstexpr_False__(3,)cconstexpr_True__(4,)cconstexpr_False_"(%106) : (tensor<16x256xf32>) -> tensor<16xf32> loc(#loc41)
    %108 = tt.splat %8 : i32 -> tensor<16xi32> loc(#loc42)
    %109 = arith.extsi %108 : tensor<16xi32> to tensor<16xi64> loc(#loc42)
    %110 = arith.extsi %16 : tensor<16xi32> to tensor<16xi64> loc(#loc42)
    %111 = arith.addi %109, %110 : tensor<16xi64> loc(#loc42)
    %c2147483647_i64_46 = arith.constant 2147483647 : i64 loc(#loc42)
    %c-2147483648_i64_47 = arith.constant -2147483648 : i64 loc(#loc42)
    %cst_48 = arith.constant dense<2147483647> : tensor<16xi64> loc(#loc42)
    %112 = arith.cmpi sle, %111, %cst_48 : tensor<16xi64> loc(#loc42)
    %cst_49 = arith.constant dense<-2147483648> : tensor<16xi64> loc(#loc42)
    %113 = arith.cmpi sge, %111, %cst_49 : tensor<16xi64> loc(#loc42)
    %114 = arith.andi %112, %113 : tensor<16xi1> loc(#loc42)
    %115 = arith.addi %108, %16 : tensor<16xi32> loc(#loc42)
    %116 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<16x!tt.ptr<f32>> loc(#loc43)
    %117 = tt.addptr %116, %115 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc43)
    %cst_50 = arith.constant dense<0xFF800000> : tensor<16xf32> loc(#loc44)
    %118 = tt.load %117, %17, %cst_50 : tensor<16x!tt.ptr<f32>> loc(#loc44)
    %119 = arith.cmpf olt, %107, %118 : tensor<16xf32> loc(#loc45)
    %120 = arith.andi %119, %17 : tensor<16xi1> loc(#loc46)
    %121 = arith.extui %120 : tensor<16xi1> to tensor<16xi32> loc(#loc47)
    %122 = tt.call @"triton.language.standard.sum__i32S16S__(1,)cconstexpr_0__(2,)cconstexpr_False__(3,)cNone"(%121) : (tensor<16xi32>) -> i32 loc(#loc48)
    %123 = arith.extui %17 : tensor<16xi1> to tensor<16xi32> loc(#loc49)
    %124 = tt.call @"triton.language.standard.sum__i32S16S__(1,)cconstexpr_0__(2,)cconstexpr_False__(3,)cNone"(%123) : (tensor<16xi32>) -> i32 loc(#loc50)
    %125 = arith.cmpi eq, %122, %124 : i32 loc(#loc51)
    %c1_i32 = arith.constant 1 : i32 loc(#loc52)
    %c1_i32_51 = arith.constant 1 : i32 loc(#loc52)
    %126 = arith.extsi %1 : i32 to i64 loc(#loc52)
    %127 = arith.extsi %c1_i32_51 : i32 to i64 loc(#loc52)
    %128 = arith.muli %126, %127 : i64 loc(#loc52)
    %c2147483647_i64_52 = arith.constant 2147483647 : i64 loc(#loc52)
    %c-2147483648_i64_53 = arith.constant -2147483648 : i64 loc(#loc52)
    %129 = arith.cmpi sle, %128, %c2147483647_i64_52 : i64 loc(#loc52)
    %130 = arith.cmpi sge, %128, %c-2147483648_i64_53 : i64 loc(#loc52)
    %131 = arith.andi %129, %130 : i1 loc(#loc52)
    %132 = arith.muli %1, %c1_i32_51 : i32 loc(#loc52)
    %c0_i32_54 = arith.constant 0 : i32 loc(#loc53)
    %c0_i32_55 = arith.constant 0 : i32 loc(#loc53)
    %133 = arith.extsi %132 : i32 to i64 loc(#loc53)
    %134 = arith.extsi %c0_i32_55 : i32 to i64 loc(#loc53)
    %135 = arith.addi %133, %134 : i64 loc(#loc53)
    %c2147483647_i64_56 = arith.constant 2147483647 : i64 loc(#loc53)
    %c-2147483648_i64_57 = arith.constant -2147483648 : i64 loc(#loc53)
    %136 = arith.cmpi sle, %135, %c2147483647_i64_56 : i64 loc(#loc53)
    %137 = arith.cmpi sge, %135, %c-2147483648_i64_57 : i64 loc(#loc53)
    %138 = arith.andi %136, %137 : i1 loc(#loc53)
    %139 = arith.addi %132, %c0_i32_55 : i32 loc(#loc53)
    %140 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc54)
    %true_58 = arith.constant true loc(#loc55)
    %141 = arith.xori %125, %true_58 : i1 loc(#loc55)
    scf.if %141 {
      %142 = tt.expand_dims %62 {axis = 0 : i32} : tensor<256xi1> -> tensor<1x256xi1> loc(#loc57)
      %143 = tt.expand_dims %107 {axis = 1 : i32} : tensor<16xf32> -> tensor<16x1xf32> loc(#loc58)
      %144 = tt.broadcast %143 : tensor<16x1xf32> -> tensor<16x256xf32> loc(#loc59)
      %145 = arith.subf %103, %144 : tensor<16x256xf32> loc(#loc59)
      %146 = math.exp2 %145 : tensor<16x256xf32> loc(#loc60)
      %cst_59 = arith.constant 0.000000e+00 : f32 loc(#loc61)
      %cst_60 = arith.constant 0.000000e+00 : f32 loc(#loc61)
      %cst_61 = arith.constant dense<0.000000e+00> : tensor<16x256xf32> loc(#loc61)
      %147 = tt.broadcast %142 : tensor<1x256xi1> -> tensor<16x256xi1> loc(#loc61)
      %148 = arith.select %147, %146, %cst_61 : tensor<16x256xi1>, tensor<16x256xf32> loc(#loc61)
      %149 = tt.call @"triton.language.standard.sum__fp32S16_256S__(1,)cconstexpr_1__(2,)cconstexpr_False__(3,)cNone"(%148) : (tensor<16x256xf32>) -> tensor<16xf32> loc(#loc62)
      %150 = arith.extui %62 : tensor<256xi1> to tensor<256xi32> loc(#loc63)
      %151 = tt.call @"triton.language.standard.sum__i32S256S__(1,)cconstexpr_0__(2,)cconstexpr_False__(3,)cNone"(%150) : (tensor<256xi32>) -> i32 loc(#loc64)
      %c0_i32_62 = arith.constant 0 : i32 loc(#loc65)
      %152 = arith.cmpi sgt, %151, %c0_i32_62 : i32 loc(#loc65)
      %153 = tt.call @"triton.language.standard.zeros____(0, 0)cconstexpr_16__(0, 1)cconstexpr_128__(1,)cconstexpr_fp32_"() : () -> tensor<16x128xf32> loc(#loc66)
      %154 = scf.if %152 -> (tensor<16x128xf32>) {
        %245 = tt.expand_dims %60 {axis = 1 : i32} : tensor<256xi32> -> tensor<256x1xi32> loc(#loc68)
        %c1024_i32 = arith.constant 1024 : i32 loc(#loc69)
        %c1024_i32_97 = arith.constant 1024 : i32 loc(#loc69)
        %cst_98 = arith.constant dense<1024> : tensor<256x1xi32> loc(#loc69)
        %246 = arith.extsi %245 : tensor<256x1xi32> to tensor<256x1xi64> loc(#loc69)
        %247 = arith.extsi %cst_98 : tensor<256x1xi32> to tensor<256x1xi64> loc(#loc69)
        %248 = arith.muli %246, %247 : tensor<256x1xi64> loc(#loc69)
        %c2147483647_i64_99 = arith.constant 2147483647 : i64 loc(#loc69)
        %c-2147483648_i64_100 = arith.constant -2147483648 : i64 loc(#loc69)
        %cst_101 = arith.constant dense<2147483647> : tensor<256x1xi64> loc(#loc69)
        %249 = arith.cmpi sle, %248, %cst_101 : tensor<256x1xi64> loc(#loc69)
        %cst_102 = arith.constant dense<-2147483648> : tensor<256x1xi64> loc(#loc69)
        %250 = arith.cmpi sge, %248, %cst_102 : tensor<256x1xi64> loc(#loc69)
        %251 = arith.andi %249, %250 : tensor<256x1xi1> loc(#loc69)
        %252 = arith.muli %245, %cst_98 : tensor<256x1xi32> loc(#loc69)
        %253 = tt.splat %arg2 : !tt.ptr<f16> -> tensor<256x1x!tt.ptr<f16>> loc(#loc70)
        %254 = tt.addptr %253, %252 : tensor<256x1x!tt.ptr<f16>>, tensor<256x1xi32> loc(#loc70)
        %c128_i32_103 = arith.constant 128 : i32 loc(#loc71)
        %c128_i32_104 = arith.constant 128 : i32 loc(#loc71)
        %255 = arith.extsi %0 : i32 to i64 loc(#loc71)
        %256 = arith.extsi %c128_i32_104 : i32 to i64 loc(#loc71)
        %257 = arith.muli %255, %256 : i64 loc(#loc71)
        %c2147483647_i64_105 = arith.constant 2147483647 : i64 loc(#loc71)
        %c-2147483648_i64_106 = arith.constant -2147483648 : i64 loc(#loc71)
        %258 = arith.cmpi sle, %257, %c2147483647_i64_105 : i64 loc(#loc71)
        %259 = arith.cmpi sge, %257, %c-2147483648_i64_106 : i64 loc(#loc71)
        %260 = arith.andi %258, %259 : i1 loc(#loc71)
        %261 = arith.muli %0, %c128_i32_104 : i32 loc(#loc71)
        %262 = tt.splat %261 : i32 -> tensor<256x1xi32> loc(#loc72)
        %263 = tt.addptr %254, %262 : tensor<256x1x!tt.ptr<f16>>, tensor<256x1xi32> loc(#loc72)
        %264 = tt.expand_dims %140 {axis = 0 : i32} : tensor<128xi32> -> tensor<1x128xi32> loc(#loc73)
        %265 = tt.broadcast %263 : tensor<256x1x!tt.ptr<f16>> -> tensor<256x128x!tt.ptr<f16>> loc(#loc74)
        %266 = tt.broadcast %264 : tensor<1x128xi32> -> tensor<256x128xi32> loc(#loc74)
        %267 = tt.addptr %265, %266 : tensor<256x128x!tt.ptr<f16>>, tensor<256x128xi32> loc(#loc74)
        %268 = tt.expand_dims %62 {axis = 1 : i32} : tensor<256xi1> -> tensor<256x1xi1> loc(#loc75)
        %cst_107 = arith.constant 0.000000e+00 : f32 loc(#loc76)
        %269 = tt.broadcast %268 : tensor<256x1xi1> -> tensor<256x128xi1> loc(#loc76)
        %cst_108 = arith.constant dense<0.000000e+00> : tensor<256x128xf32> loc(#loc76)
        %270 = arith.truncf %cst_108 : tensor<256x128xf32> to tensor<256x128xf16> loc(#loc76)
        %271 = tt.load %267, %269, %270 : tensor<256x128x!tt.ptr<f16>> loc(#loc76)
        %272 = arith.truncf %148 : tensor<16x256xf32> to tensor<16x256xf16> loc(#loc77)
        %cst_109 = arith.constant 0.000000e+00 : f32 loc(#loc78)
        %cst_110 = arith.constant dense<0.000000e+00> : tensor<16x128xf32> loc(#loc78)
        %273 = tt.dot %272, %271, %cst_110, inputPrecision = tf32 : tensor<16x256xf16> * tensor<256x128xf16> -> tensor<16x128xf32> loc(#loc78)
        scf.yield %273 : tensor<16x128xf32> loc(#loc78)
      } else {
        scf.yield %153 : tensor<16x128xf32> loc(#loc79)
      } loc(#loc67)
      %155 = tt.splat %8 : i32 -> tensor<16xi32> loc(#loc80)
      %156 = arith.extsi %155 : tensor<16xi32> to tensor<16xi64> loc(#loc80)
      %157 = arith.extsi %16 : tensor<16xi32> to tensor<16xi64> loc(#loc80)
      %158 = arith.addi %156, %157 : tensor<16xi64> loc(#loc80)
      %c2147483647_i64_63 = arith.constant 2147483647 : i64 loc(#loc80)
      %c-2147483648_i64_64 = arith.constant -2147483648 : i64 loc(#loc80)
      %cst_65 = arith.constant dense<2147483647> : tensor<16xi64> loc(#loc80)
      %159 = arith.cmpi sle, %158, %cst_65 : tensor<16xi64> loc(#loc80)
      %cst_66 = arith.constant dense<-2147483648> : tensor<16xi64> loc(#loc80)
      %160 = arith.cmpi sge, %158, %cst_66 : tensor<16xi64> loc(#loc80)
      %161 = arith.andi %159, %160 : tensor<16xi1> loc(#loc80)
      %162 = arith.addi %155, %16 : tensor<16xi32> loc(#loc80)
      %163 = tt.splat %arg11 : i32 -> tensor<16xi32> loc(#loc81)
      %164 = arith.extsi %162 : tensor<16xi32> to tensor<16xi64> loc(#loc81)
      %165 = arith.extsi %163 : tensor<16xi32> to tensor<16xi64> loc(#loc81)
      %166 = arith.muli %164, %165 : tensor<16xi64> loc(#loc81)
      %c2147483647_i64_67 = arith.constant 2147483647 : i64 loc(#loc81)
      %c-2147483648_i64_68 = arith.constant -2147483648 : i64 loc(#loc81)
      %cst_69 = arith.constant dense<2147483647> : tensor<16xi64> loc(#loc81)
      %167 = arith.cmpi sle, %166, %cst_69 : tensor<16xi64> loc(#loc81)
      %cst_70 = arith.constant dense<-2147483648> : tensor<16xi64> loc(#loc81)
      %168 = arith.cmpi sge, %166, %cst_70 : tensor<16xi64> loc(#loc81)
      %169 = arith.andi %167, %168 : tensor<16xi1> loc(#loc81)
      %170 = arith.muli %162, %163 : tensor<16xi32> loc(#loc81)
      %171 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<16x!tt.ptr<f32>> loc(#loc82)
      %172 = tt.addptr %171, %170 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc82)
      %173 = tt.splat %139 : i32 -> tensor<16xi32> loc(#loc83)
      %174 = tt.addptr %172, %173 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc83)
      %175 = tt.splat %8 : i32 -> tensor<16xi32> loc(#loc84)
      %176 = arith.extsi %175 : tensor<16xi32> to tensor<16xi64> loc(#loc84)
      %177 = arith.extsi %16 : tensor<16xi32> to tensor<16xi64> loc(#loc84)
      %178 = arith.addi %176, %177 : tensor<16xi64> loc(#loc84)
      %c2147483647_i64_71 = arith.constant 2147483647 : i64 loc(#loc84)
      %c-2147483648_i64_72 = arith.constant -2147483648 : i64 loc(#loc84)
      %cst_73 = arith.constant dense<2147483647> : tensor<16xi64> loc(#loc84)
      %179 = arith.cmpi sle, %178, %cst_73 : tensor<16xi64> loc(#loc84)
      %cst_74 = arith.constant dense<-2147483648> : tensor<16xi64> loc(#loc84)
      %180 = arith.cmpi sge, %178, %cst_74 : tensor<16xi64> loc(#loc84)
      %181 = arith.andi %179, %180 : tensor<16xi1> loc(#loc84)
      %182 = arith.addi %175, %16 : tensor<16xi32> loc(#loc84)
      %183 = tt.splat %arg11 : i32 -> tensor<16xi32> loc(#loc85)
      %184 = arith.extsi %182 : tensor<16xi32> to tensor<16xi64> loc(#loc85)
      %185 = arith.extsi %183 : tensor<16xi32> to tensor<16xi64> loc(#loc85)
      %186 = arith.muli %184, %185 : tensor<16xi64> loc(#loc85)
      %c2147483647_i64_75 = arith.constant 2147483647 : i64 loc(#loc85)
      %c-2147483648_i64_76 = arith.constant -2147483648 : i64 loc(#loc85)
      %cst_77 = arith.constant dense<2147483647> : tensor<16xi64> loc(#loc85)
      %187 = arith.cmpi sle, %186, %cst_77 : tensor<16xi64> loc(#loc85)
      %cst_78 = arith.constant dense<-2147483648> : tensor<16xi64> loc(#loc85)
      %188 = arith.cmpi sge, %186, %cst_78 : tensor<16xi64> loc(#loc85)
      %189 = arith.andi %187, %188 : tensor<16xi1> loc(#loc85)
      %190 = arith.muli %182, %183 : tensor<16xi32> loc(#loc85)
      %191 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<16x!tt.ptr<f32>> loc(#loc86)
      %192 = tt.addptr %191, %190 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc86)
      %193 = tt.splat %139 : i32 -> tensor<16xi32> loc(#loc87)
      %194 = tt.addptr %192, %193 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc87)
      %195 = tt.splat %8 : i32 -> tensor<16xi32> loc(#loc88)
      %196 = arith.extsi %195 : tensor<16xi32> to tensor<16xi64> loc(#loc88)
      %197 = arith.extsi %16 : tensor<16xi32> to tensor<16xi64> loc(#loc88)
      %198 = arith.addi %196, %197 : tensor<16xi64> loc(#loc88)
      %c2147483647_i64_79 = arith.constant 2147483647 : i64 loc(#loc88)
      %c-2147483648_i64_80 = arith.constant -2147483648 : i64 loc(#loc88)
      %cst_81 = arith.constant dense<2147483647> : tensor<16xi64> loc(#loc88)
      %199 = arith.cmpi sle, %198, %cst_81 : tensor<16xi64> loc(#loc88)
      %cst_82 = arith.constant dense<-2147483648> : tensor<16xi64> loc(#loc88)
      %200 = arith.cmpi sge, %198, %cst_82 : tensor<16xi64> loc(#loc88)
      %201 = arith.andi %199, %200 : tensor<16xi1> loc(#loc88)
      %202 = arith.addi %195, %16 : tensor<16xi32> loc(#loc88)
      %203 = tt.expand_dims %202 {axis = 1 : i32} : tensor<16xi32> -> tensor<16x1xi32> loc(#loc89)
      %c128_i32_83 = arith.constant 128 : i32 loc(#loc90)
      %c128_i32_84 = arith.constant 128 : i32 loc(#loc90)
      %204 = arith.extsi %arg11 : i32 to i64 loc(#loc90)
      %205 = arith.extsi %c128_i32_84 : i32 to i64 loc(#loc90)
      %206 = arith.muli %204, %205 : i64 loc(#loc90)
      %c2147483647_i64_85 = arith.constant 2147483647 : i64 loc(#loc90)
      %c-2147483648_i64_86 = arith.constant -2147483648 : i64 loc(#loc90)
      %207 = arith.cmpi sle, %206, %c2147483647_i64_85 : i64 loc(#loc90)
      %208 = arith.cmpi sge, %206, %c-2147483648_i64_86 : i64 loc(#loc90)
      %209 = arith.andi %207, %208 : i1 loc(#loc90)
      %210 = arith.muli %arg11, %c128_i32_84 : i32 loc(#loc90)
      %211 = tt.splat %210 : i32 -> tensor<16x1xi32> loc(#loc91)
      %212 = arith.extsi %203 : tensor<16x1xi32> to tensor<16x1xi64> loc(#loc91)
      %213 = arith.extsi %211 : tensor<16x1xi32> to tensor<16x1xi64> loc(#loc91)
      %214 = arith.muli %212, %213 : tensor<16x1xi64> loc(#loc91)
      %c2147483647_i64_87 = arith.constant 2147483647 : i64 loc(#loc91)
      %c-2147483648_i64_88 = arith.constant -2147483648 : i64 loc(#loc91)
      %cst_89 = arith.constant dense<2147483647> : tensor<16x1xi64> loc(#loc91)
      %215 = arith.cmpi sle, %214, %cst_89 : tensor<16x1xi64> loc(#loc91)
      %cst_90 = arith.constant dense<-2147483648> : tensor<16x1xi64> loc(#loc91)
      %216 = arith.cmpi sge, %214, %cst_90 : tensor<16x1xi64> loc(#loc91)
      %217 = arith.andi %215, %216 : tensor<16x1xi1> loc(#loc91)
      %218 = arith.muli %203, %211 : tensor<16x1xi32> loc(#loc91)
      %219 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<16x1x!tt.ptr<f32>> loc(#loc92)
      %220 = tt.addptr %219, %218 : tensor<16x1x!tt.ptr<f32>>, tensor<16x1xi32> loc(#loc92)
      %c128_i32_91 = arith.constant 128 : i32 loc(#loc93)
      %c128_i32_92 = arith.constant 128 : i32 loc(#loc93)
      %221 = arith.extsi %139 : i32 to i64 loc(#loc93)
      %222 = arith.extsi %c128_i32_92 : i32 to i64 loc(#loc93)
      %223 = arith.muli %221, %222 : i64 loc(#loc93)
      %c2147483647_i64_93 = arith.constant 2147483647 : i64 loc(#loc93)
      %c-2147483648_i64_94 = arith.constant -2147483648 : i64 loc(#loc93)
      %224 = arith.cmpi sle, %223, %c2147483647_i64_93 : i64 loc(#loc93)
      %225 = arith.cmpi sge, %223, %c-2147483648_i64_94 : i64 loc(#loc93)
      %226 = arith.andi %224, %225 : i1 loc(#loc93)
      %227 = arith.muli %139, %c128_i32_92 : i32 loc(#loc93)
      %228 = tt.splat %227 : i32 -> tensor<16x1xi32> loc(#loc94)
      %229 = tt.addptr %220, %228 : tensor<16x1x!tt.ptr<f32>>, tensor<16x1xi32> loc(#loc94)
      %230 = tt.expand_dims %140 {axis = 0 : i32} : tensor<128xi32> -> tensor<1x128xi32> loc(#loc95)
      %231 = tt.broadcast %229 : tensor<16x1x!tt.ptr<f32>> -> tensor<16x128x!tt.ptr<f32>> loc(#loc96)
      %232 = tt.broadcast %230 : tensor<1x128xi32> -> tensor<16x128xi32> loc(#loc96)
      %233 = tt.addptr %231, %232 : tensor<16x128x!tt.ptr<f32>>, tensor<16x128xi32> loc(#loc96)
      tt.store %174, %107, %17 : tensor<16x!tt.ptr<f32>> loc(#loc97)
      tt.store %194, %149, %17 : tensor<16x!tt.ptr<f32>> loc(#loc98)
      %234 = tt.expand_dims %17 {axis = 1 : i32} : tensor<16xi1> -> tensor<16x1xi1> loc(#loc99)
      %235 = tt.broadcast %234 : tensor<16x1xi1> -> tensor<16x128xi1> loc(#loc100)
      tt.store %233, %154, %235 : tensor<16x128x!tt.ptr<f32>> loc(#loc100)
      %236 = arith.extsi %0 : i32 to i64 loc(#loc101)
      %237 = arith.extsi %arg11 : i32 to i64 loc(#loc101)
      %238 = arith.muli %236, %237 : i64 loc(#loc101)
      %c2147483647_i64_95 = arith.constant 2147483647 : i64 loc(#loc101)
      %c-2147483648_i64_96 = arith.constant -2147483648 : i64 loc(#loc101)
      %239 = arith.cmpi sle, %238, %c2147483647_i64_95 : i64 loc(#loc101)
      %240 = arith.cmpi sge, %238, %c-2147483648_i64_96 : i64 loc(#loc101)
      %241 = arith.andi %239, %240 : i1 loc(#loc101)
      %242 = arith.muli %0, %arg11 : i32 loc(#loc101)
      %243 = tt.addptr %arg7, %242 : !tt.ptr<i8>, i32 loc(#loc102)
      %244 = tt.addptr %243, %139 : !tt.ptr<i8>, i32 loc(#loc103)
      %c1_i8 = arith.constant 1 : i8 loc(#loc104)
      tt.store %244, %c1_i8 : !tt.ptr<i8> loc(#loc105)
    } else {
    } loc(#loc56)
    tt.return loc(#loc106)
  } loc(#loc)
  tt.func private @"triton.language.standard.max__fp32S16_256S__(1,)cconstexpr_1__(2,)cconstexpr_False__(3,)cconstexpr_True__(4,)cconstexpr_False_"(%arg0: tensor<16x256xf32> loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/miniconda/envs/ffa/lib/python3.12/site-packages/triton/language/standard.py":174:0)) -> tensor<16xf32> attributes {noinline = false} {
    %0 = "tt.reduce"(%arg0) <{axis = 1 : i32}> ({
    ^bb0(%arg1: f32 loc(unknown), %arg2: f32 loc(unknown)):
      %2 = tt.call @triton.language.standard._elementwise_max__fp32_fp32__(%arg1, %arg2) : (f32, f32) -> f32 loc(#loc108)
      tt.reduce.return %2 : f32 loc(#loc108)
    }) : (tensor<16x256xf32>) -> tensor<16xf32> loc(#loc108)
    tt.return %0 : tensor<16xf32> loc(#loc109)
  ^bb1:  // no predecessors
    %1 = ub.poison : tensor<16xf32> loc(#loc110)
    tt.return %1 : tensor<16xf32> loc(#loc110)
  } loc(#loc107)
  tt.func private @triton.language.standard._elementwise_max__fp32_fp32__(%arg0: f32 loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/miniconda/envs/ffa/lib/python3.12/site-packages/triton/language/standard.py":166:0), %arg1: f32 loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/miniconda/envs/ffa/lib/python3.12/site-packages/triton/language/standard.py":166:0)) -> f32 attributes {noinline = false} {
    %0 = arith.maxnumf %arg0, %arg1 : f32 loc(#loc112)
    tt.return %0 : f32 loc(#loc113)
  ^bb1:  // no predecessors
    %1 = ub.poison : f32 loc(#loc114)
    tt.return %1 : f32 loc(#loc114)
  } loc(#loc111)
  tt.func private @"triton.language.standard.sum__i32S16S__(1,)cconstexpr_0__(2,)cconstexpr_False__(3,)cNone"(%arg0: tensor<16xi32> loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/miniconda/envs/ffa/lib/python3.12/site-packages/triton/language/standard.py":284:0)) -> i32 attributes {noinline = false} {
    %0 = "tt.reduce"(%arg0) <{axis = 0 : i32}> ({
    ^bb0(%arg1: i32 loc(unknown), %arg2: i32 loc(unknown)):
      %2 = tt.call @triton.language.standard._sum_combine__i32_i32__(%arg1, %arg2) : (i32, i32) -> i32 loc(#loc116)
      tt.reduce.return %2 : i32 loc(#loc116)
    }) : (tensor<16xi32>) -> i32 loc(#loc116)
    tt.return %0 : i32 loc(#loc117)
  ^bb1:  // no predecessors
    %1 = ub.poison : i32 loc(#loc118)
    tt.return %1 : i32 loc(#loc118)
  } loc(#loc115)
  tt.func private @triton.language.standard._sum_combine__i32_i32__(%arg0: i32 loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/miniconda/envs/ffa/lib/python3.12/site-packages/triton/language/standard.py":259:0), %arg1: i32 loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/miniconda/envs/ffa/lib/python3.12/site-packages/triton/language/standard.py":259:0)) -> i32 attributes {noinline = false} {
    %0 = arith.extsi %arg0 : i32 to i64 loc(#loc120)
    %1 = arith.extsi %arg1 : i32 to i64 loc(#loc120)
    %2 = arith.addi %0, %1 : i64 loc(#loc120)
    %c2147483647_i64 = arith.constant 2147483647 : i64 loc(#loc120)
    %c-2147483648_i64 = arith.constant -2147483648 : i64 loc(#loc120)
    %3 = arith.cmpi sle, %2, %c2147483647_i64 : i64 loc(#loc120)
    %4 = arith.cmpi sge, %2, %c-2147483648_i64 : i64 loc(#loc120)
    %5 = arith.andi %3, %4 : i1 loc(#loc120)
    %6 = arith.addi %arg0, %arg1 : i32 loc(#loc120)
    tt.return %6 : i32 loc(#loc121)
  ^bb1:  // no predecessors
    %7 = ub.poison : i32 loc(#loc122)
    tt.return %7 : i32 loc(#loc122)
  } loc(#loc119)
  tt.func private @"triton.language.standard.sum__fp32S16_256S__(1,)cconstexpr_1__(2,)cconstexpr_False__(3,)cNone"(%arg0: tensor<16x256xf32> loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/miniconda/envs/ffa/lib/python3.12/site-packages/triton/language/standard.py":284:0)) -> tensor<16xf32> attributes {noinline = false} {
    %0 = "tt.reduce"(%arg0) <{axis = 1 : i32}> ({
    ^bb0(%arg1: f32 loc(unknown), %arg2: f32 loc(unknown)):
      %2 = tt.call @triton.language.standard._sum_combine__fp32_fp32__(%arg1, %arg2) : (f32, f32) -> f32 loc(#loc116)
      tt.reduce.return %2 : f32 loc(#loc116)
    }) : (tensor<16x256xf32>) -> tensor<16xf32> loc(#loc116)
    tt.return %0 : tensor<16xf32> loc(#loc117)
  ^bb1:  // no predecessors
    %1 = ub.poison : tensor<16xf32> loc(#loc118)
    tt.return %1 : tensor<16xf32> loc(#loc118)
  } loc(#loc115)
  tt.func private @triton.language.standard._sum_combine__fp32_fp32__(%arg0: f32 loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/miniconda/envs/ffa/lib/python3.12/site-packages/triton/language/standard.py":259:0), %arg1: f32 loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/miniconda/envs/ffa/lib/python3.12/site-packages/triton/language/standard.py":259:0)) -> f32 attributes {noinline = false} {
    %0 = arith.addf %arg0, %arg1 : f32 loc(#loc120)
    tt.return %0 : f32 loc(#loc121)
  ^bb1:  // no predecessors
    %1 = ub.poison : f32 loc(#loc122)
    tt.return %1 : f32 loc(#loc122)
  } loc(#loc119)
  tt.func private @"triton.language.standard.sum__i32S256S__(1,)cconstexpr_0__(2,)cconstexpr_False__(3,)cNone"(%arg0: tensor<256xi32> loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/miniconda/envs/ffa/lib/python3.12/site-packages/triton/language/standard.py":284:0)) -> i32 attributes {noinline = false} {
    %0 = "tt.reduce"(%arg0) <{axis = 0 : i32}> ({
    ^bb0(%arg1: i32 loc(unknown), %arg2: i32 loc(unknown)):
      %2 = tt.call @triton.language.standard._sum_combine__i32_i32__(%arg1, %arg2) : (i32, i32) -> i32 loc(#loc116)
      tt.reduce.return %2 : i32 loc(#loc116)
    }) : (tensor<256xi32>) -> i32 loc(#loc116)
    tt.return %0 : i32 loc(#loc117)
  ^bb1:  // no predecessors
    %1 = ub.poison : i32 loc(#loc118)
    tt.return %1 : i32 loc(#loc118)
  } loc(#loc115)
  tt.func private @"triton.language.standard.zeros____(0, 0)cconstexpr_16__(0, 1)cconstexpr_128__(1,)cconstexpr_fp32_"() -> tensor<16x128xf32> attributes {noinline = false} {
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc124)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<16x128xf32> loc(#loc124)
    tt.return %cst_0 : tensor<16x128xf32> loc(#loc125)
  ^bb1:  // no predecessors
    %0 = ub.poison : tensor<16x128xf32> loc(#loc126)
    tt.return %0 : tensor<16x128xf32> loc(#loc126)
  } loc(#loc123)
} loc(#loc)
#loc1 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":103:28)
#loc2 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":104:28)
#loc3 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":105:24)
#loc4 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":108:18)
#loc5 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":111:28)
#loc6 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":112:22)
#loc7 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":114:28)
#loc8 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":115:30)
#loc9 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":115:36)
#loc10 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":115:47)
#loc11 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":115:19)
#loc12 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":115:58)
#loc13 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":115:51)
#loc14 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":116:45)
#loc15 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":116:23)
#loc16 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":119:14)
#loc17 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":120:14)
#loc18 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":121:33)
#loc19 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":129:25)
#loc20 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":129:49)
#loc21 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":129:36)
#loc22 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":130:32)
#loc23 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":133:36)
#loc24 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":133:40)
#loc25 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":133:26)
#loc26 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":133:55)
#loc27 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":133:66)
#loc28 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":133:45)
#loc29 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":133:78)
#loc30 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":133:71)
#loc31 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":136:25)
#loc32 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":136:46)
#loc33 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":136:36)
#loc34 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":135:12)
#loc35 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":138:13)
#loc36 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":141:33)
#loc37 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":141:65)
#loc38 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":141:73)
#loc39 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":142:37)
#loc40 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":142:52)
#loc41 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":145:28)
#loc42 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":148:53)
#loc43 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":148:43)
#loc44 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":148:26)
#loc45 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":149:32)
#loc46 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":149:43)
#loc47 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":150:34)
#loc48 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":150:25)
#loc49 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":151:37)
#loc50 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":151:25)
#loc51 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":152:31)
#loc52 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":155:25)
#loc53 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":155:31)
#loc54 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":156:30)
#loc55 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":158:15)
#loc56 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":158:11)
#loc57 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":161:40)
#loc58 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":161:71)
#loc59 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":161:64)
#loc60 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":161:58)
#loc61 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":161:82)
#loc62 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":162:28)
#loc63 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":165:41)
#loc64 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":165:28)
#loc65 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":165:62)
#loc66 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":166:43)
#loc67 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":167:15)
#loc68 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":168:40)
#loc69 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":168:52)
#loc70 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":168:30)
#loc71 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":168:75)
#loc72 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":168:65)
#loc73 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":168:87)
#loc74 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":168:80)
#loc75 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":169:56)
#loc76 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":169:33)
#loc77 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":170:39)
#loc78 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":170:52)
#loc80 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":173:40)
#loc81 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":173:48)
#loc82 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":173:29)
#loc83 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":173:55)
#loc84 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":174:40)
#loc85 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":174:48)
#loc86 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":174:29)
#loc87 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":174:55)
#loc88 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":175:40)
#loc89 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":175:46)
#loc90 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":175:65)
#loc91 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":175:58)
#loc92 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":175:29)
#loc93 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":175:78)
#loc94 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":175:70)
#loc95 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":175:89)
#loc96 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":175:82)
#loc97 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":177:29)
#loc98 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":178:29)
#loc99 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":179:51)
#loc100 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":179:29)
#loc101 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":182:42)
#loc102 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":182:32)
#loc103 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":182:49)
#loc104 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":182:71)
#loc105 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":182:56)
#loc106 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":127:4)
#loc108 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/miniconda/envs/ffa/lib/python3.12/site-packages/triton/language/standard.py":188:40)
#loc109 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/miniconda/envs/ffa/lib/python3.12/site-packages/triton/language/standard.py":188:15)
#loc110 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/miniconda/envs/ffa/lib/python3.12/site-packages/triton/language/standard.py":176:4)
#loc112 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/miniconda/envs/ffa/lib/python3.12/site-packages/triton/language/standard.py":167:27)
#loc113 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/miniconda/envs/ffa/lib/python3.12/site-packages/triton/language/standard.py":167:11)
#loc114 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/miniconda/envs/ffa/lib/python3.12/site-packages/triton/language/standard.py":167:4)
#loc116 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/miniconda/envs/ffa/lib/python3.12/site-packages/triton/language/standard.py":290:36)
#loc117 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/miniconda/envs/ffa/lib/python3.12/site-packages/triton/language/standard.py":290:11)
#loc118 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/miniconda/envs/ffa/lib/python3.12/site-packages/triton/language/standard.py":290:4)
#loc120 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/miniconda/envs/ffa/lib/python3.12/site-packages/triton/language/standard.py":260:15)
#loc121 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/miniconda/envs/ffa/lib/python3.12/site-packages/triton/language/standard.py":260:11)
#loc122 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/miniconda/envs/ffa/lib/python3.12/site-packages/triton/language/standard.py":260:4)
#loc123 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/miniconda/envs/ffa/lib/python3.12/site-packages/triton/language/standard.py":117:0)
#loc124 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/miniconda/envs/ffa/lib/python3.12/site-packages/triton/language/standard.py":126:31)
#loc125 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/miniconda/envs/ffa/lib/python3.12/site-packages/triton/language/standard.py":126:11)
#loc126 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/miniconda/envs/ffa/lib/python3.12/site-packages/triton/language/standard.py":126:4)
