#loc = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":25:0)
#loc72 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/miniconda/envs/ffa/lib/python3.12/site-packages/triton/language/standard.py":174:0)
#loc74 = loc(unknown)
#loc77 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/miniconda/envs/ffa/lib/python3.12/site-packages/triton/language/standard.py":166:0)
module {
  tt.func public @attn_compute_threshold_two_blocks(%arg0: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":25:0), %arg1: !tt.ptr<f8E5M2> {tt.divisibility = 16 : i32} loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":25:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":25:0), %arg3: f32 loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":25:0), %arg4: i32 loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":25:0), %arg5: i32 loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":25:0), %arg6: f32 loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":25:0)) attributes {noinline = false} {
    %0 = tt.get_program_id x : i32 loc(#loc1)
    %c3_i32 = arith.constant 3 : i32 loc(#loc2)
    %c3_i32_0 = arith.constant 3 : i32 loc(#loc2)
    %1 = arith.extsi %0 : i32 to i64 loc(#loc2)
    %2 = arith.extsi %c3_i32_0 : i32 to i64 loc(#loc2)
    %3 = arith.muli %1, %2 : i64 loc(#loc2)
    %c2147483647_i64 = arith.constant 2147483647 : i64 loc(#loc2)
    %c-2147483648_i64 = arith.constant -2147483648 : i64 loc(#loc2)
    %4 = arith.cmpi sle, %3, %c2147483647_i64 : i64 loc(#loc2)
    %5 = arith.cmpi sge, %3, %c-2147483648_i64 : i64 loc(#loc2)
    %6 = arith.andi %4, %5 : i1 loc(#loc2)
    %7 = arith.muli %0, %c3_i32_0 : i32 loc(#loc2)
    %8 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc3)
    %c3_i32_1 = arith.constant 3 : i32 loc(#loc4)
    %cst = arith.constant dense<3> : tensor<16xi32> loc(#loc4)
    %9 = arith.cmpi slt, %8, %cst : tensor<16xi32> loc(#loc4)
    %10 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc5)
    %11 = tt.splat %7 : i32 -> tensor<16xi32> loc(#loc6)
    %12 = arith.extsi %11 : tensor<16xi32> to tensor<16xi64> loc(#loc6)
    %13 = arith.extsi %8 : tensor<16xi32> to tensor<16xi64> loc(#loc6)
    %14 = arith.addi %12, %13 : tensor<16xi64> loc(#loc6)
    %c2147483647_i64_2 = arith.constant 2147483647 : i64 loc(#loc6)
    %c-2147483648_i64_3 = arith.constant -2147483648 : i64 loc(#loc6)
    %cst_4 = arith.constant dense<2147483647> : tensor<16xi64> loc(#loc6)
    %15 = arith.cmpi sle, %14, %cst_4 : tensor<16xi64> loc(#loc6)
    %cst_5 = arith.constant dense<-2147483648> : tensor<16xi64> loc(#loc6)
    %16 = arith.cmpi sge, %14, %cst_5 : tensor<16xi64> loc(#loc6)
    %17 = arith.andi %15, %16 : tensor<16xi1> loc(#loc6)
    %18 = arith.addi %11, %8 : tensor<16xi32> loc(#loc6)
    %19 = tt.expand_dims %18 {axis = 1 : i32} : tensor<16xi32> -> tensor<16x1xi32> loc(#loc7)
    %c128_i32 = arith.constant 128 : i32 loc(#loc8)
    %c128_i32_6 = arith.constant 128 : i32 loc(#loc8)
    %cst_7 = arith.constant dense<128> : tensor<16x1xi32> loc(#loc8)
    %20 = arith.extsi %19 : tensor<16x1xi32> to tensor<16x1xi64> loc(#loc8)
    %21 = arith.extsi %cst_7 : tensor<16x1xi32> to tensor<16x1xi64> loc(#loc8)
    %22 = arith.muli %20, %21 : tensor<16x1xi64> loc(#loc8)
    %c2147483647_i64_8 = arith.constant 2147483647 : i64 loc(#loc8)
    %c-2147483648_i64_9 = arith.constant -2147483648 : i64 loc(#loc8)
    %cst_10 = arith.constant dense<2147483647> : tensor<16x1xi64> loc(#loc8)
    %23 = arith.cmpi sle, %22, %cst_10 : tensor<16x1xi64> loc(#loc8)
    %cst_11 = arith.constant dense<-2147483648> : tensor<16x1xi64> loc(#loc8)
    %24 = arith.cmpi sge, %22, %cst_11 : tensor<16x1xi64> loc(#loc8)
    %25 = arith.andi %23, %24 : tensor<16x1xi1> loc(#loc8)
    %26 = arith.muli %19, %cst_7 : tensor<16x1xi32> loc(#loc8)
    %27 = tt.splat %arg0 : !tt.ptr<f16> -> tensor<16x1x!tt.ptr<f16>> loc(#loc9)
    %28 = tt.addptr %27, %26 : tensor<16x1x!tt.ptr<f16>>, tensor<16x1xi32> loc(#loc9)
    %29 = tt.expand_dims %10 {axis = 0 : i32} : tensor<128xi32> -> tensor<1x128xi32> loc(#loc10)
    %30 = tt.broadcast %28 : tensor<16x1x!tt.ptr<f16>> -> tensor<16x128x!tt.ptr<f16>> loc(#loc11)
    %31 = tt.broadcast %29 : tensor<1x128xi32> -> tensor<16x128xi32> loc(#loc11)
    %32 = tt.addptr %30, %31 : tensor<16x128x!tt.ptr<f16>>, tensor<16x128xi32> loc(#loc11)
    %33 = tt.expand_dims %9 {axis = 1 : i32} : tensor<16xi1> -> tensor<16x1xi1> loc(#loc12)
    %cst_12 = arith.constant 0.000000e+00 : f32 loc(#loc13)
    %34 = tt.broadcast %33 : tensor<16x1xi1> -> tensor<16x128xi1> loc(#loc13)
    %cst_13 = arith.constant dense<0.000000e+00> : tensor<16x128xf32> loc(#loc13)
    %35 = arith.truncf %cst_13 : tensor<16x128xf32> to tensor<16x128xf16> loc(#loc13)
    %36 = tt.load %32, %34, %35 : tensor<16x128x!tt.ptr<f16>> loc(#loc13)
    %cst_14 = arith.constant 1.44269502 : f32 loc(#loc14)
    %cst_15 = arith.constant 0xFF800000 : f32 loc(#loc15)
    %c0_i32 = arith.constant 0 : i32 loc(#loc16)
    %c256_i32 = arith.constant 256 : i32 loc(#loc17)
    %c256_i32_16 = arith.constant 256 : i32 loc(#loc17)
    %37 = arith.extsi %c0_i32 : i32 to i64 loc(#loc17)
    %38 = arith.extsi %c256_i32_16 : i32 to i64 loc(#loc17)
    %39 = arith.muli %37, %38 : i64 loc(#loc17)
    %c2147483647_i64_17 = arith.constant 2147483647 : i64 loc(#loc17)
    %c-2147483648_i64_18 = arith.constant -2147483648 : i64 loc(#loc17)
    %40 = arith.cmpi sle, %39, %c2147483647_i64_17 : i64 loc(#loc17)
    %41 = arith.cmpi sge, %39, %c-2147483648_i64_18 : i64 loc(#loc17)
    %42 = arith.andi %40, %41 : i1 loc(#loc17)
    %43 = arith.muli %c0_i32, %c256_i32_16 : i32 loc(#loc17)
    %44 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc18)
    %45 = tt.splat %43 : i32 -> tensor<256xi32> loc(#loc19)
    %46 = arith.extsi %45 : tensor<256xi32> to tensor<256xi64> loc(#loc19)
    %47 = arith.extsi %44 : tensor<256xi32> to tensor<256xi64> loc(#loc19)
    %48 = arith.addi %46, %47 : tensor<256xi64> loc(#loc19)
    %c2147483647_i64_19 = arith.constant 2147483647 : i64 loc(#loc19)
    %c-2147483648_i64_20 = arith.constant -2147483648 : i64 loc(#loc19)
    %cst_21 = arith.constant dense<2147483647> : tensor<256xi64> loc(#loc19)
    %49 = arith.cmpi sle, %48, %cst_21 : tensor<256xi64> loc(#loc19)
    %cst_22 = arith.constant dense<-2147483648> : tensor<256xi64> loc(#loc19)
    %50 = arith.cmpi sge, %48, %cst_22 : tensor<256xi64> loc(#loc19)
    %51 = arith.andi %49, %50 : tensor<256xi1> loc(#loc19)
    %52 = arith.addi %45, %44 : tensor<256xi32> loc(#loc19)
    %53 = tt.splat %arg4 : i32 -> tensor<256xi32> loc(#loc20)
    %54 = arith.cmpi slt, %52, %53 : tensor<256xi32> loc(#loc20)
    %55 = arith.extsi %0 : i32 to i64 loc(#loc21)
    %56 = arith.extsi %arg4 : i32 to i64 loc(#loc21)
    %57 = arith.muli %55, %56 : i64 loc(#loc21)
    %c2147483647_i64_23 = arith.constant 2147483647 : i64 loc(#loc21)
    %c-2147483648_i64_24 = arith.constant -2147483648 : i64 loc(#loc21)
    %58 = arith.cmpi sle, %57, %c2147483647_i64_23 : i64 loc(#loc21)
    %59 = arith.cmpi sge, %57, %c-2147483648_i64_24 : i64 loc(#loc21)
    %60 = arith.andi %58, %59 : i1 loc(#loc21)
    %61 = arith.muli %0, %arg4 : i32 loc(#loc21)
    %c128_i32_25 = arith.constant 128 : i32 loc(#loc22)
    %c128_i32_26 = arith.constant 128 : i32 loc(#loc22)
    %62 = arith.extsi %61 : i32 to i64 loc(#loc22)
    %63 = arith.extsi %c128_i32_26 : i32 to i64 loc(#loc22)
    %64 = arith.muli %62, %63 : i64 loc(#loc22)
    %c2147483647_i64_27 = arith.constant 2147483647 : i64 loc(#loc22)
    %c-2147483648_i64_28 = arith.constant -2147483648 : i64 loc(#loc22)
    %65 = arith.cmpi sle, %64, %c2147483647_i64_27 : i64 loc(#loc22)
    %66 = arith.cmpi sge, %64, %c-2147483648_i64_28 : i64 loc(#loc22)
    %67 = arith.andi %65, %66 : i1 loc(#loc22)
    %68 = arith.muli %61, %c128_i32_26 : i32 loc(#loc22)
    %69 = tt.addptr %arg1, %68 : !tt.ptr<f8E5M2>, i32 loc(#loc23)
    %70 = tt.expand_dims %10 {axis = 1 : i32} : tensor<128xi32> -> tensor<128x1xi32> loc(#loc24)
    %71 = tt.splat %69 : !tt.ptr<f8E5M2> -> tensor<128x1x!tt.ptr<f8E5M2>> loc(#loc25)
    %72 = tt.addptr %71, %70 : tensor<128x1x!tt.ptr<f8E5M2>>, tensor<128x1xi32> loc(#loc25)
    %73 = tt.expand_dims %52 {axis = 0 : i32} : tensor<256xi32> -> tensor<1x256xi32> loc(#loc26)
    %c128_i32_29 = arith.constant 128 : i32 loc(#loc27)
    %c128_i32_30 = arith.constant 128 : i32 loc(#loc27)
    %cst_31 = arith.constant dense<128> : tensor<1x256xi32> loc(#loc27)
    %74 = arith.extsi %73 : tensor<1x256xi32> to tensor<1x256xi64> loc(#loc27)
    %75 = arith.extsi %cst_31 : tensor<1x256xi32> to tensor<1x256xi64> loc(#loc27)
    %76 = arith.muli %74, %75 : tensor<1x256xi64> loc(#loc27)
    %c2147483647_i64_32 = arith.constant 2147483647 : i64 loc(#loc27)
    %c-2147483648_i64_33 = arith.constant -2147483648 : i64 loc(#loc27)
    %cst_34 = arith.constant dense<2147483647> : tensor<1x256xi64> loc(#loc27)
    %77 = arith.cmpi sle, %76, %cst_34 : tensor<1x256xi64> loc(#loc27)
    %cst_35 = arith.constant dense<-2147483648> : tensor<1x256xi64> loc(#loc27)
    %78 = arith.cmpi sge, %76, %cst_35 : tensor<1x256xi64> loc(#loc27)
    %79 = arith.andi %77, %78 : tensor<1x256xi1> loc(#loc27)
    %80 = arith.muli %73, %cst_31 : tensor<1x256xi32> loc(#loc27)
    %81 = tt.broadcast %72 : tensor<128x1x!tt.ptr<f8E5M2>> -> tensor<128x256x!tt.ptr<f8E5M2>> loc(#loc28)
    %82 = tt.broadcast %80 : tensor<1x256xi32> -> tensor<128x256xi32> loc(#loc28)
    %83 = tt.addptr %81, %82 : tensor<128x256x!tt.ptr<f8E5M2>>, tensor<128x256xi32> loc(#loc28)
    %true = arith.constant true loc(#loc29)
    %cst_36 = arith.constant dense<true> : tensor<128xi1> loc(#loc29)
    %84 = tt.expand_dims %cst_36 {axis = 1 : i32} : tensor<128xi1> -> tensor<128x1xi1> loc(#loc30)
    %85 = tt.expand_dims %54 {axis = 0 : i32} : tensor<256xi1> -> tensor<1x256xi1> loc(#loc31)
    %86 = tt.broadcast %84 : tensor<128x1xi1> -> tensor<128x256xi1> loc(#loc32)
    %87 = tt.broadcast %85 : tensor<1x256xi1> -> tensor<128x256xi1> loc(#loc32)
    %88 = arith.andi %86, %87 : tensor<128x256xi1> loc(#loc32)
    %cst_37 = arith.constant 0.000000e+00 : f32 loc(#loc33)
    %cst_38 = arith.constant dense<0.000000e+00> : tensor<128x256xf32> loc(#loc33)
    %89 = tt.fp_to_fp %cst_38, rounding = rtne : tensor<128x256xf32> -> tensor<128x256xf8E5M2> loc(#loc33)
    %90 = tt.load %83, %88, %89 : tensor<128x256x!tt.ptr<f8E5M2>> loc(#loc33)
    %91 = tt.fp_to_fp %90 : tensor<128x256xf8E5M2> -> tensor<128x256xf16> loc(#loc34)
    %cst_39 = arith.constant 0.000000e+00 : f32 loc(#loc35)
    %cst_40 = arith.constant dense<0.000000e+00> : tensor<16x256xf32> loc(#loc35)
    %92 = tt.dot %36, %91, %cst_40, inputPrecision = tf32 : tensor<16x128xf16> * tensor<128x256xf16> -> tensor<16x256xf32> loc(#loc35)
    %93 = tt.splat %arg3 : f32 -> tensor<16x256xf32> loc(#loc36)
    %94 = arith.mulf %92, %93 : tensor<16x256xf32> loc(#loc36)
    %cst_41 = arith.constant dense<1.44269502> : tensor<16x256xf32> loc(#loc37)
    %95 = arith.mulf %94, %cst_41 : tensor<16x256xf32> loc(#loc37)
    %96 = tt.expand_dims %54 {axis = 0 : i32} : tensor<256xi1> -> tensor<1x256xi1> loc(#loc38)
    %cst_42 = arith.constant dense<0xFF800000> : tensor<16x256xf32> loc(#loc39)
    %97 = tt.broadcast %96 : tensor<1x256xi1> -> tensor<16x256xi1> loc(#loc39)
    %98 = arith.select %97, %95, %cst_42 : tensor<16x256xi1>, tensor<16x256xf32> loc(#loc39)
    %99 = tt.call @"triton.language.standard.max__fp32S16_256S__(1,)cconstexpr_1__(2,)cconstexpr_False__(3,)cconstexpr_True__(4,)cconstexpr_False_"(%98) : (tensor<16x256xf32>) -> tensor<16xf32> loc(#loc40)
    %c1_i32 = arith.constant 1 : i32 loc(#loc41)
    %c1_i32_43 = arith.constant 1 : i32 loc(#loc41)
    %100 = arith.extsi %arg5 : i32 to i64 loc(#loc41)
    %101 = arith.extsi %c1_i32_43 : i32 to i64 loc(#loc41)
    %102 = arith.subi %100, %101 : i64 loc(#loc41)
    %c2147483647_i64_44 = arith.constant 2147483647 : i64 loc(#loc41)
    %c-2147483648_i64_45 = arith.constant -2147483648 : i64 loc(#loc41)
    %103 = arith.cmpi sle, %102, %c2147483647_i64_44 : i64 loc(#loc41)
    %104 = arith.cmpi sge, %102, %c-2147483648_i64_45 : i64 loc(#loc41)
    %105 = arith.andi %103, %104 : i1 loc(#loc41)
    %106 = arith.subi %arg5, %c1_i32_43 : i32 loc(#loc41)
    %c256_i32_46 = arith.constant 256 : i32 loc(#loc42)
    %c256_i32_47 = arith.constant 256 : i32 loc(#loc42)
    %107 = arith.extsi %106 : i32 to i64 loc(#loc42)
    %108 = arith.extsi %c256_i32_47 : i32 to i64 loc(#loc42)
    %109 = arith.muli %107, %108 : i64 loc(#loc42)
    %c2147483647_i64_48 = arith.constant 2147483647 : i64 loc(#loc42)
    %c-2147483648_i64_49 = arith.constant -2147483648 : i64 loc(#loc42)
    %110 = arith.cmpi sle, %109, %c2147483647_i64_48 : i64 loc(#loc42)
    %111 = arith.cmpi sge, %109, %c-2147483648_i64_49 : i64 loc(#loc42)
    %112 = arith.andi %110, %111 : i1 loc(#loc42)
    %113 = arith.muli %106, %c256_i32_47 : i32 loc(#loc42)
    %114 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc43)
    %115 = tt.splat %113 : i32 -> tensor<256xi32> loc(#loc44)
    %116 = arith.extsi %115 : tensor<256xi32> to tensor<256xi64> loc(#loc44)
    %117 = arith.extsi %114 : tensor<256xi32> to tensor<256xi64> loc(#loc44)
    %118 = arith.addi %116, %117 : tensor<256xi64> loc(#loc44)
    %c2147483647_i64_50 = arith.constant 2147483647 : i64 loc(#loc44)
    %c-2147483648_i64_51 = arith.constant -2147483648 : i64 loc(#loc44)
    %cst_52 = arith.constant dense<2147483647> : tensor<256xi64> loc(#loc44)
    %119 = arith.cmpi sle, %118, %cst_52 : tensor<256xi64> loc(#loc44)
    %cst_53 = arith.constant dense<-2147483648> : tensor<256xi64> loc(#loc44)
    %120 = arith.cmpi sge, %118, %cst_53 : tensor<256xi64> loc(#loc44)
    %121 = arith.andi %119, %120 : tensor<256xi1> loc(#loc44)
    %122 = arith.addi %115, %114 : tensor<256xi32> loc(#loc44)
    %123 = tt.splat %arg4 : i32 -> tensor<256xi32> loc(#loc45)
    %124 = arith.cmpi slt, %122, %123 : tensor<256xi32> loc(#loc45)
    %125 = arith.extsi %0 : i32 to i64 loc(#loc46)
    %126 = arith.extsi %arg4 : i32 to i64 loc(#loc46)
    %127 = arith.muli %125, %126 : i64 loc(#loc46)
    %c2147483647_i64_54 = arith.constant 2147483647 : i64 loc(#loc46)
    %c-2147483648_i64_55 = arith.constant -2147483648 : i64 loc(#loc46)
    %128 = arith.cmpi sle, %127, %c2147483647_i64_54 : i64 loc(#loc46)
    %129 = arith.cmpi sge, %127, %c-2147483648_i64_55 : i64 loc(#loc46)
    %130 = arith.andi %128, %129 : i1 loc(#loc46)
    %131 = arith.muli %0, %arg4 : i32 loc(#loc46)
    %c128_i32_56 = arith.constant 128 : i32 loc(#loc47)
    %c128_i32_57 = arith.constant 128 : i32 loc(#loc47)
    %132 = arith.extsi %131 : i32 to i64 loc(#loc47)
    %133 = arith.extsi %c128_i32_57 : i32 to i64 loc(#loc47)
    %134 = arith.muli %132, %133 : i64 loc(#loc47)
    %c2147483647_i64_58 = arith.constant 2147483647 : i64 loc(#loc47)
    %c-2147483648_i64_59 = arith.constant -2147483648 : i64 loc(#loc47)
    %135 = arith.cmpi sle, %134, %c2147483647_i64_58 : i64 loc(#loc47)
    %136 = arith.cmpi sge, %134, %c-2147483648_i64_59 : i64 loc(#loc47)
    %137 = arith.andi %135, %136 : i1 loc(#loc47)
    %138 = arith.muli %131, %c128_i32_57 : i32 loc(#loc47)
    %139 = tt.addptr %arg1, %138 : !tt.ptr<f8E5M2>, i32 loc(#loc48)
    %140 = tt.expand_dims %10 {axis = 1 : i32} : tensor<128xi32> -> tensor<128x1xi32> loc(#loc49)
    %141 = tt.splat %139 : !tt.ptr<f8E5M2> -> tensor<128x1x!tt.ptr<f8E5M2>> loc(#loc50)
    %142 = tt.addptr %141, %140 : tensor<128x1x!tt.ptr<f8E5M2>>, tensor<128x1xi32> loc(#loc50)
    %143 = tt.expand_dims %122 {axis = 0 : i32} : tensor<256xi32> -> tensor<1x256xi32> loc(#loc51)
    %c128_i32_60 = arith.constant 128 : i32 loc(#loc52)
    %c128_i32_61 = arith.constant 128 : i32 loc(#loc52)
    %cst_62 = arith.constant dense<128> : tensor<1x256xi32> loc(#loc52)
    %144 = arith.extsi %143 : tensor<1x256xi32> to tensor<1x256xi64> loc(#loc52)
    %145 = arith.extsi %cst_62 : tensor<1x256xi32> to tensor<1x256xi64> loc(#loc52)
    %146 = arith.muli %144, %145 : tensor<1x256xi64> loc(#loc52)
    %c2147483647_i64_63 = arith.constant 2147483647 : i64 loc(#loc52)
    %c-2147483648_i64_64 = arith.constant -2147483648 : i64 loc(#loc52)
    %cst_65 = arith.constant dense<2147483647> : tensor<1x256xi64> loc(#loc52)
    %147 = arith.cmpi sle, %146, %cst_65 : tensor<1x256xi64> loc(#loc52)
    %cst_66 = arith.constant dense<-2147483648> : tensor<1x256xi64> loc(#loc52)
    %148 = arith.cmpi sge, %146, %cst_66 : tensor<1x256xi64> loc(#loc52)
    %149 = arith.andi %147, %148 : tensor<1x256xi1> loc(#loc52)
    %150 = arith.muli %143, %cst_62 : tensor<1x256xi32> loc(#loc52)
    %151 = tt.broadcast %142 : tensor<128x1x!tt.ptr<f8E5M2>> -> tensor<128x256x!tt.ptr<f8E5M2>> loc(#loc53)
    %152 = tt.broadcast %150 : tensor<1x256xi32> -> tensor<128x256xi32> loc(#loc53)
    %153 = tt.addptr %151, %152 : tensor<128x256x!tt.ptr<f8E5M2>>, tensor<128x256xi32> loc(#loc53)
    %true_67 = arith.constant true loc(#loc54)
    %cst_68 = arith.constant dense<true> : tensor<128xi1> loc(#loc54)
    %154 = tt.expand_dims %cst_68 {axis = 1 : i32} : tensor<128xi1> -> tensor<128x1xi1> loc(#loc55)
    %155 = tt.expand_dims %124 {axis = 0 : i32} : tensor<256xi1> -> tensor<1x256xi1> loc(#loc56)
    %156 = tt.broadcast %154 : tensor<128x1xi1> -> tensor<128x256xi1> loc(#loc57)
    %157 = tt.broadcast %155 : tensor<1x256xi1> -> tensor<128x256xi1> loc(#loc57)
    %158 = arith.andi %156, %157 : tensor<128x256xi1> loc(#loc57)
    %cst_69 = arith.constant 0.000000e+00 : f32 loc(#loc58)
    %cst_70 = arith.constant dense<0.000000e+00> : tensor<128x256xf32> loc(#loc58)
    %159 = tt.fp_to_fp %cst_70, rounding = rtne : tensor<128x256xf32> -> tensor<128x256xf8E5M2> loc(#loc58)
    %160 = tt.load %153, %158, %159 : tensor<128x256x!tt.ptr<f8E5M2>> loc(#loc58)
    %161 = tt.fp_to_fp %160 : tensor<128x256xf8E5M2> -> tensor<128x256xf16> loc(#loc59)
    %cst_71 = arith.constant 0.000000e+00 : f32 loc(#loc60)
    %cst_72 = arith.constant dense<0.000000e+00> : tensor<16x256xf32> loc(#loc60)
    %162 = tt.dot %36, %161, %cst_72, inputPrecision = tf32 : tensor<16x128xf16> * tensor<128x256xf16> -> tensor<16x256xf32> loc(#loc60)
    %163 = tt.splat %arg3 : f32 -> tensor<16x256xf32> loc(#loc61)
    %164 = arith.mulf %162, %163 : tensor<16x256xf32> loc(#loc61)
    %cst_73 = arith.constant dense<1.44269502> : tensor<16x256xf32> loc(#loc62)
    %165 = arith.mulf %164, %cst_73 : tensor<16x256xf32> loc(#loc62)
    %166 = tt.expand_dims %124 {axis = 0 : i32} : tensor<256xi1> -> tensor<1x256xi1> loc(#loc63)
    %cst_74 = arith.constant dense<0xFF800000> : tensor<16x256xf32> loc(#loc64)
    %167 = tt.broadcast %166 : tensor<1x256xi1> -> tensor<16x256xi1> loc(#loc64)
    %168 = arith.select %167, %165, %cst_74 : tensor<16x256xi1>, tensor<16x256xf32> loc(#loc64)
    %169 = tt.call @"triton.language.standard.max__fp32S16_256S__(1,)cconstexpr_1__(2,)cconstexpr_False__(3,)cconstexpr_True__(4,)cconstexpr_False_"(%168) : (tensor<16x256xf32>) -> tensor<16xf32> loc(#loc65)
    %170 = arith.maxnumf %99, %169 : tensor<16xf32> loc(#loc66)
    %171 = tt.splat %arg6 : f32 -> tensor<16xf32> loc(#loc67)
    %172 = arith.subf %170, %171 : tensor<16xf32> loc(#loc67)
    %173 = tt.splat %7 : i32 -> tensor<16xi32> loc(#loc68)
    %174 = arith.extsi %173 : tensor<16xi32> to tensor<16xi64> loc(#loc68)
    %175 = arith.extsi %8 : tensor<16xi32> to tensor<16xi64> loc(#loc68)
    %176 = arith.addi %174, %175 : tensor<16xi64> loc(#loc68)
    %c2147483647_i64_75 = arith.constant 2147483647 : i64 loc(#loc68)
    %c-2147483648_i64_76 = arith.constant -2147483648 : i64 loc(#loc68)
    %cst_77 = arith.constant dense<2147483647> : tensor<16xi64> loc(#loc68)
    %177 = arith.cmpi sle, %176, %cst_77 : tensor<16xi64> loc(#loc68)
    %cst_78 = arith.constant dense<-2147483648> : tensor<16xi64> loc(#loc68)
    %178 = arith.cmpi sge, %176, %cst_78 : tensor<16xi64> loc(#loc68)
    %179 = arith.andi %177, %178 : tensor<16xi1> loc(#loc68)
    %180 = arith.addi %173, %8 : tensor<16xi32> loc(#loc68)
    %181 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<16x!tt.ptr<f32>> loc(#loc69)
    %182 = tt.addptr %181, %180 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc69)
    tt.store %182, %172, %9 : tensor<16x!tt.ptr<f32>> loc(#loc70)
    tt.return loc(#loc71)
  } loc(#loc)
  tt.func private @"triton.language.standard.max__fp32S16_256S__(1,)cconstexpr_1__(2,)cconstexpr_False__(3,)cconstexpr_True__(4,)cconstexpr_False_"(%arg0: tensor<16x256xf32> loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/miniconda/envs/ffa/lib/python3.12/site-packages/triton/language/standard.py":174:0)) -> tensor<16xf32> attributes {noinline = false} {
    %0 = "tt.reduce"(%arg0) <{axis = 1 : i32}> ({
    ^bb0(%arg1: f32 loc(unknown), %arg2: f32 loc(unknown)):
      %2 = tt.call @triton.language.standard._elementwise_max__fp32_fp32__(%arg1, %arg2) : (f32, f32) -> f32 loc(#loc73)
      tt.reduce.return %2 : f32 loc(#loc73)
    }) : (tensor<16x256xf32>) -> tensor<16xf32> loc(#loc73)
    tt.return %0 : tensor<16xf32> loc(#loc75)
  ^bb1:  // no predecessors
    %1 = ub.poison : tensor<16xf32> loc(#loc76)
    tt.return %1 : tensor<16xf32> loc(#loc76)
  } loc(#loc72)
  tt.func private @triton.language.standard._elementwise_max__fp32_fp32__(%arg0: f32 loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/miniconda/envs/ffa/lib/python3.12/site-packages/triton/language/standard.py":166:0), %arg1: f32 loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/miniconda/envs/ffa/lib/python3.12/site-packages/triton/language/standard.py":166:0)) -> f32 attributes {noinline = false} {
    %0 = arith.maxnumf %arg0, %arg1 : f32 loc(#loc78)
    tt.return %0 : f32 loc(#loc79)
  ^bb1:  // no predecessors
    %1 = ub.poison : f32 loc(#loc80)
    tt.return %1 : f32 loc(#loc80)
  } loc(#loc77)
} loc(#loc)
#loc1 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":30:28)
#loc2 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":31:24)
#loc3 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":33:24)
#loc4 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":34:22)
#loc5 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":35:26)
#loc6 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":37:28)
#loc7 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":37:34)
#loc8 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":37:45)
#loc9 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":37:17)
#loc10 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":37:56)
#loc11 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":37:49)
#loc12 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":38:43)
#loc13 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":38:21)
#loc14 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":40:14)
#loc15 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":41:14)
#loc16 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":44:10)
#loc17 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":45:20)
#loc18 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":45:38)
#loc19 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":45:25)
#loc20 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":46:24)
#loc21 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":47:33)
#loc22 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":47:37)
#loc23 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":47:23)
#loc24 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":47:48)
#loc25 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":47:41)
#loc26 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":47:67)
#loc27 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":47:78)
#loc28 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":47:59)
#loc29 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":48:57)
#loc30 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":48:66)
#loc31 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":48:85)
#loc32 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":48:77)
#loc33 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":48:22)
#loc34 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":48:110)
#loc35 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":49:26)
#loc36 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":49:59)
#loc37 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":49:67)
#loc38 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":50:28)
#loc39 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":50:44)
#loc40 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":51:16)
#loc41 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":54:16)
#loc42 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":55:20)
#loc43 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":55:38)
#loc44 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":55:25)
#loc45 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":56:24)
#loc46 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":57:33)
#loc47 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":57:37)
#loc48 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":57:23)
#loc49 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":57:48)
#loc50 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":57:41)
#loc51 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":57:67)
#loc52 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":57:78)
#loc53 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":57:59)
#loc54 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":58:57)
#loc55 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":58:66)
#loc56 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":58:85)
#loc57 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":58:77)
#loc58 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":58:22)
#loc59 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":58:110)
#loc60 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":59:26)
#loc61 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":59:59)
#loc62 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":59:67)
#loc63 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":60:28)
#loc64 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":60:44)
#loc65 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":61:16)
#loc66 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":63:24)
#loc67 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":64:14)
#loc68 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":65:40)
#loc69 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":65:30)
#loc70 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":65:47)
#loc71 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py":65:4)
#loc73 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/miniconda/envs/ffa/lib/python3.12/site-packages/triton/language/standard.py":188:40)
#loc75 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/miniconda/envs/ffa/lib/python3.12/site-packages/triton/language/standard.py":188:15)
#loc76 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/miniconda/envs/ffa/lib/python3.12/site-packages/triton/language/standard.py":176:4)
#loc78 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/miniconda/envs/ffa/lib/python3.12/site-packages/triton/language/standard.py":167:27)
#loc79 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/miniconda/envs/ffa/lib/python3.12/site-packages/triton/language/standard.py":167:11)
#loc80 = loc("/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/miniconda/envs/ffa/lib/python3.12/site-packages/triton/language/standard.py":167:4)
