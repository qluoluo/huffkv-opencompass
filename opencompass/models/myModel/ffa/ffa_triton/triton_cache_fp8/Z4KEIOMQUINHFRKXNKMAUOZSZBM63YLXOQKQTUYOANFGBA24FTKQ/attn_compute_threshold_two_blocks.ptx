//
// Generated by LLVM NVPTX Back-End
//

.version 8.7
.target sm_90a
.address_size 64

	// .globl	attn_compute_threshold_two_blocks // -- Begin function attn_compute_threshold_two_blocks
.extern .shared .align 16 .b8 global_smem[];
                                        // @attn_compute_threshold_two_blocks
.visible .entry attn_compute_threshold_two_blocks(
	.param .u64 .ptr .global .align 1 attn_compute_threshold_two_blocks_param_0,
	.param .u64 .ptr .global .align 1 attn_compute_threshold_two_blocks_param_1,
	.param .u64 .ptr .global .align 1 attn_compute_threshold_two_blocks_param_2,
	.param .f32 attn_compute_threshold_two_blocks_param_3,
	.param .u32 attn_compute_threshold_two_blocks_param_4,
	.param .u32 attn_compute_threshold_two_blocks_param_5,
	.param .f32 attn_compute_threshold_two_blocks_param_6,
	.param .u64 .ptr .global .align 1 attn_compute_threshold_two_blocks_param_7
)
.reqntid 128
{
	.reg .pred 	%p<78>;
	.reg .b16 	%rs<257>;
	.reg .b32 	%r<2995>;
	.reg .b64 	%rd<81>;
	.loc	1 25 0                          // ffa_triton_v1016-2.py:25:0
$L__func_begin0:
	.loc	1 25 0                          // ffa_triton_v1016-2.py:25:0

// %bb.0:
	ld.param.b64 	%rd36, [attn_compute_threshold_two_blocks_param_0];
	ld.param.b64 	%rd37, [attn_compute_threshold_two_blocks_param_1];
$L__tmp0:
	.loc	1 30 28                         // ffa_triton_v1016-2.py:30:28
	mov.u32 	%r2498, %ctaid.x;
	.loc	1 31 24                         // ffa_triton_v1016-2.py:31:24
	mul.lo.s32 	%r2499, %r2498, 3;
	ld.param.b64 	%rd38, [attn_compute_threshold_two_blocks_param_2];
	ld.param.b32 	%r2500, [attn_compute_threshold_two_blocks_param_3];
	.loc	1 33 24                         // ffa_triton_v1016-2.py:33:24
	mov.u32 	%r2501, %tid.x;
	ld.param.b32 	%r2502, [attn_compute_threshold_two_blocks_param_4];
	ld.param.b32 	%r2503, [attn_compute_threshold_two_blocks_param_5];
	bfe.u32 	%r2504, %r2501, 4, 3;
	ld.param.b32 	%r2505, [attn_compute_threshold_two_blocks_param_6];
	bfe.s32 	%r2506, %r2501, 2, 1;
	and.b32 	%r2507, %r2501, 4;
	and.b32 	%r2508, %r2501, 8;
	and.b32 	%r2509, %r2501, 15;
	.loc	1 34 22                         // ffa_triton_v1016-2.py:34:22
	setp.lt.u32 	%p1, %r2504, 3;
	setp.lt.u32 	%p44, %r2509, 3;
	.loc	1 37 28                         // ffa_triton_v1016-2.py:37:28
	add.s32 	%r2510, %r2504, %r2499;
	add.s32 	%r2511, %r2499, %r2509;
	shl.b32 	%r2512, %r2510, 7;
	.loc	1 37 45                         // ffa_triton_v1016-2.py:37:45
	add.s32 	%r2513, %r2512, 1024;
	.loc	1 37 17                         // ffa_triton_v1016-2.py:37:17
	mul.wide.s32 	%rd39, %r2512, 2;
	add.s64 	%rd40, %rd36, %rd39;
	mul.wide.s32 	%rd41, %r2513, 2;
	add.s64 	%rd42, %rd36, %rd41;
	.loc	1 37 56                         // ffa_triton_v1016-2.py:37:56
	shl.b32 	%r2514, %r2501, 3;
	and.b32 	%r2515, %r2514, 120;
	.loc	1 37 49                         // ffa_triton_v1016-2.py:37:49
	mul.wide.u32 	%rd43, %r2515, 2;
	add.s64 	%rd1, %rd40, %rd43;
	add.s64 	%rd2, %rd42, %rd43;
	mov.b32 	%r1803, 0;
	.loc	1 38 21                         // ffa_triton_v1016-2.py:38:21
	// begin inline asm
	mov.u32 %r1, %r1803;
	mov.u32 %r2, %r1803;
	mov.u32 %r3, %r1803;
	mov.u32 %r4, %r1803;
	@%p1 ld.global.v4.b32 { %r1, %r2, %r3, %r4 }, [ %rd1 + 0 ];
	// end inline asm
	mov.pred 	%p2, 0;
	// begin inline asm
	mov.u32 %r9, %r1803;
	mov.u32 %r10, %r1803;
	mov.u32 %r11, %r1803;
	mov.u32 %r12, %r1803;
	@%p2 ld.global.v4.b32 { %r9, %r10, %r11, %r12 }, [ %rd2 + 0 ];
	// end inline asm
	and.b32 	%r2516, %r2501, 48;
	xor.b32 	%r2517, %r2515, %r2516;
	shl.b32 	%r2518, %r2517, 1;
	mov.b32 	%r2519, global_smem;
	add.s32 	%r2520, %r2519, %r2518;
	shl.b32 	%r2521, %r2504, 8;
	add.s32 	%r2522, %r2520, %r2521;
	st.shared.v4.b32 	[%r2522], {%r1, %r2, %r3, %r4};
	st.shared.v4.b32 	[%r2522+2048], {%r9, %r10, %r11, %r12};
	bar.sync 	0;
	shl.b32 	%r2523, %r2501, 2;
	and.b32 	%r2524, %r2523, 12;
	shl.b32 	%r2525, %r2507, 2;
	or.b32 	%r2526, %r2524, %r2525;
	shl.b32 	%r2527, %r2508, 2;
	shr.u32 	%r2528, %r2501, 2;
	bfe.u32 	%r2529, %r2501, 2, 3;
	shl.b32 	%r2530, %r2526, 1;
	add.s32 	%r2531, %r2519, %r2530;
	shl.b32 	%r2532, %r2508, 3;
	add.s32 	%r2533, %r2531, %r2532;
	shl.b32 	%r2534, %r2529, 8;
	add.s32 	%r2535, %r2533, %r2534;
	ld.shared.v2.b32 	{%r361, %r473}, [%r2535];
	ld.shared.v2.b32 	{%r362, %r474}, [%r2535+2048];
	or.b32 	%r2536, %r2524, 16;
	xor.b32 	%r2537, %r2536, %r2525;
	shl.b32 	%r2538, %r2537, 1;
	add.s32 	%r2539, %r2519, %r2538;
	add.s32 	%r2540, %r2539, %r2532;
	add.s32 	%r2541, %r2540, %r2534;
	ld.shared.v2.b32 	{%r363, %r475}, [%r2541];
	ld.shared.v2.b32 	{%r364, %r476}, [%r2541+2048];
	or.b32 	%r2542, %r2526, 32;
	xor.b32 	%r2543, %r2542, %r2527;
	shl.b32 	%r2544, %r2543, 1;
	add.s32 	%r2545, %r2519, %r2544;
	add.s32 	%r2546, %r2545, %r2534;
	ld.shared.v2.b32 	{%r585, %r697}, [%r2546];
	ld.shared.v2.b32 	{%r586, %r698}, [%r2546+2048];
	or.b32 	%r2547, %r2524, 48;
	or.b32 	%r2548, %r2527, %r2525;
	xor.b32 	%r2549, %r2548, %r2547;
	shl.b32 	%r2550, %r2549, 1;
	add.s32 	%r2551, %r2519, %r2550;
	add.s32 	%r2552, %r2551, %r2534;
	ld.shared.v2.b32 	{%r587, %r699}, [%r2552];
	ld.shared.v2.b32 	{%r588, %r700}, [%r2552+2048];
	ld.shared.v2.b32 	{%r809, %r921}, [%r2535+128];
	ld.shared.v2.b32 	{%r810, %r922}, [%r2535+2176];
	or.b32 	%r2553, %r2524, 80;
	xor.b32 	%r2554, %r2553, %r2525;
	shl.b32 	%r2555, %r2554, 1;
	add.s32 	%r2556, %r2519, %r2555;
	add.s32 	%r2557, %r2556, %r2532;
	add.s32 	%r2558, %r2557, %r2534;
	ld.shared.v2.b32 	{%r811, %r923}, [%r2558];
	ld.shared.v2.b32 	{%r812, %r924}, [%r2558+2048];
	or.b32 	%r2559, %r2526, 96;
	xor.b32 	%r2560, %r2559, %r2527;
	shl.b32 	%r2561, %r2560, 1;
	add.s32 	%r2562, %r2519, %r2561;
	add.s32 	%r2563, %r2562, %r2534;
	ld.shared.v2.b32 	{%r1033, %r1145}, [%r2563];
	ld.shared.v2.b32 	{%r1034, %r1146}, [%r2563+2048];
	or.b32 	%r2564, %r2524, 112;
	xor.b32 	%r2565, %r2548, %r2564;
	shl.b32 	%r2566, %r2565, 1;
	add.s32 	%r2567, %r2519, %r2566;
	add.s32 	%r2568, %r2567, %r2534;
	ld.shared.v2.b32 	{%r1035, %r1147}, [%r2568];
	ld.shared.v2.b32 	{%r1036, %r1148}, [%r2568+2048];
	.loc	1 45 38                         // ffa_triton_v1016-2.py:45:38
	shr.u32 	%r2569, %r2501, 3;
	bfe.u32 	%r2570, %r2501, 3, 4;
	or.b32 	%r2571, %r2570, 16;
	or.b32 	%r2572, %r2570, 32;
	or.b32 	%r2573, %r2570, 48;
	or.b32 	%r2574, %r2570, 64;
	or.b32 	%r2575, %r2570, 80;
	or.b32 	%r2576, %r2570, 96;
	or.b32 	%r2577, %r2569, 112;
	or.b32 	%r2578, %r2570, 128;
	or.b32 	%r2579, %r2570, 144;
	or.b32 	%r2580, %r2570, 160;
	or.b32 	%r2581, %r2570, 176;
	or.b32 	%r2582, %r2570, 192;
	or.b32 	%r2583, %r2570, 208;
	or.b32 	%r2584, %r2570, 224;
	or.b32 	%r2585, %r2569, 240;
	shl.b32 	%r2586, %r2501, 1;
	and.b32 	%r2587, %r2586, 6;
	and.b32 	%r2588, %r2528, 24;
	or.b32 	%r2589, %r2588, %r2587;
	or.b32 	%r2590, %r2589, 1;
	or.b32 	%r2591, %r2589, 32;
	or.b32 	%r2592, %r2589, 33;
	or.b32 	%r2593, %r2589, 64;
	or.b32 	%r2594, %r2589, 65;
	or.b32 	%r2595, %r2589, 96;
	or.b32 	%r2596, %r2589, 97;
	or.b32 	%r2597, %r2589, 128;
	or.b32 	%r2598, %r2589, 129;
	or.b32 	%r2599, %r2589, 160;
	or.b32 	%r2600, %r2589, 161;
	or.b32 	%r2601, %r2589, 192;
	or.b32 	%r2602, %r2589, 193;
	or.b32 	%r2603, %r2589, 224;
	or.b32 	%r2604, %r2589, 225;
	.loc	1 46 24                         // ffa_triton_v1016-2.py:46:24
	setp.lt.s32 	%p3, %r2570, %r2502;
	setp.lt.s32 	%p4, %r2571, %r2502;
	setp.lt.s32 	%p5, %r2572, %r2502;
	setp.lt.s32 	%p6, %r2573, %r2502;
	setp.lt.s32 	%p7, %r2574, %r2502;
	setp.lt.s32 	%p8, %r2575, %r2502;
	setp.lt.s32 	%p9, %r2576, %r2502;
	setp.lt.s32 	%p10, %r2577, %r2502;
	setp.lt.s32 	%p11, %r2578, %r2502;
	setp.lt.s32 	%p12, %r2579, %r2502;
	setp.lt.s32 	%p13, %r2580, %r2502;
	setp.lt.s32 	%p14, %r2581, %r2502;
	setp.lt.s32 	%p15, %r2582, %r2502;
	setp.lt.s32 	%p16, %r2583, %r2502;
	setp.lt.s32 	%p17, %r2584, %r2502;
	setp.lt.s32 	%p18, %r2585, %r2502;
	setp.lt.s32 	%p45, %r2589, %r2502;
	setp.lt.s32 	%p46, %r2590, %r2502;
	setp.lt.s32 	%p47, %r2591, %r2502;
	setp.lt.s32 	%p48, %r2592, %r2502;
	setp.lt.s32 	%p49, %r2593, %r2502;
	setp.lt.s32 	%p50, %r2594, %r2502;
	setp.lt.s32 	%p51, %r2595, %r2502;
	setp.lt.s32 	%p52, %r2596, %r2502;
	setp.lt.s32 	%p53, %r2597, %r2502;
	setp.lt.s32 	%p54, %r2598, %r2502;
	setp.lt.s32 	%p55, %r2599, %r2502;
	setp.lt.s32 	%p56, %r2600, %r2502;
	setp.lt.s32 	%p57, %r2601, %r2502;
	setp.lt.s32 	%p58, %r2602, %r2502;
	setp.lt.s32 	%p59, %r2603, %r2502;
	setp.lt.s32 	%p60, %r2604, %r2502;
	.loc	1 47 37                         // ffa_triton_v1016-2.py:47:37
	mul.lo.s32 	%r2605, %r2498, %r2502;
	shl.b32 	%r2606, %r2605, 7;
	.loc	1 47 23                         // ffa_triton_v1016-2.py:47:23
	cvt.s64.s32 	%rd44, %r2606;
	add.s64 	%rd45, %rd37, %rd44;
	.loc	1 47 48                         // ffa_triton_v1016-2.py:47:48
	shl.b32 	%r2607, %r2501, 4;
	and.b32 	%r2608, %r2607, 112;
	.loc	1 47 41                         // ffa_triton_v1016-2.py:47:41
	cvt.u64.u32 	%rd46, %r2608;
	add.s64 	%rd47, %rd45, %rd46;
	.loc	1 47 78                         // ffa_triton_v1016-2.py:47:78
	shl.b32 	%r2609, %r2570, 7;
	shl.b32 	%r2610, %r2571, 7;
	shl.b32 	%r2611, %r2572, 7;
	shl.b32 	%r2612, %r2573, 7;
	shl.b32 	%r2613, %r2574, 7;
	shl.b32 	%r2614, %r2575, 7;
	shl.b32 	%r2615, %r2576, 7;
	shl.b32 	%r2616, %r2577, 7;
	shl.b32 	%r2617, %r2578, 7;
	shl.b32 	%r2618, %r2579, 7;
	shl.b32 	%r2619, %r2580, 7;
	shl.b32 	%r2620, %r2581, 7;
	shl.b32 	%r2621, %r2582, 7;
	shl.b32 	%r2622, %r2583, 7;
	shl.b32 	%r2623, %r2584, 7;
	shl.b32 	%r2624, %r2585, 7;
	.loc	1 47 59                         // ffa_triton_v1016-2.py:47:59
	cvt.u64.u32 	%rd48, %r2609;
	add.s64 	%rd3, %rd47, %rd48;
	cvt.u64.u32 	%rd49, %r2610;
	add.s64 	%rd4, %rd47, %rd49;
	cvt.u64.u32 	%rd50, %r2611;
	add.s64 	%rd5, %rd47, %rd50;
	cvt.u64.u32 	%rd51, %r2612;
	add.s64 	%rd6, %rd47, %rd51;
	cvt.u64.u32 	%rd52, %r2613;
	add.s64 	%rd7, %rd47, %rd52;
	cvt.u64.u32 	%rd53, %r2614;
	add.s64 	%rd8, %rd47, %rd53;
	cvt.u64.u32 	%rd54, %r2615;
	add.s64 	%rd9, %rd47, %rd54;
	cvt.u64.u32 	%rd55, %r2616;
	add.s64 	%rd10, %rd47, %rd55;
	cvt.u64.u32 	%rd56, %r2617;
	add.s64 	%rd11, %rd47, %rd56;
	cvt.u64.u32 	%rd57, %r2618;
	add.s64 	%rd12, %rd47, %rd57;
	cvt.u64.u32 	%rd58, %r2619;
	add.s64 	%rd13, %rd47, %rd58;
	cvt.u64.u32 	%rd59, %r2620;
	add.s64 	%rd14, %rd47, %rd59;
	cvt.u64.u32 	%rd60, %r2621;
	add.s64 	%rd15, %rd47, %rd60;
	cvt.u64.u32 	%rd61, %r2622;
	add.s64 	%rd16, %rd47, %rd61;
	cvt.u64.u32 	%rd62, %r2623;
	add.s64 	%rd17, %rd47, %rd62;
	cvt.u64.u32 	%rd63, %r2624;
	add.s64 	%rd18, %rd47, %rd63;
	.loc	1 48 22                         // ffa_triton_v1016-2.py:48:22
	// begin inline asm
	mov.u32 %r17, %r1803;
	mov.u32 %r18, %r1803;
	mov.u32 %r19, %r1803;
	mov.u32 %r20, %r1803;
	@%p3 ld.global.v4.b32 { %r17, %r18, %r19, %r20 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r25, %r1803;
	mov.u32 %r26, %r1803;
	mov.u32 %r27, %r1803;
	mov.u32 %r28, %r1803;
	@%p4 ld.global.v4.b32 { %r25, %r26, %r27, %r28 }, [ %rd4 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r33, %r1803;
	mov.u32 %r34, %r1803;
	mov.u32 %r35, %r1803;
	mov.u32 %r36, %r1803;
	@%p5 ld.global.v4.b32 { %r33, %r34, %r35, %r36 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r41, %r1803;
	mov.u32 %r42, %r1803;
	mov.u32 %r43, %r1803;
	mov.u32 %r44, %r1803;
	@%p6 ld.global.v4.b32 { %r41, %r42, %r43, %r44 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r49, %r1803;
	mov.u32 %r50, %r1803;
	mov.u32 %r51, %r1803;
	mov.u32 %r52, %r1803;
	@%p7 ld.global.v4.b32 { %r49, %r50, %r51, %r52 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r57, %r1803;
	mov.u32 %r58, %r1803;
	mov.u32 %r59, %r1803;
	mov.u32 %r60, %r1803;
	@%p8 ld.global.v4.b32 { %r57, %r58, %r59, %r60 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r65, %r1803;
	mov.u32 %r66, %r1803;
	mov.u32 %r67, %r1803;
	mov.u32 %r68, %r1803;
	@%p9 ld.global.v4.b32 { %r65, %r66, %r67, %r68 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r73, %r1803;
	mov.u32 %r74, %r1803;
	mov.u32 %r75, %r1803;
	mov.u32 %r76, %r1803;
	@%p10 ld.global.v4.b32 { %r73, %r74, %r75, %r76 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r81, %r1803;
	mov.u32 %r82, %r1803;
	mov.u32 %r83, %r1803;
	mov.u32 %r84, %r1803;
	@%p11 ld.global.v4.b32 { %r81, %r82, %r83, %r84 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r89, %r1803;
	mov.u32 %r90, %r1803;
	mov.u32 %r91, %r1803;
	mov.u32 %r92, %r1803;
	@%p12 ld.global.v4.b32 { %r89, %r90, %r91, %r92 }, [ %rd12 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r97, %r1803;
	mov.u32 %r98, %r1803;
	mov.u32 %r99, %r1803;
	mov.u32 %r100, %r1803;
	@%p13 ld.global.v4.b32 { %r97, %r98, %r99, %r100 }, [ %rd13 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r105, %r1803;
	mov.u32 %r106, %r1803;
	mov.u32 %r107, %r1803;
	mov.u32 %r108, %r1803;
	@%p14 ld.global.v4.b32 { %r105, %r106, %r107, %r108 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r113, %r1803;
	mov.u32 %r114, %r1803;
	mov.u32 %r115, %r1803;
	mov.u32 %r116, %r1803;
	@%p15 ld.global.v4.b32 { %r113, %r114, %r115, %r116 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r121, %r1803;
	mov.u32 %r122, %r1803;
	mov.u32 %r123, %r1803;
	mov.u32 %r124, %r1803;
	@%p16 ld.global.v4.b32 { %r121, %r122, %r123, %r124 }, [ %rd16 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r129, %r1803;
	mov.u32 %r130, %r1803;
	mov.u32 %r131, %r1803;
	mov.u32 %r132, %r1803;
	@%p17 ld.global.v4.b32 { %r129, %r130, %r131, %r132 }, [ %rd17 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r137, %r1803;
	mov.u32 %r138, %r1803;
	mov.u32 %r139, %r1803;
	mov.u32 %r140, %r1803;
	@%p18 ld.global.v4.b32 { %r137, %r138, %r139, %r140 }, [ %rd18 + 0 ];
	// end inline asm
	.loc	1 48 110                        // ffa_triton_v1016-2.py:48:110
	bar.sync 	0;
	shl.b32 	%r2625, %r2508, 1;
	and.b32 	%r2626, %r2586, 32;
	and.b32 	%r2627, %r2586, 80;
	xor.b32 	%r2628, %r2627, %r2608;
	xor.b32 	%r2629, %r2628, %r2626;
	add.s32 	%r2630, %r2519, %r2629;
	add.s32 	%r2631, %r2630, %r2609;
	st.shared.v4.b32 	[%r2631], {%r17, %r18, %r19, %r20};
	st.shared.v4.b32 	[%r2631+2048], {%r25, %r26, %r27, %r28};
	st.shared.v4.b32 	[%r2631+4096], {%r33, %r34, %r35, %r36};
	st.shared.v4.b32 	[%r2631+6144], {%r41, %r42, %r43, %r44};
	st.shared.v4.b32 	[%r2631+8192], {%r49, %r50, %r51, %r52};
	st.shared.v4.b32 	[%r2631+10240], {%r57, %r58, %r59, %r60};
	st.shared.v4.b32 	[%r2631+12288], {%r65, %r66, %r67, %r68};
	st.shared.v4.b32 	[%r2631+14336], {%r73, %r74, %r75, %r76};
	st.shared.v4.b32 	[%r2631+16384], {%r81, %r82, %r83, %r84};
	st.shared.v4.b32 	[%r2631+18432], {%r89, %r90, %r91, %r92};
	st.shared.v4.b32 	[%r2631+20480], {%r97, %r98, %r99, %r100};
	st.shared.v4.b32 	[%r2631+22528], {%r105, %r106, %r107, %r108};
	st.shared.v4.b32 	[%r2631+24576], {%r113, %r114, %r115, %r116};
	st.shared.v4.b32 	[%r2631+26624], {%r121, %r122, %r123, %r124};
	st.shared.v4.b32 	[%r2631+28672], {%r129, %r130, %r131, %r132};
	st.shared.v4.b32 	[%r2631+30720], {%r137, %r138, %r139, %r140};
	bar.sync 	0;
	and.b32 	%r2632, %r2501, 3;
	mul.lo.s32 	%r2633, %r2632, 144;
	and.b32 	%r2634, %r2506, 576;
	xor.b32 	%r2635, %r2625, %r2633;
	xor.b32 	%r2636, %r2635, %r2634;
	xor.b32 	%r2637, %r2636, %r2626;
	shl.b32 	%r2638, %r2501, 5;
	and.b32 	%r2639, %r2638, 1024;
	or.b32 	%r2640, %r2637, %r2639;
	and.b32 	%r2641, %r2638, 2048;
	or.b32 	%r2642, %r2640, %r2641;
	add.s32 	%r149, %r2519, %r2642;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r145, %r146, %r147, %r148}, [%r149];
	// end inline asm
	xor.b32 	%r2643, %r2642, 64;
	add.s32 	%r154, %r2519, %r2643;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r150, %r151, %r152, %r153}, [%r154];
	// end inline asm
	xor.b32 	%r2644, %r2642, 4096;
	add.s32 	%r159, %r2519, %r2644;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r155, %r156, %r157, %r158}, [%r159];
	// end inline asm
	xor.b32 	%r2645, %r2642, 4160;
	add.s32 	%r164, %r2519, %r2645;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r160, %r161, %r162, %r163}, [%r164];
	// end inline asm
	xor.b32 	%r2646, %r2642, 8192;
	add.s32 	%r169, %r2519, %r2646;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r165, %r166, %r167, %r168}, [%r169];
	// end inline asm
	xor.b32 	%r2647, %r2642, 8256;
	add.s32 	%r174, %r2519, %r2647;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r170, %r171, %r172, %r173}, [%r174];
	// end inline asm
	xor.b32 	%r2648, %r2642, 12288;
	add.s32 	%r179, %r2519, %r2648;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r175, %r176, %r177, %r178}, [%r179];
	// end inline asm
	xor.b32 	%r2649, %r2642, 12352;
	add.s32 	%r184, %r2519, %r2649;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r180, %r181, %r182, %r183}, [%r184];
	// end inline asm
	xor.b32 	%r2650, %r2642, 16384;
	add.s32 	%r189, %r2519, %r2650;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r185, %r186, %r187, %r188}, [%r189];
	// end inline asm
	xor.b32 	%r2651, %r2642, 16448;
	add.s32 	%r194, %r2519, %r2651;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r190, %r191, %r192, %r193}, [%r194];
	// end inline asm
	xor.b32 	%r2652, %r2642, 20480;
	add.s32 	%r199, %r2519, %r2652;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r195, %r196, %r197, %r198}, [%r199];
	// end inline asm
	xor.b32 	%r2653, %r2642, 20544;
	add.s32 	%r204, %r2519, %r2653;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r200, %r201, %r202, %r203}, [%r204];
	// end inline asm
	xor.b32 	%r2654, %r2642, 24576;
	add.s32 	%r209, %r2519, %r2654;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r205, %r206, %r207, %r208}, [%r209];
	// end inline asm
	xor.b32 	%r2655, %r2642, 24640;
	add.s32 	%r214, %r2519, %r2655;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r210, %r211, %r212, %r213}, [%r214];
	// end inline asm
	xor.b32 	%r2656, %r2642, 28672;
	add.s32 	%r219, %r2519, %r2656;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r215, %r216, %r217, %r218}, [%r219];
	// end inline asm
	xor.b32 	%r2657, %r2642, 28736;
	add.s32 	%r224, %r2519, %r2657;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r220, %r221, %r222, %r223}, [%r224];
	// end inline asm
	cvt.u16.u32 	%rs1, %r145;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r365, %rs1; 
	
	// end inline asm
	mov.b32 	{_, %rs2}, %r145;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r477, %rs2; 
	
	// end inline asm
	cvt.u16.u32 	%rs3, %r146;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r366, %rs3; 
	
	// end inline asm
	mov.b32 	{_, %rs4}, %r146;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r478, %rs4; 
	
	// end inline asm
	cvt.u16.u32 	%rs5, %r147;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r589, %rs5; 
	
	// end inline asm
	mov.b32 	{_, %rs6}, %r147;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r701, %rs6; 
	
	// end inline asm
	cvt.u16.u32 	%rs7, %r148;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r590, %rs7; 
	
	// end inline asm
	mov.b32 	{_, %rs8}, %r148;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r702, %rs8; 
	
	// end inline asm
	cvt.u16.u32 	%rs9, %r150;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r813, %rs9; 
	
	// end inline asm
	mov.b32 	{_, %rs10}, %r150;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r925, %rs10; 
	
	// end inline asm
	cvt.u16.u32 	%rs11, %r151;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r814, %rs11; 
	
	// end inline asm
	mov.b32 	{_, %rs12}, %r151;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r926, %rs12; 
	
	// end inline asm
	cvt.u16.u32 	%rs13, %r152;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1037, %rs13; 
	
	// end inline asm
	mov.b32 	{_, %rs14}, %r152;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1149, %rs14; 
	
	// end inline asm
	cvt.u16.u32 	%rs15, %r153;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1038, %rs15; 
	
	// end inline asm
	mov.b32 	{_, %rs16}, %r153;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1150, %rs16; 
	
	// end inline asm
	cvt.u16.u32 	%rs17, %r155;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r379, %rs17; 
	
	// end inline asm
	mov.b32 	{_, %rs18}, %r155;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r491, %rs18; 
	
	// end inline asm
	cvt.u16.u32 	%rs19, %r156;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r380, %rs19; 
	
	// end inline asm
	mov.b32 	{_, %rs20}, %r156;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r492, %rs20; 
	
	// end inline asm
	cvt.u16.u32 	%rs21, %r157;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r603, %rs21; 
	
	// end inline asm
	mov.b32 	{_, %rs22}, %r157;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r715, %rs22; 
	
	// end inline asm
	cvt.u16.u32 	%rs23, %r158;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r604, %rs23; 
	
	// end inline asm
	mov.b32 	{_, %rs24}, %r158;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r716, %rs24; 
	
	// end inline asm
	cvt.u16.u32 	%rs25, %r160;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r827, %rs25; 
	
	// end inline asm
	mov.b32 	{_, %rs26}, %r160;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r939, %rs26; 
	
	// end inline asm
	cvt.u16.u32 	%rs27, %r161;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r828, %rs27; 
	
	// end inline asm
	mov.b32 	{_, %rs28}, %r161;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r940, %rs28; 
	
	// end inline asm
	cvt.u16.u32 	%rs29, %r162;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1051, %rs29; 
	
	// end inline asm
	mov.b32 	{_, %rs30}, %r162;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1163, %rs30; 
	
	// end inline asm
	cvt.u16.u32 	%rs31, %r163;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1052, %rs31; 
	
	// end inline asm
	mov.b32 	{_, %rs32}, %r163;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1164, %rs32; 
	
	// end inline asm
	cvt.u16.u32 	%rs33, %r165;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r393, %rs33; 
	
	// end inline asm
	mov.b32 	{_, %rs34}, %r165;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r505, %rs34; 
	
	// end inline asm
	cvt.u16.u32 	%rs35, %r166;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r394, %rs35; 
	
	// end inline asm
	mov.b32 	{_, %rs36}, %r166;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r506, %rs36; 
	
	// end inline asm
	cvt.u16.u32 	%rs37, %r167;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r617, %rs37; 
	
	// end inline asm
	mov.b32 	{_, %rs38}, %r167;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r729, %rs38; 
	
	// end inline asm
	cvt.u16.u32 	%rs39, %r168;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r618, %rs39; 
	
	// end inline asm
	mov.b32 	{_, %rs40}, %r168;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r730, %rs40; 
	
	// end inline asm
	cvt.u16.u32 	%rs41, %r170;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r841, %rs41; 
	
	// end inline asm
	mov.b32 	{_, %rs42}, %r170;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r953, %rs42; 
	
	// end inline asm
	cvt.u16.u32 	%rs43, %r171;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r842, %rs43; 
	
	// end inline asm
	mov.b32 	{_, %rs44}, %r171;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r954, %rs44; 
	
	// end inline asm
	cvt.u16.u32 	%rs45, %r172;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1065, %rs45; 
	
	// end inline asm
	mov.b32 	{_, %rs46}, %r172;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1177, %rs46; 
	
	// end inline asm
	cvt.u16.u32 	%rs47, %r173;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1066, %rs47; 
	
	// end inline asm
	mov.b32 	{_, %rs48}, %r173;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1178, %rs48; 
	
	// end inline asm
	cvt.u16.u32 	%rs49, %r175;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r407, %rs49; 
	
	// end inline asm
	mov.b32 	{_, %rs50}, %r175;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r519, %rs50; 
	
	// end inline asm
	cvt.u16.u32 	%rs51, %r176;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r408, %rs51; 
	
	// end inline asm
	mov.b32 	{_, %rs52}, %r176;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r520, %rs52; 
	
	// end inline asm
	cvt.u16.u32 	%rs53, %r177;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r631, %rs53; 
	
	// end inline asm
	mov.b32 	{_, %rs54}, %r177;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r743, %rs54; 
	
	// end inline asm
	cvt.u16.u32 	%rs55, %r178;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r632, %rs55; 
	
	// end inline asm
	mov.b32 	{_, %rs56}, %r178;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r744, %rs56; 
	
	// end inline asm
	cvt.u16.u32 	%rs57, %r180;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r855, %rs57; 
	
	// end inline asm
	mov.b32 	{_, %rs58}, %r180;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r967, %rs58; 
	
	// end inline asm
	cvt.u16.u32 	%rs59, %r181;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r856, %rs59; 
	
	// end inline asm
	mov.b32 	{_, %rs60}, %r181;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r968, %rs60; 
	
	// end inline asm
	cvt.u16.u32 	%rs61, %r182;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1079, %rs61; 
	
	// end inline asm
	mov.b32 	{_, %rs62}, %r182;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1191, %rs62; 
	
	// end inline asm
	cvt.u16.u32 	%rs63, %r183;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1080, %rs63; 
	
	// end inline asm
	mov.b32 	{_, %rs64}, %r183;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1192, %rs64; 
	
	// end inline asm
	cvt.u16.u32 	%rs65, %r185;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r421, %rs65; 
	
	// end inline asm
	mov.b32 	{_, %rs66}, %r185;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r533, %rs66; 
	
	// end inline asm
	cvt.u16.u32 	%rs67, %r186;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r422, %rs67; 
	
	// end inline asm
	mov.b32 	{_, %rs68}, %r186;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r534, %rs68; 
	
	// end inline asm
	cvt.u16.u32 	%rs69, %r187;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r645, %rs69; 
	
	// end inline asm
	mov.b32 	{_, %rs70}, %r187;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r757, %rs70; 
	
	// end inline asm
	cvt.u16.u32 	%rs71, %r188;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r646, %rs71; 
	
	// end inline asm
	mov.b32 	{_, %rs72}, %r188;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r758, %rs72; 
	
	// end inline asm
	cvt.u16.u32 	%rs73, %r190;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r869, %rs73; 
	
	// end inline asm
	mov.b32 	{_, %rs74}, %r190;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r981, %rs74; 
	
	// end inline asm
	cvt.u16.u32 	%rs75, %r191;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r870, %rs75; 
	
	// end inline asm
	mov.b32 	{_, %rs76}, %r191;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r982, %rs76; 
	
	// end inline asm
	cvt.u16.u32 	%rs77, %r192;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1093, %rs77; 
	
	// end inline asm
	mov.b32 	{_, %rs78}, %r192;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1205, %rs78; 
	
	// end inline asm
	cvt.u16.u32 	%rs79, %r193;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1094, %rs79; 
	
	// end inline asm
	mov.b32 	{_, %rs80}, %r193;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1206, %rs80; 
	
	// end inline asm
	cvt.u16.u32 	%rs81, %r195;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r435, %rs81; 
	
	// end inline asm
	mov.b32 	{_, %rs82}, %r195;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r547, %rs82; 
	
	// end inline asm
	cvt.u16.u32 	%rs83, %r196;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r436, %rs83; 
	
	// end inline asm
	mov.b32 	{_, %rs84}, %r196;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r548, %rs84; 
	
	// end inline asm
	cvt.u16.u32 	%rs85, %r197;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r659, %rs85; 
	
	// end inline asm
	mov.b32 	{_, %rs86}, %r197;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r771, %rs86; 
	
	// end inline asm
	cvt.u16.u32 	%rs87, %r198;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r660, %rs87; 
	
	// end inline asm
	mov.b32 	{_, %rs88}, %r198;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r772, %rs88; 
	
	// end inline asm
	cvt.u16.u32 	%rs89, %r200;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r883, %rs89; 
	
	// end inline asm
	mov.b32 	{_, %rs90}, %r200;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r995, %rs90; 
	
	// end inline asm
	cvt.u16.u32 	%rs91, %r201;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r884, %rs91; 
	
	// end inline asm
	mov.b32 	{_, %rs92}, %r201;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r996, %rs92; 
	
	// end inline asm
	cvt.u16.u32 	%rs93, %r202;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1107, %rs93; 
	
	// end inline asm
	mov.b32 	{_, %rs94}, %r202;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1219, %rs94; 
	
	// end inline asm
	cvt.u16.u32 	%rs95, %r203;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1108, %rs95; 
	
	// end inline asm
	mov.b32 	{_, %rs96}, %r203;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1220, %rs96; 
	
	// end inline asm
	cvt.u16.u32 	%rs97, %r205;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r449, %rs97; 
	
	// end inline asm
	mov.b32 	{_, %rs98}, %r205;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r561, %rs98; 
	
	// end inline asm
	cvt.u16.u32 	%rs99, %r206;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r450, %rs99; 
	
	// end inline asm
	mov.b32 	{_, %rs100}, %r206;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r562, %rs100; 
	
	// end inline asm
	cvt.u16.u32 	%rs101, %r207;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r673, %rs101; 
	
	// end inline asm
	mov.b32 	{_, %rs102}, %r207;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r785, %rs102; 
	
	// end inline asm
	cvt.u16.u32 	%rs103, %r208;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r674, %rs103; 
	
	// end inline asm
	mov.b32 	{_, %rs104}, %r208;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r786, %rs104; 
	
	// end inline asm
	cvt.u16.u32 	%rs105, %r210;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r897, %rs105; 
	
	// end inline asm
	mov.b32 	{_, %rs106}, %r210;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1009, %rs106; 
	
	// end inline asm
	cvt.u16.u32 	%rs107, %r211;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r898, %rs107; 
	
	// end inline asm
	mov.b32 	{_, %rs108}, %r211;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1010, %rs108; 
	
	// end inline asm
	cvt.u16.u32 	%rs109, %r212;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1121, %rs109; 
	
	// end inline asm
	mov.b32 	{_, %rs110}, %r212;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1233, %rs110; 
	
	// end inline asm
	cvt.u16.u32 	%rs111, %r213;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1122, %rs111; 
	
	// end inline asm
	mov.b32 	{_, %rs112}, %r213;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1234, %rs112; 
	
	// end inline asm
	cvt.u16.u32 	%rs113, %r215;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r463, %rs113; 
	
	// end inline asm
	mov.b32 	{_, %rs114}, %r215;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r575, %rs114; 
	
	// end inline asm
	cvt.u16.u32 	%rs115, %r216;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r464, %rs115; 
	
	// end inline asm
	mov.b32 	{_, %rs116}, %r216;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r576, %rs116; 
	
	// end inline asm
	cvt.u16.u32 	%rs117, %r217;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r687, %rs117; 
	
	// end inline asm
	mov.b32 	{_, %rs118}, %r217;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r799, %rs118; 
	
	// end inline asm
	cvt.u16.u32 	%rs119, %r218;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r688, %rs119; 
	
	// end inline asm
	mov.b32 	{_, %rs120}, %r218;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r800, %rs120; 
	
	// end inline asm
	cvt.u16.u32 	%rs121, %r220;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r911, %rs121; 
	
	// end inline asm
	mov.b32 	{_, %rs122}, %r220;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1023, %rs122; 
	
	// end inline asm
	cvt.u16.u32 	%rs123, %r221;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r912, %rs123; 
	
	// end inline asm
	mov.b32 	{_, %rs124}, %r221;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1024, %rs124; 
	
	// end inline asm
	cvt.u16.u32 	%rs125, %r222;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1135, %rs125; 
	
	// end inline asm
	mov.b32 	{_, %rs126}, %r222;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1247, %rs126; 
	
	// end inline asm
	cvt.u16.u32 	%rs127, %r223;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1136, %rs127; 
	
	// end inline asm
	mov.b32 	{_, %rs128}, %r223;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1248, %rs128; 
	
	// end inline asm
	.loc	1 49 26                         // ffa_triton_v1016-2.py:49:26
	mov.b32 	%r465, %r1803;
	mov.b32 	%r466, %r1803;
	mov.b32 	%r467, %r1803;
	mov.b32 	%r468, %r1803;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r465, %r466, %r467, %r468 }, { %r361, %r362, %r363, %r364 }, { %r365, %r366 }, { %r465, %r466, %r467, %r468 };
	// end inline asm
	mov.b32 	%r479, %r1803;
	mov.b32 	%r480, %r1803;
	mov.b32 	%r481, %r1803;
	mov.b32 	%r482, %r1803;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r479, %r480, %r481, %r482 }, { %r361, %r362, %r363, %r364 }, { %r379, %r380 }, { %r479, %r480, %r481, %r482 };
	// end inline asm
	mov.b32 	%r493, %r1803;
	mov.b32 	%r494, %r1803;
	mov.b32 	%r495, %r1803;
	mov.b32 	%r496, %r1803;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r493, %r494, %r495, %r496 }, { %r361, %r362, %r363, %r364 }, { %r393, %r394 }, { %r493, %r494, %r495, %r496 };
	// end inline asm
	mov.b32 	%r507, %r1803;
	mov.b32 	%r508, %r1803;
	mov.b32 	%r509, %r1803;
	mov.b32 	%r510, %r1803;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r507, %r508, %r509, %r510 }, { %r361, %r362, %r363, %r364 }, { %r407, %r408 }, { %r507, %r508, %r509, %r510 };
	// end inline asm
	mov.b32 	%r521, %r1803;
	mov.b32 	%r522, %r1803;
	mov.b32 	%r523, %r1803;
	mov.b32 	%r524, %r1803;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r521, %r522, %r523, %r524 }, { %r361, %r362, %r363, %r364 }, { %r421, %r422 }, { %r521, %r522, %r523, %r524 };
	// end inline asm
	mov.b32 	%r535, %r1803;
	mov.b32 	%r536, %r1803;
	mov.b32 	%r537, %r1803;
	mov.b32 	%r538, %r1803;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r535, %r536, %r537, %r538 }, { %r361, %r362, %r363, %r364 }, { %r435, %r436 }, { %r535, %r536, %r537, %r538 };
	// end inline asm
	mov.b32 	%r549, %r1803;
	mov.b32 	%r550, %r1803;
	mov.b32 	%r551, %r1803;
	mov.b32 	%r552, %r1803;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r549, %r550, %r551, %r552 }, { %r361, %r362, %r363, %r364 }, { %r449, %r450 }, { %r549, %r550, %r551, %r552 };
	// end inline asm
	mov.b32 	%r563, %r1803;
	mov.b32 	%r564, %r1803;
	mov.b32 	%r565, %r1803;
	mov.b32 	%r566, %r1803;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r563, %r564, %r565, %r566 }, { %r361, %r362, %r363, %r364 }, { %r463, %r464 }, { %r563, %r564, %r565, %r566 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r465, %r466, %r467, %r468 }, { %r473, %r474, %r475, %r476 }, { %r477, %r478 }, { %r465, %r466, %r467, %r468 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r479, %r480, %r481, %r482 }, { %r473, %r474, %r475, %r476 }, { %r491, %r492 }, { %r479, %r480, %r481, %r482 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r493, %r494, %r495, %r496 }, { %r473, %r474, %r475, %r476 }, { %r505, %r506 }, { %r493, %r494, %r495, %r496 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r507, %r508, %r509, %r510 }, { %r473, %r474, %r475, %r476 }, { %r519, %r520 }, { %r507, %r508, %r509, %r510 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r521, %r522, %r523, %r524 }, { %r473, %r474, %r475, %r476 }, { %r533, %r534 }, { %r521, %r522, %r523, %r524 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r535, %r536, %r537, %r538 }, { %r473, %r474, %r475, %r476 }, { %r547, %r548 }, { %r535, %r536, %r537, %r538 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r549, %r550, %r551, %r552 }, { %r473, %r474, %r475, %r476 }, { %r561, %r562 }, { %r549, %r550, %r551, %r552 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r563, %r564, %r565, %r566 }, { %r473, %r474, %r475, %r476 }, { %r575, %r576 }, { %r563, %r564, %r565, %r566 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r465, %r466, %r467, %r468 }, { %r585, %r586, %r587, %r588 }, { %r589, %r590 }, { %r465, %r466, %r467, %r468 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r479, %r480, %r481, %r482 }, { %r585, %r586, %r587, %r588 }, { %r603, %r604 }, { %r479, %r480, %r481, %r482 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r493, %r494, %r495, %r496 }, { %r585, %r586, %r587, %r588 }, { %r617, %r618 }, { %r493, %r494, %r495, %r496 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r507, %r508, %r509, %r510 }, { %r585, %r586, %r587, %r588 }, { %r631, %r632 }, { %r507, %r508, %r509, %r510 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r521, %r522, %r523, %r524 }, { %r585, %r586, %r587, %r588 }, { %r645, %r646 }, { %r521, %r522, %r523, %r524 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r535, %r536, %r537, %r538 }, { %r585, %r586, %r587, %r588 }, { %r659, %r660 }, { %r535, %r536, %r537, %r538 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r549, %r550, %r551, %r552 }, { %r585, %r586, %r587, %r588 }, { %r673, %r674 }, { %r549, %r550, %r551, %r552 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r563, %r564, %r565, %r566 }, { %r585, %r586, %r587, %r588 }, { %r687, %r688 }, { %r563, %r564, %r565, %r566 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r465, %r466, %r467, %r468 }, { %r697, %r698, %r699, %r700 }, { %r701, %r702 }, { %r465, %r466, %r467, %r468 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r479, %r480, %r481, %r482 }, { %r697, %r698, %r699, %r700 }, { %r715, %r716 }, { %r479, %r480, %r481, %r482 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r493, %r494, %r495, %r496 }, { %r697, %r698, %r699, %r700 }, { %r729, %r730 }, { %r493, %r494, %r495, %r496 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r507, %r508, %r509, %r510 }, { %r697, %r698, %r699, %r700 }, { %r743, %r744 }, { %r507, %r508, %r509, %r510 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r521, %r522, %r523, %r524 }, { %r697, %r698, %r699, %r700 }, { %r757, %r758 }, { %r521, %r522, %r523, %r524 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r535, %r536, %r537, %r538 }, { %r697, %r698, %r699, %r700 }, { %r771, %r772 }, { %r535, %r536, %r537, %r538 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r549, %r550, %r551, %r552 }, { %r697, %r698, %r699, %r700 }, { %r785, %r786 }, { %r549, %r550, %r551, %r552 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r563, %r564, %r565, %r566 }, { %r697, %r698, %r699, %r700 }, { %r799, %r800 }, { %r563, %r564, %r565, %r566 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r465, %r466, %r467, %r468 }, { %r809, %r810, %r811, %r812 }, { %r813, %r814 }, { %r465, %r466, %r467, %r468 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r479, %r480, %r481, %r482 }, { %r809, %r810, %r811, %r812 }, { %r827, %r828 }, { %r479, %r480, %r481, %r482 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r493, %r494, %r495, %r496 }, { %r809, %r810, %r811, %r812 }, { %r841, %r842 }, { %r493, %r494, %r495, %r496 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r507, %r508, %r509, %r510 }, { %r809, %r810, %r811, %r812 }, { %r855, %r856 }, { %r507, %r508, %r509, %r510 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r521, %r522, %r523, %r524 }, { %r809, %r810, %r811, %r812 }, { %r869, %r870 }, { %r521, %r522, %r523, %r524 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r535, %r536, %r537, %r538 }, { %r809, %r810, %r811, %r812 }, { %r883, %r884 }, { %r535, %r536, %r537, %r538 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r549, %r550, %r551, %r552 }, { %r809, %r810, %r811, %r812 }, { %r897, %r898 }, { %r549, %r550, %r551, %r552 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r563, %r564, %r565, %r566 }, { %r809, %r810, %r811, %r812 }, { %r911, %r912 }, { %r563, %r564, %r565, %r566 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r465, %r466, %r467, %r468 }, { %r921, %r922, %r923, %r924 }, { %r925, %r926 }, { %r465, %r466, %r467, %r468 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r479, %r480, %r481, %r482 }, { %r921, %r922, %r923, %r924 }, { %r939, %r940 }, { %r479, %r480, %r481, %r482 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r493, %r494, %r495, %r496 }, { %r921, %r922, %r923, %r924 }, { %r953, %r954 }, { %r493, %r494, %r495, %r496 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r507, %r508, %r509, %r510 }, { %r921, %r922, %r923, %r924 }, { %r967, %r968 }, { %r507, %r508, %r509, %r510 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r521, %r522, %r523, %r524 }, { %r921, %r922, %r923, %r924 }, { %r981, %r982 }, { %r521, %r522, %r523, %r524 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r535, %r536, %r537, %r538 }, { %r921, %r922, %r923, %r924 }, { %r995, %r996 }, { %r535, %r536, %r537, %r538 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r549, %r550, %r551, %r552 }, { %r921, %r922, %r923, %r924 }, { %r1009, %r1010 }, { %r549, %r550, %r551, %r552 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r563, %r564, %r565, %r566 }, { %r921, %r922, %r923, %r924 }, { %r1023, %r1024 }, { %r563, %r564, %r565, %r566 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r465, %r466, %r467, %r468 }, { %r1033, %r1034, %r1035, %r1036 }, { %r1037, %r1038 }, { %r465, %r466, %r467, %r468 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r479, %r480, %r481, %r482 }, { %r1033, %r1034, %r1035, %r1036 }, { %r1051, %r1052 }, { %r479, %r480, %r481, %r482 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r493, %r494, %r495, %r496 }, { %r1033, %r1034, %r1035, %r1036 }, { %r1065, %r1066 }, { %r493, %r494, %r495, %r496 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r507, %r508, %r509, %r510 }, { %r1033, %r1034, %r1035, %r1036 }, { %r1079, %r1080 }, { %r507, %r508, %r509, %r510 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r521, %r522, %r523, %r524 }, { %r1033, %r1034, %r1035, %r1036 }, { %r1093, %r1094 }, { %r521, %r522, %r523, %r524 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r535, %r536, %r537, %r538 }, { %r1033, %r1034, %r1035, %r1036 }, { %r1107, %r1108 }, { %r535, %r536, %r537, %r538 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r549, %r550, %r551, %r552 }, { %r1033, %r1034, %r1035, %r1036 }, { %r1121, %r1122 }, { %r549, %r550, %r551, %r552 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r563, %r564, %r565, %r566 }, { %r1033, %r1034, %r1035, %r1036 }, { %r1135, %r1136 }, { %r563, %r564, %r565, %r566 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r465, %r466, %r467, %r468 }, { %r1145, %r1146, %r1147, %r1148 }, { %r1149, %r1150 }, { %r465, %r466, %r467, %r468 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r479, %r480, %r481, %r482 }, { %r1145, %r1146, %r1147, %r1148 }, { %r1163, %r1164 }, { %r479, %r480, %r481, %r482 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r493, %r494, %r495, %r496 }, { %r1145, %r1146, %r1147, %r1148 }, { %r1177, %r1178 }, { %r493, %r494, %r495, %r496 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r507, %r508, %r509, %r510 }, { %r1145, %r1146, %r1147, %r1148 }, { %r1191, %r1192 }, { %r507, %r508, %r509, %r510 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r521, %r522, %r523, %r524 }, { %r1145, %r1146, %r1147, %r1148 }, { %r1205, %r1206 }, { %r521, %r522, %r523, %r524 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r535, %r536, %r537, %r538 }, { %r1145, %r1146, %r1147, %r1148 }, { %r1219, %r1220 }, { %r535, %r536, %r537, %r538 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r549, %r550, %r551, %r552 }, { %r1145, %r1146, %r1147, %r1148 }, { %r1233, %r1234 }, { %r549, %r550, %r551, %r552 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r563, %r564, %r565, %r566 }, { %r1145, %r1146, %r1147, %r1148 }, { %r1247, %r1248 }, { %r563, %r564, %r565, %r566 };
	// end inline asm
	.loc	1 49 59                         // ffa_triton_v1016-2.py:49:59
	mul.f32 	%r2658, %r2500, %r465;
	mul.f32 	%r2659, %r2500, %r466;
	mul.f32 	%r2660, %r2500, %r467;
	mul.f32 	%r2661, %r2500, %r468;
	mul.f32 	%r2662, %r2500, %r479;
	mul.f32 	%r2663, %r2500, %r480;
	mul.f32 	%r2664, %r2500, %r481;
	mul.f32 	%r2665, %r2500, %r482;
	mul.f32 	%r2666, %r2500, %r493;
	mul.f32 	%r2667, %r2500, %r494;
	mul.f32 	%r2668, %r2500, %r495;
	mul.f32 	%r2669, %r2500, %r496;
	mul.f32 	%r2670, %r2500, %r507;
	mul.f32 	%r2671, %r2500, %r508;
	mul.f32 	%r2672, %r2500, %r509;
	mul.f32 	%r2673, %r2500, %r510;
	mul.f32 	%r2674, %r2500, %r521;
	mul.f32 	%r2675, %r2500, %r522;
	mul.f32 	%r2676, %r2500, %r523;
	mul.f32 	%r2677, %r2500, %r524;
	mul.f32 	%r2678, %r2500, %r535;
	mul.f32 	%r2679, %r2500, %r536;
	mul.f32 	%r2680, %r2500, %r537;
	mul.f32 	%r2681, %r2500, %r538;
	mul.f32 	%r2682, %r2500, %r549;
	mul.f32 	%r2683, %r2500, %r550;
	mul.f32 	%r2684, %r2500, %r551;
	mul.f32 	%r2685, %r2500, %r552;
	mul.f32 	%r2686, %r2500, %r563;
	mul.f32 	%r2687, %r2500, %r564;
	mul.f32 	%r2688, %r2500, %r565;
	mul.f32 	%r2689, %r2500, %r566;
	.loc	1 49 67                         // ffa_triton_v1016-2.py:49:67
	mul.f32 	%r2690, %r2658, 0f3FB8AA3B;
	mul.f32 	%r2691, %r2659, 0f3FB8AA3B;
	mul.f32 	%r2692, %r2660, 0f3FB8AA3B;
	mul.f32 	%r2693, %r2661, 0f3FB8AA3B;
	mul.f32 	%r2694, %r2662, 0f3FB8AA3B;
	mul.f32 	%r2695, %r2663, 0f3FB8AA3B;
	mul.f32 	%r2696, %r2664, 0f3FB8AA3B;
	mul.f32 	%r2697, %r2665, 0f3FB8AA3B;
	mul.f32 	%r2698, %r2666, 0f3FB8AA3B;
	mul.f32 	%r2699, %r2667, 0f3FB8AA3B;
	mul.f32 	%r2700, %r2668, 0f3FB8AA3B;
	mul.f32 	%r2701, %r2669, 0f3FB8AA3B;
	mul.f32 	%r2702, %r2670, 0f3FB8AA3B;
	mul.f32 	%r2703, %r2671, 0f3FB8AA3B;
	mul.f32 	%r2704, %r2672, 0f3FB8AA3B;
	mul.f32 	%r2705, %r2673, 0f3FB8AA3B;
	mul.f32 	%r2706, %r2674, 0f3FB8AA3B;
	mul.f32 	%r2707, %r2675, 0f3FB8AA3B;
	mul.f32 	%r2708, %r2676, 0f3FB8AA3B;
	mul.f32 	%r2709, %r2677, 0f3FB8AA3B;
	mul.f32 	%r2710, %r2678, 0f3FB8AA3B;
	mul.f32 	%r2711, %r2679, 0f3FB8AA3B;
	mul.f32 	%r2712, %r2680, 0f3FB8AA3B;
	mul.f32 	%r2713, %r2681, 0f3FB8AA3B;
	mul.f32 	%r2714, %r2682, 0f3FB8AA3B;
	mul.f32 	%r2715, %r2683, 0f3FB8AA3B;
	mul.f32 	%r2716, %r2684, 0f3FB8AA3B;
	mul.f32 	%r2717, %r2685, 0f3FB8AA3B;
	mul.f32 	%r2718, %r2686, 0f3FB8AA3B;
	mul.f32 	%r2719, %r2687, 0f3FB8AA3B;
	mul.f32 	%r2720, %r2688, 0f3FB8AA3B;
	mul.f32 	%r2721, %r2689, 0f3FB8AA3B;
	.loc	1 50 44                         // ffa_triton_v1016-2.py:50:44
	selp.f32 	%r2722, %r2690, 0fFF800000, %p45;
	selp.f32 	%r2723, %r2691, 0fFF800000, %p46;
	selp.f32 	%r2724, %r2692, 0fFF800000, %p45;
	selp.f32 	%r2725, %r2693, 0fFF800000, %p46;
	selp.f32 	%r2726, %r2694, 0fFF800000, %p47;
	selp.f32 	%r2727, %r2695, 0fFF800000, %p48;
	selp.f32 	%r2728, %r2696, 0fFF800000, %p47;
	selp.f32 	%r2729, %r2697, 0fFF800000, %p48;
	selp.f32 	%r2730, %r2698, 0fFF800000, %p49;
	selp.f32 	%r2731, %r2699, 0fFF800000, %p50;
	selp.f32 	%r2732, %r2700, 0fFF800000, %p49;
	selp.f32 	%r2733, %r2701, 0fFF800000, %p50;
	selp.f32 	%r2734, %r2702, 0fFF800000, %p51;
	selp.f32 	%r2735, %r2703, 0fFF800000, %p52;
	selp.f32 	%r2736, %r2704, 0fFF800000, %p51;
	selp.f32 	%r2737, %r2705, 0fFF800000, %p52;
	selp.f32 	%r2738, %r2706, 0fFF800000, %p53;
	selp.f32 	%r2739, %r2707, 0fFF800000, %p54;
	selp.f32 	%r2740, %r2708, 0fFF800000, %p53;
	selp.f32 	%r2741, %r2709, 0fFF800000, %p54;
	selp.f32 	%r2742, %r2710, 0fFF800000, %p55;
	selp.f32 	%r2743, %r2711, 0fFF800000, %p56;
	selp.f32 	%r2744, %r2712, 0fFF800000, %p55;
	selp.f32 	%r2745, %r2713, 0fFF800000, %p56;
	selp.f32 	%r2746, %r2714, 0fFF800000, %p57;
	selp.f32 	%r2747, %r2715, 0fFF800000, %p58;
	selp.f32 	%r2748, %r2716, 0fFF800000, %p57;
	selp.f32 	%r2749, %r2717, 0fFF800000, %p58;
	selp.f32 	%r2750, %r2718, 0fFF800000, %p59;
	selp.f32 	%r2751, %r2719, 0fFF800000, %p60;
	selp.f32 	%r2752, %r2720, 0fFF800000, %p59;
	selp.f32 	%r2753, %r2721, 0fFF800000, %p60;
$L__tmp1:
	.loc	2 188 40                        // standard.py:188:40 @[ ffa_triton_v1016-2.py:51:16 ]
	bar.sync 	0;
	.loc	2 167 27                        // standard.py:167:27 @[ ffa_triton_v1016-2.py:51:16 ]
	max.f32 	%r2754, %r2722, %r2723;
	max.f32 	%r2755, %r2724, %r2725;
	max.f32 	%r2756, %r2754, %r2726;
	max.f32 	%r2757, %r2756, %r2727;
	max.f32 	%r2758, %r2755, %r2728;
	max.f32 	%r2759, %r2758, %r2729;
	max.f32 	%r2760, %r2757, %r2730;
	max.f32 	%r2761, %r2760, %r2731;
	max.f32 	%r2762, %r2759, %r2732;
	max.f32 	%r2763, %r2762, %r2733;
	max.f32 	%r2764, %r2761, %r2734;
	max.f32 	%r2765, %r2764, %r2735;
	max.f32 	%r2766, %r2763, %r2736;
	max.f32 	%r2767, %r2766, %r2737;
	max.f32 	%r2768, %r2765, %r2738;
	max.f32 	%r2769, %r2768, %r2739;
	max.f32 	%r2770, %r2767, %r2740;
	max.f32 	%r2771, %r2770, %r2741;
	max.f32 	%r2772, %r2769, %r2742;
	max.f32 	%r2773, %r2772, %r2743;
	max.f32 	%r2774, %r2771, %r2744;
	max.f32 	%r2775, %r2774, %r2745;
	max.f32 	%r2776, %r2773, %r2746;
	max.f32 	%r2777, %r2776, %r2747;
	max.f32 	%r2778, %r2775, %r2748;
	max.f32 	%r2779, %r2778, %r2749;
	max.f32 	%r2780, %r2777, %r2750;
	max.f32 	%r2781, %r2780, %r2751;
	max.f32 	%r2782, %r2779, %r2752;
	max.f32 	%r2783, %r2782, %r2753;
	.loc	2 188 40                        // standard.py:188:40 @[ ffa_triton_v1016-2.py:51:16 ]
	shfl.sync.bfly.b32 	%r2784, %r2781, 2, 31, -1;
	.loc	2 167 27                        // standard.py:167:27 @[ ffa_triton_v1016-2.py:51:16 ]
	max.f32 	%r2785, %r2781, %r2784;
	.loc	2 188 40                        // standard.py:188:40 @[ ffa_triton_v1016-2.py:51:16 ]
	shfl.sync.bfly.b32 	%r2786, %r2785, 1, 31, -1;
	.loc	2 167 27                        // standard.py:167:27 @[ ffa_triton_v1016-2.py:51:16 ]
	max.f32 	%r1250, %r2785, %r2786;
	.loc	2 188 40                        // standard.py:188:40 @[ ffa_triton_v1016-2.py:51:16 ]
	shfl.sync.bfly.b32 	%r2787, %r2783, 2, 31, -1;
	.loc	2 167 27                        // standard.py:167:27 @[ ffa_triton_v1016-2.py:51:16 ]
	max.f32 	%r2788, %r2783, %r2787;
	.loc	2 188 40                        // standard.py:188:40 @[ ffa_triton_v1016-2.py:51:16 ]
	shfl.sync.bfly.b32 	%r2789, %r2788, 1, 31, -1;
	.loc	2 167 27                        // standard.py:167:27 @[ ffa_triton_v1016-2.py:51:16 ]
	max.f32 	%r1252, %r2788, %r2789;
	.loc	2 188 40                        // standard.py:188:40 @[ ffa_triton_v1016-2.py:51:16 ]
	setp.eq.s32 	%p19, %r2632, 0;
	shl.b32 	%r2790, %r2529, 4;
	add.s32 	%r2791, %r2519, %r2790;
	and.b32 	%r2792, %r2569, 12;
	add.s32 	%r1249, %r2791, %r2792;
	// begin inline asm
	@%p19 st.shared.b32 [ %r1249 + 0 ], %r1250;
	// end inline asm
	add.s32 	%r2793, %r2791, 128;
	add.s32 	%r1251, %r2793, %r2792;
	// begin inline asm
	@%p19 st.shared.b32 [ %r1251 + 0 ], %r1252;
	// end inline asm
	bar.sync 	0;
	setp.lt.u32 	%p21, %r2501, 64;
	add.s32 	%r1254, %r2519, %r2523;
	// begin inline asm
	@%p21 ld.shared.b32 %r1253, [ %r1254 + 0 ];
	// end inline asm
	shfl.sync.bfly.b32 	%r2794, %r1253, 2, 31, -1;
	.loc	2 167 27                        // standard.py:167:27 @[ ffa_triton_v1016-2.py:51:16 ]
	max.f32 	%r2795, %r1253, %r2794;
	.loc	2 188 40                        // standard.py:188:40 @[ ffa_triton_v1016-2.py:51:16 ]
	shfl.sync.bfly.b32 	%r2796, %r2795, 1, 31, -1;
	.loc	2 167 27                        // standard.py:167:27 @[ ffa_triton_v1016-2.py:51:16 ]
	max.f32 	%r1256, %r2795, %r2796;
	.loc	2 188 40                        // standard.py:188:40 @[ ffa_triton_v1016-2.py:51:16 ]
	and.b32 	%r2797, %r2501, 963;
	setp.eq.s32 	%p22, %r2797, 0;
	// begin inline asm
	@%p22 st.shared.b32 [ %r1254 + 0 ], %r1256;
	// end inline asm
	bar.sync 	0;
	ld.shared.b32 	%r2798, [%r2791];
	ld.shared.b32 	%r2799, [%r2791+128];
$L__tmp2:
	.loc	1 55 20                         // ffa_triton_v1016-2.py:55:20
	shl.b32 	%r2800, %r2503, 8;
	add.s32 	%r2801, %r2800, -256;
	.loc	1 55 25                         // ffa_triton_v1016-2.py:55:25
	or.b32 	%r2802, %r2801, %r2570;
	or.b32 	%r2803, %r2801, %r2571;
	or.b32 	%r2804, %r2801, %r2572;
	or.b32 	%r2805, %r2801, %r2573;
	or.b32 	%r2806, %r2801, %r2574;
	or.b32 	%r2807, %r2801, %r2575;
	or.b32 	%r2808, %r2801, %r2576;
	or.b32 	%r2809, %r2801, %r2577;
	or.b32 	%r2810, %r2801, %r2578;
	or.b32 	%r2811, %r2801, %r2579;
	or.b32 	%r2812, %r2801, %r2580;
	or.b32 	%r2813, %r2801, %r2581;
	or.b32 	%r2814, %r2801, %r2582;
	or.b32 	%r2815, %r2801, %r2583;
	or.b32 	%r2816, %r2801, %r2584;
	or.b32 	%r2817, %r2801, %r2585;
	or.b32 	%r2818, %r2801, %r2589;
	or.b32 	%r2819, %r2801, %r2590;
	or.b32 	%r2820, %r2801, %r2591;
	or.b32 	%r2821, %r2801, %r2592;
	or.b32 	%r2822, %r2801, %r2593;
	or.b32 	%r2823, %r2801, %r2594;
	or.b32 	%r2824, %r2801, %r2595;
	or.b32 	%r2825, %r2801, %r2596;
	or.b32 	%r2826, %r2801, %r2597;
	or.b32 	%r2827, %r2801, %r2598;
	or.b32 	%r2828, %r2801, %r2599;
	or.b32 	%r2829, %r2801, %r2600;
	or.b32 	%r2830, %r2801, %r2601;
	or.b32 	%r2831, %r2801, %r2602;
	or.b32 	%r2832, %r2801, %r2603;
	or.b32 	%r2833, %r2801, %r2604;
	.loc	1 56 24                         // ffa_triton_v1016-2.py:56:24
	setp.lt.s32 	%p23, %r2802, %r2502;
	setp.lt.s32 	%p24, %r2803, %r2502;
	setp.lt.s32 	%p25, %r2804, %r2502;
	setp.lt.s32 	%p26, %r2805, %r2502;
	setp.lt.s32 	%p27, %r2806, %r2502;
	setp.lt.s32 	%p28, %r2807, %r2502;
	setp.lt.s32 	%p29, %r2808, %r2502;
	setp.lt.s32 	%p30, %r2809, %r2502;
	setp.lt.s32 	%p31, %r2810, %r2502;
	setp.lt.s32 	%p32, %r2811, %r2502;
	setp.lt.s32 	%p33, %r2812, %r2502;
	setp.lt.s32 	%p34, %r2813, %r2502;
	setp.lt.s32 	%p35, %r2814, %r2502;
	setp.lt.s32 	%p36, %r2815, %r2502;
	setp.lt.s32 	%p37, %r2816, %r2502;
	setp.lt.s32 	%p38, %r2817, %r2502;
	setp.lt.s32 	%p61, %r2818, %r2502;
	setp.lt.s32 	%p62, %r2819, %r2502;
	setp.lt.s32 	%p63, %r2820, %r2502;
	setp.lt.s32 	%p64, %r2821, %r2502;
	setp.lt.s32 	%p65, %r2822, %r2502;
	setp.lt.s32 	%p66, %r2823, %r2502;
	setp.lt.s32 	%p67, %r2824, %r2502;
	setp.lt.s32 	%p68, %r2825, %r2502;
	setp.lt.s32 	%p69, %r2826, %r2502;
	setp.lt.s32 	%p70, %r2827, %r2502;
	setp.lt.s32 	%p71, %r2828, %r2502;
	setp.lt.s32 	%p72, %r2829, %r2502;
	setp.lt.s32 	%p73, %r2830, %r2502;
	setp.lt.s32 	%p74, %r2831, %r2502;
	setp.lt.s32 	%p75, %r2832, %r2502;
	setp.lt.s32 	%p76, %r2833, %r2502;
	.loc	1 57 78                         // ffa_triton_v1016-2.py:57:78
	shl.b32 	%r2834, %r2802, 7;
	shl.b32 	%r2835, %r2803, 7;
	shl.b32 	%r2836, %r2804, 7;
	shl.b32 	%r2837, %r2805, 7;
	shl.b32 	%r2838, %r2806, 7;
	shl.b32 	%r2839, %r2807, 7;
	shl.b32 	%r2840, %r2808, 7;
	shl.b32 	%r2841, %r2809, 7;
	shl.b32 	%r2842, %r2810, 7;
	shl.b32 	%r2843, %r2811, 7;
	shl.b32 	%r2844, %r2812, 7;
	shl.b32 	%r2845, %r2813, 7;
	shl.b32 	%r2846, %r2814, 7;
	shl.b32 	%r2847, %r2815, 7;
	shl.b32 	%r2848, %r2816, 7;
	shl.b32 	%r2849, %r2817, 7;
	.loc	1 57 59                         // ffa_triton_v1016-2.py:57:59
	cvt.s64.s32 	%rd64, %r2834;
	add.s64 	%rd19, %rd47, %rd64;
	cvt.s64.s32 	%rd65, %r2835;
	add.s64 	%rd20, %rd47, %rd65;
	cvt.s64.s32 	%rd66, %r2836;
	add.s64 	%rd21, %rd47, %rd66;
	cvt.s64.s32 	%rd67, %r2837;
	add.s64 	%rd22, %rd47, %rd67;
	cvt.s64.s32 	%rd68, %r2838;
	add.s64 	%rd23, %rd47, %rd68;
	cvt.s64.s32 	%rd69, %r2839;
	add.s64 	%rd24, %rd47, %rd69;
	cvt.s64.s32 	%rd70, %r2840;
	add.s64 	%rd25, %rd47, %rd70;
	cvt.s64.s32 	%rd71, %r2841;
	add.s64 	%rd26, %rd47, %rd71;
	cvt.s64.s32 	%rd72, %r2842;
	add.s64 	%rd27, %rd47, %rd72;
	cvt.s64.s32 	%rd73, %r2843;
	add.s64 	%rd28, %rd47, %rd73;
	cvt.s64.s32 	%rd74, %r2844;
	add.s64 	%rd29, %rd47, %rd74;
	cvt.s64.s32 	%rd75, %r2845;
	add.s64 	%rd30, %rd47, %rd75;
	cvt.s64.s32 	%rd76, %r2846;
	add.s64 	%rd31, %rd47, %rd76;
	cvt.s64.s32 	%rd77, %r2847;
	add.s64 	%rd32, %rd47, %rd77;
	cvt.s64.s32 	%rd78, %r2848;
	add.s64 	%rd33, %rd47, %rd78;
	cvt.s64.s32 	%rd79, %r2849;
	add.s64 	%rd34, %rd47, %rd79;
	.loc	1 58 22                         // ffa_triton_v1016-2.py:58:22
	// begin inline asm
	mov.u32 %r1257, %r1803;
	mov.u32 %r1258, %r1803;
	mov.u32 %r1259, %r1803;
	mov.u32 %r1260, %r1803;
	@%p23 ld.global.v4.b32 { %r1257, %r1258, %r1259, %r1260 }, [ %rd19 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r1265, %r1803;
	mov.u32 %r1266, %r1803;
	mov.u32 %r1267, %r1803;
	mov.u32 %r1268, %r1803;
	@%p24 ld.global.v4.b32 { %r1265, %r1266, %r1267, %r1268 }, [ %rd20 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r1273, %r1803;
	mov.u32 %r1274, %r1803;
	mov.u32 %r1275, %r1803;
	mov.u32 %r1276, %r1803;
	@%p25 ld.global.v4.b32 { %r1273, %r1274, %r1275, %r1276 }, [ %rd21 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r1281, %r1803;
	mov.u32 %r1282, %r1803;
	mov.u32 %r1283, %r1803;
	mov.u32 %r1284, %r1803;
	@%p26 ld.global.v4.b32 { %r1281, %r1282, %r1283, %r1284 }, [ %rd22 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r1289, %r1803;
	mov.u32 %r1290, %r1803;
	mov.u32 %r1291, %r1803;
	mov.u32 %r1292, %r1803;
	@%p27 ld.global.v4.b32 { %r1289, %r1290, %r1291, %r1292 }, [ %rd23 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r1297, %r1803;
	mov.u32 %r1298, %r1803;
	mov.u32 %r1299, %r1803;
	mov.u32 %r1300, %r1803;
	@%p28 ld.global.v4.b32 { %r1297, %r1298, %r1299, %r1300 }, [ %rd24 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r1305, %r1803;
	mov.u32 %r1306, %r1803;
	mov.u32 %r1307, %r1803;
	mov.u32 %r1308, %r1803;
	@%p29 ld.global.v4.b32 { %r1305, %r1306, %r1307, %r1308 }, [ %rd25 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r1313, %r1803;
	mov.u32 %r1314, %r1803;
	mov.u32 %r1315, %r1803;
	mov.u32 %r1316, %r1803;
	@%p30 ld.global.v4.b32 { %r1313, %r1314, %r1315, %r1316 }, [ %rd26 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r1321, %r1803;
	mov.u32 %r1322, %r1803;
	mov.u32 %r1323, %r1803;
	mov.u32 %r1324, %r1803;
	@%p31 ld.global.v4.b32 { %r1321, %r1322, %r1323, %r1324 }, [ %rd27 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r1329, %r1803;
	mov.u32 %r1330, %r1803;
	mov.u32 %r1331, %r1803;
	mov.u32 %r1332, %r1803;
	@%p32 ld.global.v4.b32 { %r1329, %r1330, %r1331, %r1332 }, [ %rd28 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r1337, %r1803;
	mov.u32 %r1338, %r1803;
	mov.u32 %r1339, %r1803;
	mov.u32 %r1340, %r1803;
	@%p33 ld.global.v4.b32 { %r1337, %r1338, %r1339, %r1340 }, [ %rd29 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r1345, %r1803;
	mov.u32 %r1346, %r1803;
	mov.u32 %r1347, %r1803;
	mov.u32 %r1348, %r1803;
	@%p34 ld.global.v4.b32 { %r1345, %r1346, %r1347, %r1348 }, [ %rd30 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r1353, %r1803;
	mov.u32 %r1354, %r1803;
	mov.u32 %r1355, %r1803;
	mov.u32 %r1356, %r1803;
	@%p35 ld.global.v4.b32 { %r1353, %r1354, %r1355, %r1356 }, [ %rd31 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r1361, %r1803;
	mov.u32 %r1362, %r1803;
	mov.u32 %r1363, %r1803;
	mov.u32 %r1364, %r1803;
	@%p36 ld.global.v4.b32 { %r1361, %r1362, %r1363, %r1364 }, [ %rd32 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r1369, %r1803;
	mov.u32 %r1370, %r1803;
	mov.u32 %r1371, %r1803;
	mov.u32 %r1372, %r1803;
	@%p37 ld.global.v4.b32 { %r1369, %r1370, %r1371, %r1372 }, [ %rd33 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r1377, %r1803;
	mov.u32 %r1378, %r1803;
	mov.u32 %r1379, %r1803;
	mov.u32 %r1380, %r1803;
	@%p38 ld.global.v4.b32 { %r1377, %r1378, %r1379, %r1380 }, [ %rd34 + 0 ];
	// end inline asm
	.loc	1 58 110                        // ffa_triton_v1016-2.py:58:110
	bar.sync 	0;
	st.shared.v4.b32 	[%r2631], {%r1257, %r1258, %r1259, %r1260};
	st.shared.v4.b32 	[%r2631+2048], {%r1265, %r1266, %r1267, %r1268};
	st.shared.v4.b32 	[%r2631+4096], {%r1273, %r1274, %r1275, %r1276};
	st.shared.v4.b32 	[%r2631+6144], {%r1281, %r1282, %r1283, %r1284};
	st.shared.v4.b32 	[%r2631+8192], {%r1289, %r1290, %r1291, %r1292};
	st.shared.v4.b32 	[%r2631+10240], {%r1297, %r1298, %r1299, %r1300};
	st.shared.v4.b32 	[%r2631+12288], {%r1305, %r1306, %r1307, %r1308};
	st.shared.v4.b32 	[%r2631+14336], {%r1313, %r1314, %r1315, %r1316};
	st.shared.v4.b32 	[%r2631+16384], {%r1321, %r1322, %r1323, %r1324};
	st.shared.v4.b32 	[%r2631+18432], {%r1329, %r1330, %r1331, %r1332};
	st.shared.v4.b32 	[%r2631+20480], {%r1337, %r1338, %r1339, %r1340};
	st.shared.v4.b32 	[%r2631+22528], {%r1345, %r1346, %r1347, %r1348};
	st.shared.v4.b32 	[%r2631+24576], {%r1353, %r1354, %r1355, %r1356};
	st.shared.v4.b32 	[%r2631+26624], {%r1361, %r1362, %r1363, %r1364};
	st.shared.v4.b32 	[%r2631+28672], {%r1369, %r1370, %r1371, %r1372};
	st.shared.v4.b32 	[%r2631+30720], {%r1377, %r1378, %r1379, %r1380};
	bar.sync 	0;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1385, %r1386, %r1387, %r1388}, [%r149];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1390, %r1391, %r1392, %r1393}, [%r154];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1395, %r1396, %r1397, %r1398}, [%r159];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1400, %r1401, %r1402, %r1403}, [%r164];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1405, %r1406, %r1407, %r1408}, [%r169];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1410, %r1411, %r1412, %r1413}, [%r174];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1415, %r1416, %r1417, %r1418}, [%r179];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1420, %r1421, %r1422, %r1423}, [%r184];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1425, %r1426, %r1427, %r1428}, [%r189];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1430, %r1431, %r1432, %r1433}, [%r194];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1435, %r1436, %r1437, %r1438}, [%r199];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1440, %r1441, %r1442, %r1443}, [%r204];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1445, %r1446, %r1447, %r1448}, [%r209];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1450, %r1451, %r1452, %r1453}, [%r214];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1455, %r1456, %r1457, %r1458}, [%r219];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1460, %r1461, %r1462, %r1463}, [%r224];
	// end inline asm
	cvt.u16.u32 	%rs129, %r1385;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1605, %rs129; 
	
	// end inline asm
	mov.b32 	{_, %rs130}, %r1385;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1717, %rs130; 
	
	// end inline asm
	cvt.u16.u32 	%rs131, %r1386;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1606, %rs131; 
	
	// end inline asm
	mov.b32 	{_, %rs132}, %r1386;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1718, %rs132; 
	
	// end inline asm
	cvt.u16.u32 	%rs133, %r1387;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1829, %rs133; 
	
	// end inline asm
	mov.b32 	{_, %rs134}, %r1387;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1941, %rs134; 
	
	// end inline asm
	cvt.u16.u32 	%rs135, %r1388;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1830, %rs135; 
	
	// end inline asm
	mov.b32 	{_, %rs136}, %r1388;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1942, %rs136; 
	
	// end inline asm
	cvt.u16.u32 	%rs137, %r1390;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2053, %rs137; 
	
	// end inline asm
	mov.b32 	{_, %rs138}, %r1390;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2165, %rs138; 
	
	// end inline asm
	cvt.u16.u32 	%rs139, %r1391;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2054, %rs139; 
	
	// end inline asm
	mov.b32 	{_, %rs140}, %r1391;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2166, %rs140; 
	
	// end inline asm
	cvt.u16.u32 	%rs141, %r1392;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2277, %rs141; 
	
	// end inline asm
	mov.b32 	{_, %rs142}, %r1392;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2389, %rs142; 
	
	// end inline asm
	cvt.u16.u32 	%rs143, %r1393;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2278, %rs143; 
	
	// end inline asm
	mov.b32 	{_, %rs144}, %r1393;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2390, %rs144; 
	
	// end inline asm
	cvt.u16.u32 	%rs145, %r1395;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1619, %rs145; 
	
	// end inline asm
	mov.b32 	{_, %rs146}, %r1395;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1731, %rs146; 
	
	// end inline asm
	cvt.u16.u32 	%rs147, %r1396;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1620, %rs147; 
	
	// end inline asm
	mov.b32 	{_, %rs148}, %r1396;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1732, %rs148; 
	
	// end inline asm
	cvt.u16.u32 	%rs149, %r1397;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1843, %rs149; 
	
	// end inline asm
	mov.b32 	{_, %rs150}, %r1397;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1955, %rs150; 
	
	// end inline asm
	cvt.u16.u32 	%rs151, %r1398;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1844, %rs151; 
	
	// end inline asm
	mov.b32 	{_, %rs152}, %r1398;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1956, %rs152; 
	
	// end inline asm
	cvt.u16.u32 	%rs153, %r1400;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2067, %rs153; 
	
	// end inline asm
	mov.b32 	{_, %rs154}, %r1400;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2179, %rs154; 
	
	// end inline asm
	cvt.u16.u32 	%rs155, %r1401;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2068, %rs155; 
	
	// end inline asm
	mov.b32 	{_, %rs156}, %r1401;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2180, %rs156; 
	
	// end inline asm
	cvt.u16.u32 	%rs157, %r1402;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2291, %rs157; 
	
	// end inline asm
	mov.b32 	{_, %rs158}, %r1402;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2403, %rs158; 
	
	// end inline asm
	cvt.u16.u32 	%rs159, %r1403;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2292, %rs159; 
	
	// end inline asm
	mov.b32 	{_, %rs160}, %r1403;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2404, %rs160; 
	
	// end inline asm
	cvt.u16.u32 	%rs161, %r1405;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1633, %rs161; 
	
	// end inline asm
	mov.b32 	{_, %rs162}, %r1405;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1745, %rs162; 
	
	// end inline asm
	cvt.u16.u32 	%rs163, %r1406;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1634, %rs163; 
	
	// end inline asm
	mov.b32 	{_, %rs164}, %r1406;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1746, %rs164; 
	
	// end inline asm
	cvt.u16.u32 	%rs165, %r1407;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1857, %rs165; 
	
	// end inline asm
	mov.b32 	{_, %rs166}, %r1407;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1969, %rs166; 
	
	// end inline asm
	cvt.u16.u32 	%rs167, %r1408;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1858, %rs167; 
	
	// end inline asm
	mov.b32 	{_, %rs168}, %r1408;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1970, %rs168; 
	
	// end inline asm
	cvt.u16.u32 	%rs169, %r1410;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2081, %rs169; 
	
	// end inline asm
	mov.b32 	{_, %rs170}, %r1410;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2193, %rs170; 
	
	// end inline asm
	cvt.u16.u32 	%rs171, %r1411;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2082, %rs171; 
	
	// end inline asm
	mov.b32 	{_, %rs172}, %r1411;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2194, %rs172; 
	
	// end inline asm
	cvt.u16.u32 	%rs173, %r1412;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2305, %rs173; 
	
	// end inline asm
	mov.b32 	{_, %rs174}, %r1412;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2417, %rs174; 
	
	// end inline asm
	cvt.u16.u32 	%rs175, %r1413;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2306, %rs175; 
	
	// end inline asm
	mov.b32 	{_, %rs176}, %r1413;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2418, %rs176; 
	
	// end inline asm
	cvt.u16.u32 	%rs177, %r1415;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1647, %rs177; 
	
	// end inline asm
	mov.b32 	{_, %rs178}, %r1415;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1759, %rs178; 
	
	// end inline asm
	cvt.u16.u32 	%rs179, %r1416;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1648, %rs179; 
	
	// end inline asm
	mov.b32 	{_, %rs180}, %r1416;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1760, %rs180; 
	
	// end inline asm
	cvt.u16.u32 	%rs181, %r1417;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1871, %rs181; 
	
	// end inline asm
	mov.b32 	{_, %rs182}, %r1417;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1983, %rs182; 
	
	// end inline asm
	cvt.u16.u32 	%rs183, %r1418;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1872, %rs183; 
	
	// end inline asm
	mov.b32 	{_, %rs184}, %r1418;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1984, %rs184; 
	
	// end inline asm
	cvt.u16.u32 	%rs185, %r1420;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2095, %rs185; 
	
	// end inline asm
	mov.b32 	{_, %rs186}, %r1420;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2207, %rs186; 
	
	// end inline asm
	cvt.u16.u32 	%rs187, %r1421;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2096, %rs187; 
	
	// end inline asm
	mov.b32 	{_, %rs188}, %r1421;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2208, %rs188; 
	
	// end inline asm
	cvt.u16.u32 	%rs189, %r1422;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2319, %rs189; 
	
	// end inline asm
	mov.b32 	{_, %rs190}, %r1422;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2431, %rs190; 
	
	// end inline asm
	cvt.u16.u32 	%rs191, %r1423;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2320, %rs191; 
	
	// end inline asm
	mov.b32 	{_, %rs192}, %r1423;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2432, %rs192; 
	
	// end inline asm
	cvt.u16.u32 	%rs193, %r1425;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1661, %rs193; 
	
	// end inline asm
	mov.b32 	{_, %rs194}, %r1425;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1773, %rs194; 
	
	// end inline asm
	cvt.u16.u32 	%rs195, %r1426;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1662, %rs195; 
	
	// end inline asm
	mov.b32 	{_, %rs196}, %r1426;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1774, %rs196; 
	
	// end inline asm
	cvt.u16.u32 	%rs197, %r1427;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1885, %rs197; 
	
	// end inline asm
	mov.b32 	{_, %rs198}, %r1427;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1997, %rs198; 
	
	// end inline asm
	cvt.u16.u32 	%rs199, %r1428;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1886, %rs199; 
	
	// end inline asm
	mov.b32 	{_, %rs200}, %r1428;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1998, %rs200; 
	
	// end inline asm
	cvt.u16.u32 	%rs201, %r1430;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2109, %rs201; 
	
	// end inline asm
	mov.b32 	{_, %rs202}, %r1430;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2221, %rs202; 
	
	// end inline asm
	cvt.u16.u32 	%rs203, %r1431;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2110, %rs203; 
	
	// end inline asm
	mov.b32 	{_, %rs204}, %r1431;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2222, %rs204; 
	
	// end inline asm
	cvt.u16.u32 	%rs205, %r1432;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2333, %rs205; 
	
	// end inline asm
	mov.b32 	{_, %rs206}, %r1432;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2445, %rs206; 
	
	// end inline asm
	cvt.u16.u32 	%rs207, %r1433;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2334, %rs207; 
	
	// end inline asm
	mov.b32 	{_, %rs208}, %r1433;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2446, %rs208; 
	
	// end inline asm
	cvt.u16.u32 	%rs209, %r1435;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1675, %rs209; 
	
	// end inline asm
	mov.b32 	{_, %rs210}, %r1435;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1787, %rs210; 
	
	// end inline asm
	cvt.u16.u32 	%rs211, %r1436;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1676, %rs211; 
	
	// end inline asm
	mov.b32 	{_, %rs212}, %r1436;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1788, %rs212; 
	
	// end inline asm
	cvt.u16.u32 	%rs213, %r1437;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1899, %rs213; 
	
	// end inline asm
	mov.b32 	{_, %rs214}, %r1437;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2011, %rs214; 
	
	// end inline asm
	cvt.u16.u32 	%rs215, %r1438;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1900, %rs215; 
	
	// end inline asm
	mov.b32 	{_, %rs216}, %r1438;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2012, %rs216; 
	
	// end inline asm
	cvt.u16.u32 	%rs217, %r1440;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2123, %rs217; 
	
	// end inline asm
	mov.b32 	{_, %rs218}, %r1440;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2235, %rs218; 
	
	// end inline asm
	cvt.u16.u32 	%rs219, %r1441;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2124, %rs219; 
	
	// end inline asm
	mov.b32 	{_, %rs220}, %r1441;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2236, %rs220; 
	
	// end inline asm
	cvt.u16.u32 	%rs221, %r1442;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2347, %rs221; 
	
	// end inline asm
	mov.b32 	{_, %rs222}, %r1442;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2459, %rs222; 
	
	// end inline asm
	cvt.u16.u32 	%rs223, %r1443;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2348, %rs223; 
	
	// end inline asm
	mov.b32 	{_, %rs224}, %r1443;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2460, %rs224; 
	
	// end inline asm
	cvt.u16.u32 	%rs225, %r1445;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1689, %rs225; 
	
	// end inline asm
	mov.b32 	{_, %rs226}, %r1445;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1801, %rs226; 
	
	// end inline asm
	cvt.u16.u32 	%rs227, %r1446;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1690, %rs227; 
	
	// end inline asm
	mov.b32 	{_, %rs228}, %r1446;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1802, %rs228; 
	
	// end inline asm
	cvt.u16.u32 	%rs229, %r1447;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1913, %rs229; 
	
	// end inline asm
	mov.b32 	{_, %rs230}, %r1447;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2025, %rs230; 
	
	// end inline asm
	cvt.u16.u32 	%rs231, %r1448;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1914, %rs231; 
	
	// end inline asm
	mov.b32 	{_, %rs232}, %r1448;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2026, %rs232; 
	
	// end inline asm
	cvt.u16.u32 	%rs233, %r1450;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2137, %rs233; 
	
	// end inline asm
	mov.b32 	{_, %rs234}, %r1450;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2249, %rs234; 
	
	// end inline asm
	cvt.u16.u32 	%rs235, %r1451;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2138, %rs235; 
	
	// end inline asm
	mov.b32 	{_, %rs236}, %r1451;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2250, %rs236; 
	
	// end inline asm
	cvt.u16.u32 	%rs237, %r1452;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2361, %rs237; 
	
	// end inline asm
	mov.b32 	{_, %rs238}, %r1452;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2473, %rs238; 
	
	// end inline asm
	cvt.u16.u32 	%rs239, %r1453;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2362, %rs239; 
	
	// end inline asm
	mov.b32 	{_, %rs240}, %r1453;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2474, %rs240; 
	
	// end inline asm
	cvt.u16.u32 	%rs241, %r1455;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1703, %rs241; 
	
	// end inline asm
	mov.b32 	{_, %rs242}, %r1455;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1815, %rs242; 
	
	// end inline asm
	cvt.u16.u32 	%rs243, %r1456;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1704, %rs243; 
	
	// end inline asm
	mov.b32 	{_, %rs244}, %r1456;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1816, %rs244; 
	
	// end inline asm
	cvt.u16.u32 	%rs245, %r1457;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1927, %rs245; 
	
	// end inline asm
	mov.b32 	{_, %rs246}, %r1457;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2039, %rs246; 
	
	// end inline asm
	cvt.u16.u32 	%rs247, %r1458;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r1928, %rs247; 
	
	// end inline asm
	mov.b32 	{_, %rs248}, %r1458;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2040, %rs248; 
	
	// end inline asm
	cvt.u16.u32 	%rs249, %r1460;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2151, %rs249; 
	
	// end inline asm
	mov.b32 	{_, %rs250}, %r1460;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2263, %rs250; 
	
	// end inline asm
	cvt.u16.u32 	%rs251, %r1461;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2152, %rs251; 
	
	// end inline asm
	mov.b32 	{_, %rs252}, %r1461;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2264, %rs252; 
	
	// end inline asm
	cvt.u16.u32 	%rs253, %r1462;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2375, %rs253; 
	
	// end inline asm
	mov.b32 	{_, %rs254}, %r1462;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2487, %rs254; 
	
	// end inline asm
	cvt.u16.u32 	%rs255, %r1463;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2376, %rs255; 
	
	// end inline asm
	mov.b32 	{_, %rs256}, %r1463;
	// begin inline asm
	cvt.rn.f16x2.e5m2x2 %r2488, %rs256; 
	
	// end inline asm
	.loc	1 59 26                         // ffa_triton_v1016-2.py:59:26
	mov.b32 	%r1705, %r1803;
	mov.b32 	%r1706, %r1803;
	mov.b32 	%r1707, %r1803;
	mov.b32 	%r1708, %r1803;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1705, %r1706, %r1707, %r1708 }, { %r361, %r362, %r363, %r364 }, { %r1605, %r1606 }, { %r1705, %r1706, %r1707, %r1708 };
	// end inline asm
	mov.b32 	%r1719, %r1803;
	mov.b32 	%r1720, %r1803;
	mov.b32 	%r1721, %r1803;
	mov.b32 	%r1722, %r1803;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1719, %r1720, %r1721, %r1722 }, { %r361, %r362, %r363, %r364 }, { %r1619, %r1620 }, { %r1719, %r1720, %r1721, %r1722 };
	// end inline asm
	mov.b32 	%r1733, %r1803;
	mov.b32 	%r1734, %r1803;
	mov.b32 	%r1735, %r1803;
	mov.b32 	%r1736, %r1803;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1733, %r1734, %r1735, %r1736 }, { %r361, %r362, %r363, %r364 }, { %r1633, %r1634 }, { %r1733, %r1734, %r1735, %r1736 };
	// end inline asm
	mov.b32 	%r1747, %r1803;
	mov.b32 	%r1748, %r1803;
	mov.b32 	%r1749, %r1803;
	mov.b32 	%r1750, %r1803;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1747, %r1748, %r1749, %r1750 }, { %r361, %r362, %r363, %r364 }, { %r1647, %r1648 }, { %r1747, %r1748, %r1749, %r1750 };
	// end inline asm
	mov.b32 	%r1761, %r1803;
	mov.b32 	%r1762, %r1803;
	mov.b32 	%r1763, %r1803;
	mov.b32 	%r1764, %r1803;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1761, %r1762, %r1763, %r1764 }, { %r361, %r362, %r363, %r364 }, { %r1661, %r1662 }, { %r1761, %r1762, %r1763, %r1764 };
	// end inline asm
	mov.b32 	%r1775, %r1803;
	mov.b32 	%r1776, %r1803;
	mov.b32 	%r1777, %r1803;
	mov.b32 	%r1778, %r1803;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1775, %r1776, %r1777, %r1778 }, { %r361, %r362, %r363, %r364 }, { %r1675, %r1676 }, { %r1775, %r1776, %r1777, %r1778 };
	// end inline asm
	mov.b32 	%r1789, %r1803;
	mov.b32 	%r1790, %r1803;
	mov.b32 	%r1791, %r1803;
	mov.b32 	%r1792, %r1803;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1789, %r1790, %r1791, %r1792 }, { %r361, %r362, %r363, %r364 }, { %r1689, %r1690 }, { %r1789, %r1790, %r1791, %r1792 };
	// end inline asm
	mov.b32 	%r1804, %r1803;
	mov.b32 	%r1805, %r1803;
	mov.b32 	%r1806, %r1803;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1803, %r1804, %r1805, %r1806 }, { %r361, %r362, %r363, %r364 }, { %r1703, %r1704 }, { %r1803, %r1804, %r1805, %r1806 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1705, %r1706, %r1707, %r1708 }, { %r473, %r474, %r475, %r476 }, { %r1717, %r1718 }, { %r1705, %r1706, %r1707, %r1708 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1719, %r1720, %r1721, %r1722 }, { %r473, %r474, %r475, %r476 }, { %r1731, %r1732 }, { %r1719, %r1720, %r1721, %r1722 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1733, %r1734, %r1735, %r1736 }, { %r473, %r474, %r475, %r476 }, { %r1745, %r1746 }, { %r1733, %r1734, %r1735, %r1736 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1747, %r1748, %r1749, %r1750 }, { %r473, %r474, %r475, %r476 }, { %r1759, %r1760 }, { %r1747, %r1748, %r1749, %r1750 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1761, %r1762, %r1763, %r1764 }, { %r473, %r474, %r475, %r476 }, { %r1773, %r1774 }, { %r1761, %r1762, %r1763, %r1764 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1775, %r1776, %r1777, %r1778 }, { %r473, %r474, %r475, %r476 }, { %r1787, %r1788 }, { %r1775, %r1776, %r1777, %r1778 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1789, %r1790, %r1791, %r1792 }, { %r473, %r474, %r475, %r476 }, { %r1801, %r1802 }, { %r1789, %r1790, %r1791, %r1792 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1803, %r1804, %r1805, %r1806 }, { %r473, %r474, %r475, %r476 }, { %r1815, %r1816 }, { %r1803, %r1804, %r1805, %r1806 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1705, %r1706, %r1707, %r1708 }, { %r585, %r586, %r587, %r588 }, { %r1829, %r1830 }, { %r1705, %r1706, %r1707, %r1708 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1719, %r1720, %r1721, %r1722 }, { %r585, %r586, %r587, %r588 }, { %r1843, %r1844 }, { %r1719, %r1720, %r1721, %r1722 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1733, %r1734, %r1735, %r1736 }, { %r585, %r586, %r587, %r588 }, { %r1857, %r1858 }, { %r1733, %r1734, %r1735, %r1736 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1747, %r1748, %r1749, %r1750 }, { %r585, %r586, %r587, %r588 }, { %r1871, %r1872 }, { %r1747, %r1748, %r1749, %r1750 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1761, %r1762, %r1763, %r1764 }, { %r585, %r586, %r587, %r588 }, { %r1885, %r1886 }, { %r1761, %r1762, %r1763, %r1764 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1775, %r1776, %r1777, %r1778 }, { %r585, %r586, %r587, %r588 }, { %r1899, %r1900 }, { %r1775, %r1776, %r1777, %r1778 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1789, %r1790, %r1791, %r1792 }, { %r585, %r586, %r587, %r588 }, { %r1913, %r1914 }, { %r1789, %r1790, %r1791, %r1792 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1803, %r1804, %r1805, %r1806 }, { %r585, %r586, %r587, %r588 }, { %r1927, %r1928 }, { %r1803, %r1804, %r1805, %r1806 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1705, %r1706, %r1707, %r1708 }, { %r697, %r698, %r699, %r700 }, { %r1941, %r1942 }, { %r1705, %r1706, %r1707, %r1708 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1719, %r1720, %r1721, %r1722 }, { %r697, %r698, %r699, %r700 }, { %r1955, %r1956 }, { %r1719, %r1720, %r1721, %r1722 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1733, %r1734, %r1735, %r1736 }, { %r697, %r698, %r699, %r700 }, { %r1969, %r1970 }, { %r1733, %r1734, %r1735, %r1736 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1747, %r1748, %r1749, %r1750 }, { %r697, %r698, %r699, %r700 }, { %r1983, %r1984 }, { %r1747, %r1748, %r1749, %r1750 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1761, %r1762, %r1763, %r1764 }, { %r697, %r698, %r699, %r700 }, { %r1997, %r1998 }, { %r1761, %r1762, %r1763, %r1764 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1775, %r1776, %r1777, %r1778 }, { %r697, %r698, %r699, %r700 }, { %r2011, %r2012 }, { %r1775, %r1776, %r1777, %r1778 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1789, %r1790, %r1791, %r1792 }, { %r697, %r698, %r699, %r700 }, { %r2025, %r2026 }, { %r1789, %r1790, %r1791, %r1792 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1803, %r1804, %r1805, %r1806 }, { %r697, %r698, %r699, %r700 }, { %r2039, %r2040 }, { %r1803, %r1804, %r1805, %r1806 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1705, %r1706, %r1707, %r1708 }, { %r809, %r810, %r811, %r812 }, { %r2053, %r2054 }, { %r1705, %r1706, %r1707, %r1708 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1719, %r1720, %r1721, %r1722 }, { %r809, %r810, %r811, %r812 }, { %r2067, %r2068 }, { %r1719, %r1720, %r1721, %r1722 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1733, %r1734, %r1735, %r1736 }, { %r809, %r810, %r811, %r812 }, { %r2081, %r2082 }, { %r1733, %r1734, %r1735, %r1736 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1747, %r1748, %r1749, %r1750 }, { %r809, %r810, %r811, %r812 }, { %r2095, %r2096 }, { %r1747, %r1748, %r1749, %r1750 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1761, %r1762, %r1763, %r1764 }, { %r809, %r810, %r811, %r812 }, { %r2109, %r2110 }, { %r1761, %r1762, %r1763, %r1764 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1775, %r1776, %r1777, %r1778 }, { %r809, %r810, %r811, %r812 }, { %r2123, %r2124 }, { %r1775, %r1776, %r1777, %r1778 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1789, %r1790, %r1791, %r1792 }, { %r809, %r810, %r811, %r812 }, { %r2137, %r2138 }, { %r1789, %r1790, %r1791, %r1792 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1803, %r1804, %r1805, %r1806 }, { %r809, %r810, %r811, %r812 }, { %r2151, %r2152 }, { %r1803, %r1804, %r1805, %r1806 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1705, %r1706, %r1707, %r1708 }, { %r921, %r922, %r923, %r924 }, { %r2165, %r2166 }, { %r1705, %r1706, %r1707, %r1708 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1719, %r1720, %r1721, %r1722 }, { %r921, %r922, %r923, %r924 }, { %r2179, %r2180 }, { %r1719, %r1720, %r1721, %r1722 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1733, %r1734, %r1735, %r1736 }, { %r921, %r922, %r923, %r924 }, { %r2193, %r2194 }, { %r1733, %r1734, %r1735, %r1736 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1747, %r1748, %r1749, %r1750 }, { %r921, %r922, %r923, %r924 }, { %r2207, %r2208 }, { %r1747, %r1748, %r1749, %r1750 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1761, %r1762, %r1763, %r1764 }, { %r921, %r922, %r923, %r924 }, { %r2221, %r2222 }, { %r1761, %r1762, %r1763, %r1764 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1775, %r1776, %r1777, %r1778 }, { %r921, %r922, %r923, %r924 }, { %r2235, %r2236 }, { %r1775, %r1776, %r1777, %r1778 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1789, %r1790, %r1791, %r1792 }, { %r921, %r922, %r923, %r924 }, { %r2249, %r2250 }, { %r1789, %r1790, %r1791, %r1792 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1803, %r1804, %r1805, %r1806 }, { %r921, %r922, %r923, %r924 }, { %r2263, %r2264 }, { %r1803, %r1804, %r1805, %r1806 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1705, %r1706, %r1707, %r1708 }, { %r1033, %r1034, %r1035, %r1036 }, { %r2277, %r2278 }, { %r1705, %r1706, %r1707, %r1708 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1719, %r1720, %r1721, %r1722 }, { %r1033, %r1034, %r1035, %r1036 }, { %r2291, %r2292 }, { %r1719, %r1720, %r1721, %r1722 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1733, %r1734, %r1735, %r1736 }, { %r1033, %r1034, %r1035, %r1036 }, { %r2305, %r2306 }, { %r1733, %r1734, %r1735, %r1736 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1747, %r1748, %r1749, %r1750 }, { %r1033, %r1034, %r1035, %r1036 }, { %r2319, %r2320 }, { %r1747, %r1748, %r1749, %r1750 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1761, %r1762, %r1763, %r1764 }, { %r1033, %r1034, %r1035, %r1036 }, { %r2333, %r2334 }, { %r1761, %r1762, %r1763, %r1764 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1775, %r1776, %r1777, %r1778 }, { %r1033, %r1034, %r1035, %r1036 }, { %r2347, %r2348 }, { %r1775, %r1776, %r1777, %r1778 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1789, %r1790, %r1791, %r1792 }, { %r1033, %r1034, %r1035, %r1036 }, { %r2361, %r2362 }, { %r1789, %r1790, %r1791, %r1792 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1803, %r1804, %r1805, %r1806 }, { %r1033, %r1034, %r1035, %r1036 }, { %r2375, %r2376 }, { %r1803, %r1804, %r1805, %r1806 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1705, %r1706, %r1707, %r1708 }, { %r1145, %r1146, %r1147, %r1148 }, { %r2389, %r2390 }, { %r1705, %r1706, %r1707, %r1708 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1719, %r1720, %r1721, %r1722 }, { %r1145, %r1146, %r1147, %r1148 }, { %r2403, %r2404 }, { %r1719, %r1720, %r1721, %r1722 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1733, %r1734, %r1735, %r1736 }, { %r1145, %r1146, %r1147, %r1148 }, { %r2417, %r2418 }, { %r1733, %r1734, %r1735, %r1736 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1747, %r1748, %r1749, %r1750 }, { %r1145, %r1146, %r1147, %r1148 }, { %r2431, %r2432 }, { %r1747, %r1748, %r1749, %r1750 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1761, %r1762, %r1763, %r1764 }, { %r1145, %r1146, %r1147, %r1148 }, { %r2445, %r2446 }, { %r1761, %r1762, %r1763, %r1764 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1775, %r1776, %r1777, %r1778 }, { %r1145, %r1146, %r1147, %r1148 }, { %r2459, %r2460 }, { %r1775, %r1776, %r1777, %r1778 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1789, %r1790, %r1791, %r1792 }, { %r1145, %r1146, %r1147, %r1148 }, { %r2473, %r2474 }, { %r1789, %r1790, %r1791, %r1792 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1803, %r1804, %r1805, %r1806 }, { %r1145, %r1146, %r1147, %r1148 }, { %r2487, %r2488 }, { %r1803, %r1804, %r1805, %r1806 };
	// end inline asm
	.loc	1 59 59                         // ffa_triton_v1016-2.py:59:59
	mul.f32 	%r2850, %r2500, %r1705;
	mul.f32 	%r2851, %r2500, %r1706;
	mul.f32 	%r2852, %r2500, %r1707;
	mul.f32 	%r2853, %r2500, %r1708;
	mul.f32 	%r2854, %r2500, %r1719;
	mul.f32 	%r2855, %r2500, %r1720;
	mul.f32 	%r2856, %r2500, %r1721;
	mul.f32 	%r2857, %r2500, %r1722;
	mul.f32 	%r2858, %r2500, %r1733;
	mul.f32 	%r2859, %r2500, %r1734;
	mul.f32 	%r2860, %r2500, %r1735;
	mul.f32 	%r2861, %r2500, %r1736;
	mul.f32 	%r2862, %r2500, %r1747;
	mul.f32 	%r2863, %r2500, %r1748;
	mul.f32 	%r2864, %r2500, %r1749;
	mul.f32 	%r2865, %r2500, %r1750;
	mul.f32 	%r2866, %r2500, %r1761;
	mul.f32 	%r2867, %r2500, %r1762;
	mul.f32 	%r2868, %r2500, %r1763;
	mul.f32 	%r2869, %r2500, %r1764;
	mul.f32 	%r2870, %r2500, %r1775;
	mul.f32 	%r2871, %r2500, %r1776;
	mul.f32 	%r2872, %r2500, %r1777;
	mul.f32 	%r2873, %r2500, %r1778;
	mul.f32 	%r2874, %r2500, %r1789;
	mul.f32 	%r2875, %r2500, %r1790;
	mul.f32 	%r2876, %r2500, %r1791;
	mul.f32 	%r2877, %r2500, %r1792;
	mul.f32 	%r2878, %r2500, %r1803;
	mul.f32 	%r2879, %r2500, %r1804;
	mul.f32 	%r2880, %r2500, %r1805;
	mul.f32 	%r2881, %r2500, %r1806;
	.loc	1 59 67                         // ffa_triton_v1016-2.py:59:67
	mul.f32 	%r2882, %r2850, 0f3FB8AA3B;
	mul.f32 	%r2883, %r2851, 0f3FB8AA3B;
	mul.f32 	%r2884, %r2852, 0f3FB8AA3B;
	mul.f32 	%r2885, %r2853, 0f3FB8AA3B;
	mul.f32 	%r2886, %r2854, 0f3FB8AA3B;
	mul.f32 	%r2887, %r2855, 0f3FB8AA3B;
	mul.f32 	%r2888, %r2856, 0f3FB8AA3B;
	mul.f32 	%r2889, %r2857, 0f3FB8AA3B;
	mul.f32 	%r2890, %r2858, 0f3FB8AA3B;
	mul.f32 	%r2891, %r2859, 0f3FB8AA3B;
	mul.f32 	%r2892, %r2860, 0f3FB8AA3B;
	mul.f32 	%r2893, %r2861, 0f3FB8AA3B;
	mul.f32 	%r2894, %r2862, 0f3FB8AA3B;
	mul.f32 	%r2895, %r2863, 0f3FB8AA3B;
	mul.f32 	%r2896, %r2864, 0f3FB8AA3B;
	mul.f32 	%r2897, %r2865, 0f3FB8AA3B;
	mul.f32 	%r2898, %r2866, 0f3FB8AA3B;
	mul.f32 	%r2899, %r2867, 0f3FB8AA3B;
	mul.f32 	%r2900, %r2868, 0f3FB8AA3B;
	mul.f32 	%r2901, %r2869, 0f3FB8AA3B;
	mul.f32 	%r2902, %r2870, 0f3FB8AA3B;
	mul.f32 	%r2903, %r2871, 0f3FB8AA3B;
	mul.f32 	%r2904, %r2872, 0f3FB8AA3B;
	mul.f32 	%r2905, %r2873, 0f3FB8AA3B;
	mul.f32 	%r2906, %r2874, 0f3FB8AA3B;
	mul.f32 	%r2907, %r2875, 0f3FB8AA3B;
	mul.f32 	%r2908, %r2876, 0f3FB8AA3B;
	mul.f32 	%r2909, %r2877, 0f3FB8AA3B;
	mul.f32 	%r2910, %r2878, 0f3FB8AA3B;
	mul.f32 	%r2911, %r2879, 0f3FB8AA3B;
	mul.f32 	%r2912, %r2880, 0f3FB8AA3B;
	mul.f32 	%r2913, %r2881, 0f3FB8AA3B;
	.loc	1 60 44                         // ffa_triton_v1016-2.py:60:44
	selp.f32 	%r2914, %r2882, 0fFF800000, %p61;
	selp.f32 	%r2915, %r2883, 0fFF800000, %p62;
	selp.f32 	%r2916, %r2884, 0fFF800000, %p61;
	selp.f32 	%r2917, %r2885, 0fFF800000, %p62;
	selp.f32 	%r2918, %r2886, 0fFF800000, %p63;
	selp.f32 	%r2919, %r2887, 0fFF800000, %p64;
	selp.f32 	%r2920, %r2888, 0fFF800000, %p63;
	selp.f32 	%r2921, %r2889, 0fFF800000, %p64;
	selp.f32 	%r2922, %r2890, 0fFF800000, %p65;
	selp.f32 	%r2923, %r2891, 0fFF800000, %p66;
	selp.f32 	%r2924, %r2892, 0fFF800000, %p65;
	selp.f32 	%r2925, %r2893, 0fFF800000, %p66;
	selp.f32 	%r2926, %r2894, 0fFF800000, %p67;
	selp.f32 	%r2927, %r2895, 0fFF800000, %p68;
	selp.f32 	%r2928, %r2896, 0fFF800000, %p67;
	selp.f32 	%r2929, %r2897, 0fFF800000, %p68;
	selp.f32 	%r2930, %r2898, 0fFF800000, %p69;
	selp.f32 	%r2931, %r2899, 0fFF800000, %p70;
	selp.f32 	%r2932, %r2900, 0fFF800000, %p69;
	selp.f32 	%r2933, %r2901, 0fFF800000, %p70;
	selp.f32 	%r2934, %r2902, 0fFF800000, %p71;
	selp.f32 	%r2935, %r2903, 0fFF800000, %p72;
	selp.f32 	%r2936, %r2904, 0fFF800000, %p71;
	selp.f32 	%r2937, %r2905, 0fFF800000, %p72;
	selp.f32 	%r2938, %r2906, 0fFF800000, %p73;
	selp.f32 	%r2939, %r2907, 0fFF800000, %p74;
	selp.f32 	%r2940, %r2908, 0fFF800000, %p73;
	selp.f32 	%r2941, %r2909, 0fFF800000, %p74;
	selp.f32 	%r2942, %r2910, 0fFF800000, %p75;
	selp.f32 	%r2943, %r2911, 0fFF800000, %p76;
	selp.f32 	%r2944, %r2912, 0fFF800000, %p75;
	selp.f32 	%r2945, %r2913, 0fFF800000, %p76;
$L__tmp3:
	.loc	2 188 40                        // standard.py:188:40 @[ ffa_triton_v1016-2.py:61:16 ]
	bar.sync 	0;
	.loc	2 167 27                        // standard.py:167:27 @[ ffa_triton_v1016-2.py:61:16 ]
	max.f32 	%r2946, %r2914, %r2915;
	max.f32 	%r2947, %r2916, %r2917;
	max.f32 	%r2948, %r2946, %r2918;
	max.f32 	%r2949, %r2948, %r2919;
	max.f32 	%r2950, %r2947, %r2920;
	max.f32 	%r2951, %r2950, %r2921;
	max.f32 	%r2952, %r2949, %r2922;
	max.f32 	%r2953, %r2952, %r2923;
	max.f32 	%r2954, %r2951, %r2924;
	max.f32 	%r2955, %r2954, %r2925;
	max.f32 	%r2956, %r2953, %r2926;
	max.f32 	%r2957, %r2956, %r2927;
	max.f32 	%r2958, %r2955, %r2928;
	max.f32 	%r2959, %r2958, %r2929;
	max.f32 	%r2960, %r2957, %r2930;
	max.f32 	%r2961, %r2960, %r2931;
	max.f32 	%r2962, %r2959, %r2932;
	max.f32 	%r2963, %r2962, %r2933;
	max.f32 	%r2964, %r2961, %r2934;
	max.f32 	%r2965, %r2964, %r2935;
	max.f32 	%r2966, %r2963, %r2936;
	max.f32 	%r2967, %r2966, %r2937;
	max.f32 	%r2968, %r2965, %r2938;
	max.f32 	%r2969, %r2968, %r2939;
	max.f32 	%r2970, %r2967, %r2940;
	max.f32 	%r2971, %r2970, %r2941;
	max.f32 	%r2972, %r2969, %r2942;
	max.f32 	%r2973, %r2972, %r2943;
	max.f32 	%r2974, %r2971, %r2944;
	max.f32 	%r2975, %r2974, %r2945;
	.loc	2 188 40                        // standard.py:188:40 @[ ffa_triton_v1016-2.py:61:16 ]
	shfl.sync.bfly.b32 	%r2976, %r2973, 2, 31, -1;
	.loc	2 167 27                        // standard.py:167:27 @[ ffa_triton_v1016-2.py:61:16 ]
	max.f32 	%r2977, %r2973, %r2976;
	.loc	2 188 40                        // standard.py:188:40 @[ ffa_triton_v1016-2.py:61:16 ]
	shfl.sync.bfly.b32 	%r2978, %r2977, 1, 31, -1;
	.loc	2 167 27                        // standard.py:167:27 @[ ffa_triton_v1016-2.py:61:16 ]
	max.f32 	%r2490, %r2977, %r2978;
	.loc	2 188 40                        // standard.py:188:40 @[ ffa_triton_v1016-2.py:61:16 ]
	shfl.sync.bfly.b32 	%r2979, %r2975, 2, 31, -1;
	.loc	2 167 27                        // standard.py:167:27 @[ ffa_triton_v1016-2.py:61:16 ]
	max.f32 	%r2980, %r2975, %r2979;
	.loc	2 188 40                        // standard.py:188:40 @[ ffa_triton_v1016-2.py:61:16 ]
	shfl.sync.bfly.b32 	%r2981, %r2980, 1, 31, -1;
	.loc	2 167 27                        // standard.py:167:27 @[ ffa_triton_v1016-2.py:61:16 ]
	max.f32 	%r2492, %r2980, %r2981;
	.loc	2 188 40                        // standard.py:188:40 @[ ffa_triton_v1016-2.py:61:16 ]
	// begin inline asm
	@%p19 st.shared.b32 [ %r1249 + 0 ], %r2490;
	// end inline asm
	// begin inline asm
	@%p19 st.shared.b32 [ %r1251 + 0 ], %r2492;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p21 ld.shared.b32 %r2493, [ %r1254 + 0 ];
	// end inline asm
	shfl.sync.bfly.b32 	%r2982, %r2493, 2, 31, -1;
	.loc	2 167 27                        // standard.py:167:27 @[ ffa_triton_v1016-2.py:61:16 ]
	max.f32 	%r2983, %r2493, %r2982;
	.loc	2 188 40                        // standard.py:188:40 @[ ffa_triton_v1016-2.py:61:16 ]
	shfl.sync.bfly.b32 	%r2984, %r2983, 1, 31, -1;
	.loc	2 167 27                        // standard.py:167:27 @[ ffa_triton_v1016-2.py:61:16 ]
	max.f32 	%r2496, %r2983, %r2984;
	.loc	2 188 40                        // standard.py:188:40 @[ ffa_triton_v1016-2.py:61:16 ]
	// begin inline asm
	@%p22 st.shared.b32 [ %r1254 + 0 ], %r2496;
	// end inline asm
	bar.sync 	0;
	ld.shared.b32 	%r2985, [%r2791];
	ld.shared.b32 	%r2986, [%r2791+128];
$L__tmp4:
	.loc	1 63 24                         // ffa_triton_v1016-2.py:63:24
	max.f32 	%r2987, %r2798, %r2985;
	max.f32 	%r2988, %r2799, %r2986;
	.loc	1 64 14                         // ffa_triton_v1016-2.py:64:14
	sub.f32 	%r2989, %r2987, %r2505;
	sub.f32 	%r2990, %r2988, %r2505;
	.loc	1 65 30                         // ffa_triton_v1016-2.py:65:30
	mul.wide.s32 	%rd80, %r2511, 4;
	add.s64 	%rd35, %rd38, %rd80;
	.loc	1 65 47                         // ffa_triton_v1016-2.py:65:47
	bar.sync 	0;
	mad.lo.s32 	%r2991, %r2529, -12, %r2791;
	st.shared.b32 	[%r2991], %r2989;
	st.shared.b32 	[%r2991+32], %r2990;
	bar.sync 	0;
	shl.b32 	%r2992, %r2509, 2;
	add.s32 	%r2993, %r2519, %r2992;
	ld.shared.b32 	%r2497, [%r2993];
	and.b32 	%r2994, %r2501, 112;
	setp.eq.s32 	%p77, %r2994, 0;
	and.pred 	%p43, %p77, %p44;
	// begin inline asm
	@%p43 st.global.b32 [ %rd35 + 0 ], { %r2497 };
	// end inline asm
	.loc	1 65 4                          // ffa_triton_v1016-2.py:65:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/projects/ffa/huffkv-opencompass/opencompass/models/myModel/ffa/ffa_triton/ffa_triton_v1016-2.py"
	.file	2 "/inspire/hdd/project/embodied-multimodality/liuzhigeng-253108120105/miniconda/envs/ffa/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 292                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x11d DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 102                                 // DW_AT_name
.b8 102
.b8 97
.b8 95
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 118
.b8 49
.b8 48
.b8 49
.b8 54
.b8 45
.b8 50
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 105
.b8 110
.b8 115
.b8 112
.b8 105
.b8 114
.b8 101
.b8 47
.b8 104
.b8 100
.b8 100
.b8 47
.b8 112
.b8 114
.b8 111
.b8 106
.b8 101
.b8 99
.b8 116
.b8 47
.b8 101
.b8 109
.b8 98
.b8 111
.b8 100
.b8 105
.b8 101
.b8 100
.b8 45
.b8 109
.b8 117
.b8 108
.b8 116
.b8 105
.b8 109
.b8 111
.b8 100
.b8 97
.b8 108
.b8 105
.b8 116
.b8 121
.b8 47
.b8 108
.b8 105
.b8 117
.b8 122
.b8 104
.b8 105
.b8 103
.b8 101
.b8 110
.b8 103
.b8 45
.b8 50
.b8 53
.b8 51
.b8 49
.b8 48
.b8 56
.b8 49
.b8 50
.b8 48
.b8 49
.b8 48
.b8 53
.b8 47
.b8 112
.b8 114
.b8 111
.b8 106
.b8 101
.b8 99
.b8 116
.b8 115
.b8 47
.b8 102
.b8 102
.b8 97
.b8 47
.b8 104
.b8 117
.b8 102
.b8 102
.b8 107
.b8 118
.b8 45
.b8 111
.b8 112
.b8 101
.b8 110
.b8 99
.b8 111
.b8 109
.b8 112
.b8 97
.b8 115
.b8 115
.b8 47
.b8 111
.b8 112
.b8 101
.b8 110
.b8 99
.b8 111
.b8 109
.b8 112
.b8 97
.b8 115
.b8 115
.b8 47
.b8 109
.b8 111
.b8 100
.b8 101
.b8 108
.b8 115
.b8 47
.b8 109
.b8 121
.b8 77
.b8 111
.b8 100
.b8 101
.b8 108
.b8 47
.b8 102
.b8 102
.b8 97
.b8 47
.b8 102
.b8 102
.b8 97
.b8 95
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // Abbrev [2] 0xbd:0x24 DW_TAG_subprogram
.b8 97                                  // DW_AT_name
.b8 116
.b8 116
.b8 110
.b8 95
.b8 99
.b8 111
.b8 109
.b8 112
.b8 117
.b8 116
.b8 101
.b8 95
.b8 116
.b8 104
.b8 114
.b8 101
.b8 115
.b8 104
.b8 111
.b8 108
.b8 100
.b8 95
.b8 116
.b8 119
.b8 111
.b8 95
.b8 98
.b8 108
.b8 111
.b8 99
.b8 107
.b8 115
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xe1:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 189                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xf6:0x18 DW_TAG_inlined_subroutine
.b32 189                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 51                                  // DW_AT_call_line
.b8 16                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x10e:0x18 DW_TAG_inlined_subroutine
.b32 189                                // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 61                                  // DW_AT_call_line
.b8 16                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
